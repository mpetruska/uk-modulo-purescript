(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
// Generated by psc-bundle 0.10.7
var PS = {};
(function(exports) {
    "use strict";

  exports.arrayMap = function (f) {
    return function (arr) {
      var l = arr.length;
      var result = new Array(l);
      for (var i = 0; i < l; i++) {
        result[i] = f(arr[i]);
      }
      return result;
    };
  };
})(PS["Data.Functor"] = PS["Data.Functor"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Semigroupoid = function (compose) {
      this.compose = compose;
  };
  var semigroupoidFn = new Semigroupoid(function (f) {
      return function (g) {
          return function (x) {
              return f(g(x));
          };
      };
  });
  var compose = function (dict) {
      return dict.compose;
  };
  exports["Semigroupoid"] = Semigroupoid;
  exports["compose"] = compose;
  exports["semigroupoidFn"] = semigroupoidFn;
})(PS["Control.Semigroupoid"] = PS["Control.Semigroupoid"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Control_Semigroupoid = PS["Control.Semigroupoid"];        
  var Category = function (__superclass_Control$dotSemigroupoid$dotSemigroupoid_0, id) {
      this["__superclass_Control.Semigroupoid.Semigroupoid_0"] = __superclass_Control$dotSemigroupoid$dotSemigroupoid_0;
      this.id = id;
  };
  var id = function (dict) {
      return dict.id;
  };
  var categoryFn = new Category(function () {
      return Control_Semigroupoid.semigroupoidFn;
  }, function (x) {
      return x;
  });
  exports["Category"] = Category;
  exports["id"] = id;
  exports["categoryFn"] = categoryFn;
})(PS["Control.Category"] = PS["Control.Category"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Control_Category = PS["Control.Category"];
  var flip = function (f) {
      return function (b) {
          return function (a) {
              return f(a)(b);
          };
      };
  };
  var $$const = function (a) {
      return function (v) {
          return a;
      };
  };
  exports["const"] = $$const;
  exports["flip"] = flip;
})(PS["Data.Function"] = PS["Data.Function"] || {});
(function(exports) {
    "use strict";

  exports.unit = {};
})(PS["Data.Unit"] = PS["Data.Unit"] || {});
(function(exports) {
    "use strict";

  exports.showIntImpl = function (n) {
    return n.toString();
  };

  exports.showCharImpl = function (c) {
    var code = c.charCodeAt(0);
    if (code < 0x20 || code === 0x7F) {
      switch (c) {
        case "\x07": return "'\\a'";
        case "\b": return "'\\b'";
        case "\f": return "'\\f'";
        case "\n": return "'\\n'";
        case "\r": return "'\\r'";
        case "\t": return "'\\t'";
        case "\v": return "'\\v'";
      }
      return "'\\" + code.toString(10) + "'";
    }
    return c === "'" || c === "\\" ? "'\\" + c + "'" : "'" + c + "'";
  };

  exports.showStringImpl = function (s) {
    var l = s.length;
    return "\"" + s.replace(
      /[\0-\x1F\x7F"\\]/g,
      function (c, i) { // jshint ignore:line
        switch (c) {
          case "\"":
          case "\\":
            return "\\" + c;
          case "\x07": return "\\a";
          case "\b": return "\\b";
          case "\f": return "\\f";
          case "\n": return "\\n";
          case "\r": return "\\r";
          case "\t": return "\\t";
          case "\v": return "\\v";
        }
        var k = i + 1;
        var empty = k < l && s[k] >= "0" && s[k] <= "9" ? "\\&" : "";
        return "\\" + c.charCodeAt(0).toString(10) + empty;
      }
    ) + "\"";
  };
})(PS["Data.Show"] = PS["Data.Show"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var $foreign = PS["Data.Show"];     
  var Show = function (show) {
      this.show = show;
  };
  var showString = new Show($foreign.showStringImpl);
  var showInt = new Show($foreign.showIntImpl);
  var showChar = new Show($foreign.showCharImpl);
  var show = function (dict) {
      return dict.show;
  };
  exports["Show"] = Show;
  exports["show"] = show;
  exports["showInt"] = showInt;
  exports["showChar"] = showChar;
  exports["showString"] = showString;
})(PS["Data.Show"] = PS["Data.Show"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var $foreign = PS["Data.Unit"];
  var Data_Show = PS["Data.Show"];
  exports["unit"] = $foreign.unit;
})(PS["Data.Unit"] = PS["Data.Unit"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var $foreign = PS["Data.Functor"];
  var Data_Function = PS["Data.Function"];
  var Data_Unit = PS["Data.Unit"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];        
  var Functor = function (map) {
      this.map = map;
  };
  var map = function (dict) {
      return dict.map;
  };
  var $$void = function (dictFunctor) {
      return map(dictFunctor)(Data_Function["const"](Data_Unit.unit));
  };
  var voidLeft = function (dictFunctor) {
      return function (f) {
          return function (x) {
              return map(dictFunctor)(Data_Function["const"](x))(f);
          };
      };
  };
  var functorFn = new Functor(Control_Semigroupoid.compose(Control_Semigroupoid.semigroupoidFn));
  var functorArray = new Functor($foreign.arrayMap);
  exports["Functor"] = Functor;
  exports["map"] = map;
  exports["void"] = $$void;
  exports["voidLeft"] = voidLeft;
  exports["functorFn"] = functorFn;
  exports["functorArray"] = functorArray;
})(PS["Data.Functor"] = PS["Data.Functor"] || {});
(function(exports) {
    "use strict";

  exports.concatString = function (s1) {
    return function (s2) {
      return s1 + s2;
    };
  };
})(PS["Data.Semigroup"] = PS["Data.Semigroup"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var $foreign = PS["Data.Semigroup"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Void = PS["Data.Void"];        
  var Semigroup = function (append) {
      this.append = append;
  }; 
  var semigroupString = new Semigroup($foreign.concatString);
  var append = function (dict) {
      return dict.append;
  };
  exports["Semigroup"] = Semigroup;
  exports["append"] = append;
  exports["semigroupString"] = semigroupString;
})(PS["Data.Semigroup"] = PS["Data.Semigroup"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Data_Functor = PS["Data.Functor"];
  var Data_Semigroup = PS["Data.Semigroup"];        
  var Alt = function (__superclass_Data$dotFunctor$dotFunctor_0, alt) {
      this["__superclass_Data.Functor.Functor_0"] = __superclass_Data$dotFunctor$dotFunctor_0;
      this.alt = alt;
  };                                                       
  var alt = function (dict) {
      return dict.alt;
  };
  exports["Alt"] = Alt;
  exports["alt"] = alt;
})(PS["Control.Alt"] = PS["Control.Alt"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var $foreign = PS["Control.Apply"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Function = PS["Data.Function"];
  var Control_Category = PS["Control.Category"];        
  var Apply = function (__superclass_Data$dotFunctor$dotFunctor_0, apply) {
      this["__superclass_Data.Functor.Functor_0"] = __superclass_Data$dotFunctor$dotFunctor_0;
      this.apply = apply;
  };                      
  var apply = function (dict) {
      return dict.apply;
  };
  var applyFirst = function (dictApply) {
      return function (a) {
          return function (b) {
              return apply(dictApply)(Data_Functor.map(dictApply["__superclass_Data.Functor.Functor_0"]())(Data_Function["const"])(a))(b);
          };
      };
  };
  var applySecond = function (dictApply) {
      return function (a) {
          return function (b) {
              return apply(dictApply)(Data_Functor.map(dictApply["__superclass_Data.Functor.Functor_0"]())(Data_Function["const"](Control_Category.id(Control_Category.categoryFn)))(a))(b);
          };
      };
  };
  var lift2 = function (dictApply) {
      return function (f) {
          return function (a) {
              return function (b) {
                  return apply(dictApply)(Data_Functor.map(dictApply["__superclass_Data.Functor.Functor_0"]())(f)(a))(b);
              };
          };
      };
  };
  exports["Apply"] = Apply;
  exports["apply"] = apply;
  exports["applyFirst"] = applyFirst;
  exports["applySecond"] = applySecond;
  exports["lift2"] = lift2;
})(PS["Control.Apply"] = PS["Control.Apply"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Control_Apply = PS["Control.Apply"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];        
  var Applicative = function (__superclass_Control$dotApply$dotApply_0, pure) {
      this["__superclass_Control.Apply.Apply_0"] = __superclass_Control$dotApply$dotApply_0;
      this.pure = pure;
  };
  var pure = function (dict) {
      return dict.pure;
  };
  var unless = function (dictApplicative) {
      return function (v) {
          return function (v1) {
              if (!v) {
                  return v1;
              };
              if (v) {
                  return pure(dictApplicative)(Data_Unit.unit);
              };
              throw new Error("Failed pattern match at Control.Applicative line 63, column 1 - line 63, column 19: " + [ v.constructor.name, v1.constructor.name ]);
          };
      };
  };
  var when = function (dictApplicative) {
      return function (v) {
          return function (v1) {
              if (v) {
                  return v1;
              };
              if (!v) {
                  return pure(dictApplicative)(Data_Unit.unit);
              };
              throw new Error("Failed pattern match at Control.Applicative line 58, column 1 - line 58, column 16: " + [ v.constructor.name, v1.constructor.name ]);
          };
      };
  };
  var liftA1 = function (dictApplicative) {
      return function (f) {
          return function (a) {
              return Control_Apply.apply(dictApplicative["__superclass_Control.Apply.Apply_0"]())(pure(dictApplicative)(f))(a);
          };
      };
  };
  exports["Applicative"] = Applicative;
  exports["liftA1"] = liftA1;
  exports["pure"] = pure;
  exports["unless"] = unless;
  exports["when"] = when;
})(PS["Control.Applicative"] = PS["Control.Applicative"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Data_Functor = PS["Data.Functor"];        
  var Plus = function (__superclass_Control$dotAlt$dotAlt_0, empty) {
      this["__superclass_Control.Alt.Alt_0"] = __superclass_Control$dotAlt$dotAlt_0;
      this.empty = empty;
  };       
  var empty = function (dict) {
      return dict.empty;
  };
  exports["Plus"] = Plus;
  exports["empty"] = empty;
})(PS["Control.Plus"] = PS["Control.Plus"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Functor = PS["Data.Functor"];        
  var Alternative = function (__superclass_Control$dotApplicative$dotApplicative_0, __superclass_Control$dotPlus$dotPlus_1) {
      this["__superclass_Control.Applicative.Applicative_0"] = __superclass_Control$dotApplicative$dotApplicative_0;
      this["__superclass_Control.Plus.Plus_1"] = __superclass_Control$dotPlus$dotPlus_1;
  };
  exports["Alternative"] = Alternative;
})(PS["Control.Alternative"] = PS["Control.Alternative"] || {});
(function(exports) {
    "use strict";

  // module Unsafe.Coerce

  exports.unsafeCoerce = function (x) {
    return x;
  };
})(PS["Unsafe.Coerce"] = PS["Unsafe.Coerce"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var $foreign = PS["Unsafe.Coerce"];
  exports["unsafeCoerce"] = $foreign.unsafeCoerce;
})(PS["Unsafe.Coerce"] = PS["Unsafe.Coerce"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Unsafe_Coerce = PS["Unsafe.Coerce"];        
  var runExists = Unsafe_Coerce.unsafeCoerce;
  var mkExists = Unsafe_Coerce.unsafeCoerce;
  exports["mkExists"] = mkExists;
  exports["runExists"] = runExists;
})(PS["Data.Exists"] = PS["Data.Exists"] || {});
(function(exports) {
    "use strict";

  exports.refEq = function (r1) {
    return function (r2) {
      return r1 === r2;
    };
  };
})(PS["Data.Eq"] = PS["Data.Eq"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var $foreign = PS["Data.Eq"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Void = PS["Data.Void"];        
  var Eq = function (eq) {
      this.eq = eq;
  };
  var eqVoid = new Eq(function (v) {
      return function (v1) {
          return true;
      };
  });
  var eqString = new Eq($foreign.refEq);
  var eqInt = new Eq($foreign.refEq);
  var eq = function (dict) {
      return dict.eq;
  };
  exports["Eq"] = Eq;
  exports["eq"] = eq;
  exports["eqInt"] = eqInt;
  exports["eqString"] = eqString;
  exports["eqVoid"] = eqVoid;
})(PS["Data.Eq"] = PS["Data.Eq"] || {});
(function(exports) {
    "use strict";

  exports.unsafeCompareImpl = function (lt) {
    return function (eq) {
      return function (gt) {
        return function (x) {
          return function (y) {
            return x < y ? lt : x === y ? eq : gt;
          };
        };
      };
    };
  };
})(PS["Data.Ord.Unsafe"] = PS["Data.Ord.Unsafe"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Data_Eq = PS["Data.Eq"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];        
  var LT = (function () {
      function LT() {

      };
      LT.value = new LT();
      return LT;
  })();
  var GT = (function () {
      function GT() {

      };
      GT.value = new GT();
      return GT;
  })();
  var EQ = (function () {
      function EQ() {

      };
      EQ.value = new EQ();
      return EQ;
  })();
  exports["LT"] = LT;
  exports["GT"] = GT;
  exports["EQ"] = EQ;
})(PS["Data.Ordering"] = PS["Data.Ordering"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var $foreign = PS["Data.Ord.Unsafe"];
  var Data_Ordering = PS["Data.Ordering"];        
  var unsafeCompare = $foreign.unsafeCompareImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value);
  exports["unsafeCompare"] = unsafeCompare;
})(PS["Data.Ord.Unsafe"] = PS["Data.Ord.Unsafe"] || {});
(function(exports) {
    "use strict";

  exports.intAdd = function (x) {
    return function (y) {
      /* jshint bitwise: false */
      return x + y | 0;
    };
  };

  exports.intMul = function (x) {
    return function (y) {
      /* jshint bitwise: false */
      return x * y | 0;
    };
  };
})(PS["Data.Semiring"] = PS["Data.Semiring"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var $foreign = PS["Data.Semiring"];
  var Data_Unit = PS["Data.Unit"];        
  var Semiring = function (add, mul, one, zero) {
      this.add = add;
      this.mul = mul;
      this.one = one;
      this.zero = zero;
  };
  var zero = function (dict) {
      return dict.zero;
  };                                                                            
  var semiringInt = new Semiring($foreign.intAdd, $foreign.intMul, 1, 0);
  var one = function (dict) {
      return dict.one;
  };
  var mul = function (dict) {
      return dict.mul;
  };
  var add = function (dict) {
      return dict.add;
  };
  exports["Semiring"] = Semiring;
  exports["add"] = add;
  exports["mul"] = mul;
  exports["one"] = one;
  exports["zero"] = zero;
  exports["semiringInt"] = semiringInt;
})(PS["Data.Semiring"] = PS["Data.Semiring"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var $foreign = PS["Data.Ord"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Ord_Unsafe = PS["Data.Ord.Unsafe"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Void = PS["Data.Void"];
  var Data_Semiring = PS["Data.Semiring"];        
  var Ord = function (__superclass_Data$dotEq$dotEq_0, compare) {
      this["__superclass_Data.Eq.Eq_0"] = __superclass_Data$dotEq$dotEq_0;
      this.compare = compare;
  };
  var ordVoid = new Ord(function () {
      return Data_Eq.eqVoid;
  }, function (v) {
      return function (v1) {
          return Data_Ordering.EQ.value;
      };
  });
  var ordString = new Ord(function () {
      return Data_Eq.eqString;
  }, Data_Ord_Unsafe.unsafeCompare);
  var ordInt = new Ord(function () {
      return Data_Eq.eqInt;
  }, Data_Ord_Unsafe.unsafeCompare);
  var compare = function (dict) {
      return dict.compare;
  };
  exports["Ord"] = Ord;
  exports["compare"] = compare;
  exports["ordInt"] = ordInt;
  exports["ordString"] = ordString;
  exports["ordVoid"] = ordVoid;
})(PS["Data.Ord"] = PS["Data.Ord"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var otherwise = true;
  exports["otherwise"] = otherwise;
})(PS["Data.Boolean"] = PS["Data.Boolean"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Function = PS["Data.Function"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Eq = PS["Data.Eq"];
  var Data_EuclideanRing = PS["Data.EuclideanRing"];
  var Data_Boolean = PS["Data.Boolean"];        
  var Monoid = function (__superclass_Data$dotSemigroup$dotSemigroup_0, mempty) {
      this["__superclass_Data.Semigroup.Semigroup_0"] = __superclass_Data$dotSemigroup$dotSemigroup_0;
      this.mempty = mempty;
  };                 
  var monoidString = new Monoid(function () {
      return Data_Semigroup.semigroupString;
  }, "");  
  var mempty = function (dict) {
      return dict.mempty;
  };
  exports["Monoid"] = Monoid;
  exports["mempty"] = mempty;
  exports["monoidString"] = monoidString;
})(PS["Data.Monoid"] = PS["Data.Monoid"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Function = PS["Data.Function"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Functor = PS["Data.Functor"];        
  var Newtype = function (unwrap, wrap) {
      this.unwrap = unwrap;
      this.wrap = wrap;
  };
  var wrap = function (dict) {
      return dict.wrap;
  };
  var unwrap = function (dict) {
      return dict.unwrap;
  };
  var alaF = function (dictFunctor) {
      return function (dictFunctor1) {
          return function (dictNewtype) {
              return function (dictNewtype1) {
                  return function (v) {
                      return function (f) {
                          return function ($64) {
                              return Data_Functor.map(dictFunctor1)(unwrap(dictNewtype1))(f(Data_Functor.map(dictFunctor)(wrap(dictNewtype))($64)));
                          };
                      };
                  };
              };
          };
      };
  };
  exports["Newtype"] = Newtype;
  exports["alaF"] = alaF;
  exports["unwrap"] = unwrap;
  exports["wrap"] = wrap;
})(PS["Data.Newtype"] = PS["Data.Newtype"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Const = PS["Data.Const"];
  var Data_Exists = PS["Data.Exists"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Functor = PS["Data.Functor"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Unit = PS["Data.Unit"];
  var Control_Apply = PS["Control.Apply"];
  var Data_Function = PS["Data.Function"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Category = PS["Control.Category"];        
  var ApF = (function () {
      function ApF(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ApF.create = function (value0) {
          return function (value1) {
              return new ApF(value0, value1);
          };
      };
      return ApF;
  })();
  var Pure = (function () {
      function Pure(value0) {
          this.value0 = value0;
      };
      Pure.create = function (value0) {
          return new Pure(value0);
      };
      return Pure;
  })();
  var Ap = (function () {
      function Ap(value0) {
          this.value0 = value0;
      };
      Ap.create = function (value0) {
          return new Ap(value0);
      };
      return Ap;
  })();
  var retractFreeAp = function (dictApplicative) {
      return function (v) {
          if (v instanceof Pure) {
              return Control_Applicative.pure(dictApplicative)(v.value0);
          };
          if (v instanceof Ap) {
              return Data_Exists.runExists(function (v1) {
                  return Control_Apply.apply(dictApplicative["__superclass_Control.Apply.Apply_0"]())(retractFreeAp(dictApplicative)(v1.value1(Data_Unit.unit)))(v1.value0(Data_Unit.unit));
              })(v.value0);
          };
          throw new Error("Failed pattern match at Control.Applicative.Free line 33, column 1 - line 33, column 32: " + [ v.constructor.name ]);
      };
  };
  var ap = function (v) {
      return function (k) {
          return new Ap(Data_Exists.mkExists(new ApF(v, k)));
      };
  };              
  var hoistFreeAp = function (k) {
      return function (v) {
          if (v instanceof Pure) {
              return new Pure(v.value0);
          };
          if (v instanceof Ap) {
              return Data_Exists.runExists(function (v1) {
                  return ap(function (v3) {
                      return k(v1.value0(Data_Unit.unit));
                  })(function (v3) {
                      return hoistFreeAp(k)(v1.value1(Data_Unit.unit));
                  });
              })(v.value0);
          };
          throw new Error("Failed pattern match at Control.Applicative.Free line 45, column 1 - line 45, column 32: " + [ k.constructor.name, v.constructor.name ]);
      };
  };
  exports["hoistFreeAp"] = hoistFreeAp;
  exports["retractFreeAp"] = retractFreeAp;
})(PS["Control.Applicative.Free"] = PS["Control.Applicative.Free"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var $foreign = PS["Control.Bind"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Category = PS["Control.Category"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];        
  var Bind = function (__superclass_Control$dotApply$dotApply_0, bind) {
      this["__superclass_Control.Apply.Apply_0"] = __superclass_Control$dotApply$dotApply_0;
      this.bind = bind;
  };                     
  var bind = function (dict) {
      return dict.bind;
  };
  var bindFlipped = function (dictBind) {
      return Data_Function.flip(bind(dictBind));
  };
  var composeKleisliFlipped = function (dictBind) {
      return function (f) {
          return function (g) {
              return function (a) {
                  return bindFlipped(dictBind)(f)(g(a));
              };
          };
      };
  };
  exports["Bind"] = Bind;
  exports["bind"] = bind;
  exports["bindFlipped"] = bindFlipped;
  exports["composeKleisliFlipped"] = composeKleisliFlipped;
})(PS["Control.Bind"] = PS["Control.Bind"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Control_Category = PS["Control.Category"];        
  var Bifunctor = function (bimap) {
      this.bimap = bimap;
  };
  var bimap = function (dict) {
      return dict.bimap;
  };
  var lmap = function (dictBifunctor) {
      return function (f) {
          return bimap(dictBifunctor)(f)(Control_Category.id(Control_Category.categoryFn));
      };
  };
  var rmap = function (dictBifunctor) {
      return bimap(dictBifunctor)(Control_Category.id(Control_Category.categoryFn));
  };
  exports["Bifunctor"] = Bifunctor;
  exports["bimap"] = bimap;
  exports["lmap"] = lmap;
  exports["rmap"] = rmap;
})(PS["Data.Bifunctor"] = PS["Data.Bifunctor"] || {});
(function(exports) {
    "use strict";

  exports.foldrArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;
        for (var i = len - 1; i >= 0; i--) {
          acc = f(xs[i])(acc);
        }
        return acc;
      };
    };
  };

  exports.foldlArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;
        for (var i = 0; i < len; i++) {
          acc = f(acc)(xs[i]);
        }
        return acc;
      };
    };
  };
})(PS["Data.Foldable"] = PS["Data.Foldable"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];        
  var Monad = function (__superclass_Control$dotApplicative$dotApplicative_0, __superclass_Control$dotBind$dotBind_1) {
      this["__superclass_Control.Applicative.Applicative_0"] = __superclass_Control$dotApplicative$dotApplicative_0;
      this["__superclass_Control.Bind.Bind_1"] = __superclass_Control$dotBind$dotBind_1;
  };
  var ap = function (dictMonad) {
      return function (f) {
          return function (a) {
              return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(f)(function (v) {
                  return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(a)(function (v1) {
                      return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(v(v1));
                  });
              });
          };
      };
  };
  exports["Monad"] = Monad;
  exports["ap"] = ap;
})(PS["Control.Monad"] = PS["Control.Monad"] || {});
(function(exports) {
    "use strict";

  exports.topInt = 2147483647;
  exports.bottomInt = -2147483648;
})(PS["Data.Bounded"] = PS["Data.Bounded"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var $foreign = PS["Data.Bounded"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Ordering = PS["Data.Ordering"];        
  var Bounded = function (__superclass_Data$dotOrd$dotOrd_0, bottom, top) {
      this["__superclass_Data.Ord.Ord_0"] = __superclass_Data$dotOrd$dotOrd_0;
      this.bottom = bottom;
      this.top = top;
  };
  var top = function (dict) {
      return dict.top;
  };                                                 
  var boundedInt = new Bounded(function () {
      return Data_Ord.ordInt;
  }, $foreign.bottomInt, $foreign.topInt);
  var bottom = function (dict) {
      return dict.bottom;
  };
  exports["Bounded"] = Bounded;
  exports["bottom"] = bottom;
  exports["top"] = top;
  exports["boundedInt"] = boundedInt;
})(PS["Data.Bounded"] = PS["Data.Bounded"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Extend = PS["Control.Extend"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Functor = PS["Data.Functor"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_Show = PS["Data.Show"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Function = PS["Data.Function"];
  var Control_Category = PS["Control.Category"];        
  var Nothing = (function () {
      function Nothing() {

      };
      Nothing.value = new Nothing();
      return Nothing;
  })();
  var Just = (function () {
      function Just(value0) {
          this.value0 = value0;
      };
      Just.create = function (value0) {
          return new Just(value0);
      };
      return Just;
  })();
  var maybe = function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Nothing) {
                  return v;
              };
              if (v2 instanceof Just) {
                  return v1(v2.value0);
              };
              throw new Error("Failed pattern match at Data.Maybe line 220, column 1 - line 220, column 22: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  };
  var isNothing = maybe(true)(Data_Function["const"](false));
  var isJust = maybe(false)(Data_Function["const"](true));
  var functorMaybe = new Data_Functor.Functor(function (v) {
      return function (v1) {
          if (v1 instanceof Just) {
              return new Just(v(v1.value0));
          };
          return Nothing.value;
      };
  });
  var fromMaybe = function (a) {
      return maybe(a)(Control_Category.id(Control_Category.categoryFn));
  };
  var applyMaybe = new Control_Apply.Apply(function () {
      return functorMaybe;
  }, function (v) {
      return function (v1) {
          if (v instanceof Just) {
              return Data_Functor.map(functorMaybe)(v.value0)(v1);
          };
          if (v instanceof Nothing) {
              return Nothing.value;
          };
          throw new Error("Failed pattern match at Data.Maybe line 69, column 3 - line 69, column 31: " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var bindMaybe = new Control_Bind.Bind(function () {
      return applyMaybe;
  }, function (v) {
      return function (v1) {
          if (v instanceof Just) {
              return v1(v.value0);
          };
          if (v instanceof Nothing) {
              return Nothing.value;
          };
          throw new Error("Failed pattern match at Data.Maybe line 128, column 3 - line 128, column 24: " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  exports["Nothing"] = Nothing;
  exports["Just"] = Just;
  exports["fromMaybe"] = fromMaybe;
  exports["isJust"] = isJust;
  exports["isNothing"] = isNothing;
  exports["maybe"] = maybe;
  exports["functorMaybe"] = functorMaybe;
  exports["applyMaybe"] = applyMaybe;
  exports["bindMaybe"] = bindMaybe;
})(PS["Data.Maybe"] = PS["Data.Maybe"] || {});
(function(exports) {
    "use strict";

  exports.boolConj = function (b1) {
    return function (b2) {
      return b1 && b2;
    };
  };

  exports.boolDisj = function (b1) {
    return function (b2) {
      return b1 || b2;
    };
  };

  exports.boolNot = function (b) {
    return !b;
  };
})(PS["Data.HeytingAlgebra"] = PS["Data.HeytingAlgebra"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var $foreign = PS["Data.HeytingAlgebra"];
  var Data_Unit = PS["Data.Unit"];        
  var HeytingAlgebra = function (conj, disj, ff, implies, not, tt) {
      this.conj = conj;
      this.disj = disj;
      this.ff = ff;
      this.implies = implies;
      this.not = not;
      this.tt = tt;
  };
  var tt = function (dict) {
      return dict.tt;
  };
  var not = function (dict) {
      return dict.not;
  };
  var implies = function (dict) {
      return dict.implies;
  };                 
  var ff = function (dict) {
      return dict.ff;
  };
  var disj = function (dict) {
      return dict.disj;
  };
  var heytingAlgebraBoolean = new HeytingAlgebra($foreign.boolConj, $foreign.boolDisj, false, function (a) {
      return function (b) {
          return disj(heytingAlgebraBoolean)(not(heytingAlgebraBoolean)(a))(b);
      };
  }, $foreign.boolNot, true);
  var conj = function (dict) {
      return dict.conj;
  };
  var heytingAlgebraFunction = function (dictHeytingAlgebra) {
      return new HeytingAlgebra(function (f) {
          return function (g) {
              return function (a) {
                  return conj(dictHeytingAlgebra)(f(a))(g(a));
              };
          };
      }, function (f) {
          return function (g) {
              return function (a) {
                  return disj(dictHeytingAlgebra)(f(a))(g(a));
              };
          };
      }, function (v) {
          return ff(dictHeytingAlgebra);
      }, function (f) {
          return function (g) {
              return function (a) {
                  return implies(dictHeytingAlgebra)(f(a))(g(a));
              };
          };
      }, function (f) {
          return function (a) {
              return not(dictHeytingAlgebra)(f(a));
          };
      }, function (v) {
          return tt(dictHeytingAlgebra);
      });
  };
  exports["HeytingAlgebra"] = HeytingAlgebra;
  exports["conj"] = conj;
  exports["disj"] = disj;
  exports["ff"] = ff;
  exports["implies"] = implies;
  exports["not"] = not;
  exports["tt"] = tt;
  exports["heytingAlgebraBoolean"] = heytingAlgebraBoolean;
  exports["heytingAlgebraFunction"] = heytingAlgebraFunction;
})(PS["Data.HeytingAlgebra"] = PS["Data.HeytingAlgebra"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_Functor = PS["Data.Functor"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Data_Show = PS["Data.Show"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];        
  var Conj = function (x) {
      return x;
  };
  var semigroupConj = function (dictHeytingAlgebra) {
      return new Data_Semigroup.Semigroup(function (v) {
          return function (v1) {
              return Data_HeytingAlgebra.conj(dictHeytingAlgebra)(v)(v1);
          };
      });
  };
  var newtypeConj = new Data_Newtype.Newtype(function (n) {
      return n;
  }, Conj);
  var monoidConj = function (dictHeytingAlgebra) {
      return new Data_Monoid.Monoid(function () {
          return semigroupConj(dictHeytingAlgebra);
      }, Data_HeytingAlgebra.tt(dictHeytingAlgebra));
  };
  exports["Conj"] = Conj;
  exports["newtypeConj"] = newtypeConj;
  exports["semigroupConj"] = semigroupConj;
  exports["monoidConj"] = monoidConj;
})(PS["Data.Monoid.Conj"] = PS["Data.Monoid.Conj"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var $foreign = PS["Data.Foldable"];
  var Prelude = PS["Prelude"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Maybe_Last = PS["Data.Maybe.Last"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Monoid_Additive = PS["Data.Monoid.Additive"];
  var Data_Monoid_Conj = PS["Data.Monoid.Conj"];
  var Data_Monoid_Disj = PS["Data.Monoid.Disj"];
  var Data_Monoid_Dual = PS["Data.Monoid.Dual"];
  var Data_Monoid_Endo = PS["Data.Monoid.Endo"];
  var Data_Monoid_Multiplicative = PS["Data.Monoid.Multiplicative"];
  var Data_Newtype = PS["Data.Newtype"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Function = PS["Data.Function"];
  var Control_Category = PS["Control.Category"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];        
  var Foldable = function (foldMap, foldl, foldr) {
      this.foldMap = foldMap;
      this.foldl = foldl;
      this.foldr = foldr;
  };
  var foldr = function (dict) {
      return dict.foldr;
  };
  var traverse_ = function (dictApplicative) {
      return function (dictFoldable) {
          return function (f) {
              return foldr(dictFoldable)(function ($169) {
                  return Control_Apply.applySecond(dictApplicative["__superclass_Control.Apply.Apply_0"]())(f($169));
              })(Control_Applicative.pure(dictApplicative)(Data_Unit.unit));
          };
      };
  };
  var for_ = function (dictApplicative) {
      return function (dictFoldable) {
          return Data_Function.flip(traverse_(dictApplicative)(dictFoldable));
      };
  };
  var sequence_ = function (dictApplicative) {
      return function (dictFoldable) {
          return traverse_(dictApplicative)(dictFoldable)(Control_Category.id(Control_Category.categoryFn));
      };
  };
  var foldl = function (dict) {
      return dict.foldl;
  };
  var intercalate = function (dictFoldable) {
      return function (dictMonoid) {
          return function (sep) {
              return function (xs) {
                  var go = function (v) {
                      return function (x) {
                          if (v.init) {
                              return {
                                  init: false, 
                                  acc: x
                              };
                          };
                          return {
                              init: false, 
                              acc: Data_Semigroup.append(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(v.acc)(Data_Semigroup.append(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(sep)(x))
                          };
                      };
                  };
                  return (foldl(dictFoldable)(go)({
                      init: true, 
                      acc: Data_Monoid.mempty(dictMonoid)
                  })(xs)).acc;
              };
          };
      };
  };
  var sum = function (dictFoldable) {
      return function (dictSemiring) {
          return foldl(dictFoldable)(Data_Semiring.add(dictSemiring))(Data_Semiring.zero(dictSemiring));
      };
  }; 
  var foldableMaybe = new Foldable(function (dictMonoid) {
      return function (f) {
          return function (v) {
              if (v instanceof Data_Maybe.Nothing) {
                  return Data_Monoid.mempty(dictMonoid);
              };
              if (v instanceof Data_Maybe.Just) {
                  return f(v.value0);
              };
              throw new Error("Failed pattern match at Data.Foldable line 126, column 3 - line 126, column 30: " + [ f.constructor.name, v.constructor.name ]);
          };
      };
  }, function (v) {
      return function (z) {
          return function (v1) {
              if (v1 instanceof Data_Maybe.Nothing) {
                  return z;
              };
              if (v1 instanceof Data_Maybe.Just) {
                  return v(z)(v1.value0);
              };
              throw new Error("Failed pattern match at Data.Foldable line 124, column 3 - line 124, column 25: " + [ v.constructor.name, z.constructor.name, v1.constructor.name ]);
          };
      };
  }, function (v) {
      return function (z) {
          return function (v1) {
              if (v1 instanceof Data_Maybe.Nothing) {
                  return z;
              };
              if (v1 instanceof Data_Maybe.Just) {
                  return v(v1.value0)(z);
              };
              throw new Error("Failed pattern match at Data.Foldable line 122, column 3 - line 122, column 25: " + [ v.constructor.name, z.constructor.name, v1.constructor.name ]);
          };
      };
  });
  var foldMapDefaultR = function (dictFoldable) {
      return function (dictMonoid) {
          return function (f) {
              return function (xs) {
                  return foldr(dictFoldable)(function (x) {
                      return function (acc) {
                          return Data_Semigroup.append(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(f(x))(acc);
                      };
                  })(Data_Monoid.mempty(dictMonoid))(xs);
              };
          };
      };
  };
  var foldableArray = new Foldable(function (dictMonoid) {
      return foldMapDefaultR(foldableArray)(dictMonoid);
  }, $foreign.foldlArray, $foreign.foldrArray);
  var foldMap = function (dict) {
      return dict.foldMap;
  };
  var all = function (dictFoldable) {
      return function (dictHeytingAlgebra) {
          return function (p) {
              return Data_Newtype.alaF(Data_Functor.functorFn)(Data_Functor.functorFn)(Data_Monoid_Conj.newtypeConj)(Data_Monoid_Conj.newtypeConj)(Data_Monoid_Conj.Conj)(foldMap(dictFoldable)(Data_Monoid_Conj.monoidConj(dictHeytingAlgebra)))(p);
          };
      };
  };
  exports["Foldable"] = Foldable;
  exports["all"] = all;
  exports["foldMap"] = foldMap;
  exports["foldMapDefaultR"] = foldMapDefaultR;
  exports["foldl"] = foldl;
  exports["foldr"] = foldr;
  exports["for_"] = for_;
  exports["intercalate"] = intercalate;
  exports["sequence_"] = sequence_;
  exports["sum"] = sum;
  exports["traverse_"] = traverse_;
  exports["foldableArray"] = foldableArray;
  exports["foldableMaybe"] = foldableMaybe;
})(PS["Data.Foldable"] = PS["Data.Foldable"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Extend = PS["Control.Extend"];
  var Data_Bifoldable = PS["Data.Bifoldable"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Bitraversable = PS["Data.Bitraversable"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Functor = PS["Data.Functor"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Data_Show = PS["Data.Show"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Function = PS["Data.Function"];        
  var Left = (function () {
      function Left(value0) {
          this.value0 = value0;
      };
      Left.create = function (value0) {
          return new Left(value0);
      };
      return Left;
  })();
  var Right = (function () {
      function Right(value0) {
          this.value0 = value0;
      };
      Right.create = function (value0) {
          return new Right(value0);
      };
      return Right;
  })();
  var functorEither = new Data_Functor.Functor(function (v) {
      return function (v1) {
          if (v1 instanceof Left) {
              return new Left(v1.value0);
          };
          if (v1 instanceof Right) {
              return new Right(v(v1.value0));
          };
          throw new Error("Failed pattern match at Data.Either line 37, column 3 - line 37, column 26: " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var either = function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Left) {
                  return v(v2.value0);
              };
              if (v2 instanceof Right) {
                  return v1(v2.value0);
              };
              throw new Error("Failed pattern match at Data.Either line 230, column 1 - line 230, column 26: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  };
  var bifunctorEither = new Data_Bifunctor.Bifunctor(function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Left) {
                  return new Left(v(v2.value0));
              };
              if (v2 instanceof Right) {
                  return new Right(v1(v2.value0));
              };
              throw new Error("Failed pattern match at Data.Either line 44, column 3 - line 44, column 34: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  });
  var applyEither = new Control_Apply.Apply(function () {
      return functorEither;
  }, function (v) {
      return function (v1) {
          if (v instanceof Left) {
              return new Left(v.value0);
          };
          if (v instanceof Right) {
              return Data_Functor.map(functorEither)(v.value0)(v1);
          };
          throw new Error("Failed pattern match at Data.Either line 80, column 3 - line 80, column 28: " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var bindEither = new Control_Bind.Bind(function () {
      return applyEither;
  }, either(function (e) {
      return function (v) {
          return new Left(e);
      };
  })(function (a) {
      return function (f) {
          return f(a);
      };
  }));
  var applicativeEither = new Control_Applicative.Applicative(function () {
      return applyEither;
  }, Right.create);
  exports["Left"] = Left;
  exports["Right"] = Right;
  exports["either"] = either;
  exports["functorEither"] = functorEither;
  exports["bifunctorEither"] = bifunctorEither;
  exports["applyEither"] = applyEither;
  exports["applicativeEither"] = applicativeEither;
  exports["bindEither"] = bindEither;
})(PS["Data.Either"] = PS["Data.Either"] || {});
(function(exports) {
    "use strict";

  exports.pureE = function (a) {
    return function () {
      return a;
    };
  };

  exports.bindE = function (a) {
    return function (f) {
      return function () {
        return f(a())();
      };
    };
  };

  exports.runPure = function (f) {
    return f();
  };

  exports.foreachE = function (as) {
    return function (f) {
      return function () {
        for (var i = 0, l = as.length; i < l; i++) {
          f(as[i])();
        }
      };
    };
  };
})(PS["Control.Monad.Eff"] = PS["Control.Monad.Eff"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var $foreign = PS["Control.Monad.Eff"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];        
  var monadEff = new Control_Monad.Monad(function () {
      return applicativeEff;
  }, function () {
      return bindEff;
  });
  var bindEff = new Control_Bind.Bind(function () {
      return applyEff;
  }, $foreign.bindE);
  var applyEff = new Control_Apply.Apply(function () {
      return functorEff;
  }, Control_Monad.ap(monadEff));
  var applicativeEff = new Control_Applicative.Applicative(function () {
      return applyEff;
  }, $foreign.pureE);
  var functorEff = new Data_Functor.Functor(Control_Applicative.liftA1(applicativeEff));
  exports["functorEff"] = functorEff;
  exports["applyEff"] = applyEff;
  exports["applicativeEff"] = applicativeEff;
  exports["bindEff"] = bindEff;
  exports["monadEff"] = monadEff;
  exports["foreachE"] = $foreign.foreachE;
  exports["runPure"] = $foreign.runPure;
})(PS["Control.Monad.Eff"] = PS["Control.Monad.Eff"] || {});
(function(exports) {
    "use strict";

  exports.unsafeCoerceEff = function (f) {
    return f;
  };
})(PS["Control.Monad.Eff.Unsafe"] = PS["Control.Monad.Eff.Unsafe"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var $foreign = PS["Control.Monad.Eff.Unsafe"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  exports["unsafeCoerceEff"] = $foreign.unsafeCoerceEff;
})(PS["Control.Monad.Eff.Unsafe"] = PS["Control.Monad.Eff.Unsafe"] || {});
(function(exports) {
    "use strict";

  exports.readSTRef = function (ref) {
    return function () {
      return ref.value;
    };
  };
})(PS["Control.Monad.ST"] = PS["Control.Monad.ST"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var $foreign = PS["Control.Monad.ST"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  exports["readSTRef"] = $foreign.readSTRef;
})(PS["Control.Monad.ST"] = PS["Control.Monad.ST"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_BooleanAlgebra = PS["Data.BooleanAlgebra"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_EuclideanRing = PS["Data.EuclideanRing"];
  var Data_Ring = PS["Data.Ring"];
  var Data_CommutativeRing = PS["Data.CommutativeRing"];
  var Data_Field = PS["Data.Field"];
  var Data_Show = PS["Data.Show"];
  var Data_Functor = PS["Data.Functor"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];        
  var Identity = function (x) {
      return x;
  };
  var newtypeIdentity = new Data_Newtype.Newtype(function (n) {
      return n;
  }, Identity);
  var functorIdentity = new Data_Functor.Functor(function (f) {
      return function (v) {
          return f(v);
      };
  });
  var applyIdentity = new Control_Apply.Apply(function () {
      return functorIdentity;
  }, function (v) {
      return function (v1) {
          return v(v1);
      };
  });
  var bindIdentity = new Control_Bind.Bind(function () {
      return applyIdentity;
  }, function (v) {
      return function (f) {
          return f(v);
      };
  });
  var applicativeIdentity = new Control_Applicative.Applicative(function () {
      return applyIdentity;
  }, Identity);
  var monadIdentity = new Control_Monad.Monad(function () {
      return applicativeIdentity;
  }, function () {
      return bindIdentity;
  });
  exports["Identity"] = Identity;
  exports["newtypeIdentity"] = newtypeIdentity;
  exports["functorIdentity"] = functorIdentity;
  exports["applyIdentity"] = applyIdentity;
  exports["applicativeIdentity"] = applicativeIdentity;
  exports["bindIdentity"] = bindIdentity;
  exports["monadIdentity"] = monadIdentity;
})(PS["Data.Identity"] = PS["Data.Identity"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Unsafe = PS["Control.Monad.Eff.Unsafe"];
  var Control_Monad_ST = PS["Control.Monad.ST"];
  var Data_Either = PS["Data.Either"];
  var Data_Identity = PS["Data.Identity"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Data_Functor = PS["Data.Functor"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_Unit = PS["Data.Unit"];        
  var Loop = (function () {
      function Loop(value0) {
          this.value0 = value0;
      };
      Loop.create = function (value0) {
          return new Loop(value0);
      };
      return Loop;
  })();
  var Done = (function () {
      function Done(value0) {
          this.value0 = value0;
      };
      Done.create = function (value0) {
          return new Done(value0);
      };
      return Done;
  })();
  var MonadRec = function (__superclass_Control$dotMonad$dotMonad_0, tailRecM) {
      this["__superclass_Control.Monad.Monad_0"] = __superclass_Control$dotMonad$dotMonad_0;
      this.tailRecM = tailRecM;
  };
  var tailRecM = function (dict) {
      return dict.tailRecM;
  };
  var tailRecEff = function (f) {
      return function (a) {
          var fromDone = function (v) {
              var __unused = function (dictPartial1) {
                  return function ($dollar16) {
                      return $dollar16;
                  };
              };
              return __unused()((function () {
                  if (v instanceof Done) {
                      return v.value0;
                  };
                  throw new Error("Failed pattern match at Control.Monad.Rec.Class line 130, column 28 - line 130, column 42: " + [ v.constructor.name ]);
              })());
          };
          var f$prime = function ($49) {
              return Control_Monad_Eff_Unsafe.unsafeCoerceEff(f($49));
          };
          return function __do() {
              var v = f$prime(a)();
              var v1 = {
                  value: v
              };
              (function () {
                  while (!(function __do() {
                      var v2 = v1.value;
                      if (v2 instanceof Loop) {
                          var v3 = f$prime(v2.value0)();
                          var v4 = v1.value = v3;
                          return false;
                      };
                      if (v2 instanceof Done) {
                          return true;
                      };
                      throw new Error("Failed pattern match at Control.Monad.Rec.Class line 119, column 5 - line 124, column 26: " + [ v2.constructor.name ]);
                  })()) {

                  };
                  return {};
              })();
              return Data_Functor.map(Control_Monad_Eff.functorEff)(fromDone)(Control_Monad_ST.readSTRef(v1))();
          };
      };
  }; 
  var monadRecEff = new MonadRec(function () {
      return Control_Monad_Eff.monadEff;
  }, tailRecEff);
  exports["Loop"] = Loop;
  exports["Done"] = Done;
  exports["MonadRec"] = MonadRec;
  exports["tailRecM"] = tailRecM;
  exports["monadRecEff"] = monadRecEff;
})(PS["Control.Monad.Rec.Class"] = PS["Control.Monad.Rec.Class"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];        
  var MonadTrans = function (lift) {
      this.lift = lift;
  };
  var lift = function (dict) {
      return dict.lift;
  };
  exports["MonadTrans"] = MonadTrans;
  exports["lift"] = lift;
})(PS["Control.Monad.Trans.Class"] = PS["Control.Monad.Trans.Class"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Either = PS["Data.Either"];
  var Data_Exists = PS["Data.Exists"];
  var Data_Monoid = PS["Data.Monoid"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_Monad_Trans_Class = PS["Control.Monad.Trans.Class"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Control_Category = PS["Control.Category"];        
  var Bound = (function () {
      function Bound(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Bound.create = function (value0) {
          return function (value1) {
              return new Bound(value0, value1);
          };
      };
      return Bound;
  })();
  var FreeT = (function () {
      function FreeT(value0) {
          this.value0 = value0;
      };
      FreeT.create = function (value0) {
          return new FreeT(value0);
      };
      return FreeT;
  })();
  var Bind = (function () {
      function Bind(value0) {
          this.value0 = value0;
      };
      Bind.create = function (value0) {
          return new Bind(value0);
      };
      return Bind;
  })();
  var monadTransFreeT = function (dictFunctor) {
      return new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
          return function (ma) {
              return new FreeT(function (v) {
                  return Data_Functor.map(((dictMonad["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Data_Either.Left.create)(ma);
              });
          };
      });
  };
  var freeT = FreeT.create;
  var bound = function (m) {
      return function (f) {
          return new Bind(Data_Exists.mkExists(new Bound(m, f)));
      };
  };
  var functorFreeT = function (dictFunctor) {
      return function (dictFunctor1) {
          return new Data_Functor.Functor(function (f) {
              return function (v) {
                  if (v instanceof FreeT) {
                      return new FreeT(function (v1) {
                          return Data_Functor.map(dictFunctor1)(Data_Bifunctor.bimap(Data_Either.bifunctorEither)(f)(Data_Functor.map(dictFunctor)(Data_Functor.map(functorFreeT(dictFunctor)(dictFunctor1))(f))))(v.value0(Data_Unit.unit));
                      });
                  };
                  if (v instanceof Bind) {
                      return Data_Exists.runExists(function (v1) {
                          return bound(v1.value0)(function ($100) {
                              return Data_Functor.map(functorFreeT(dictFunctor)(dictFunctor1))(f)(v1.value1($100));
                          });
                      })(v.value0);
                  };
                  throw new Error("Failed pattern match at Control.Monad.Free.Trans line 55, column 3 - line 55, column 69: " + [ f.constructor.name, v.constructor.name ]);
              };
          });
      };
  };
  var monadFreeT = function (dictFunctor) {
      return function (dictMonad) {
          return new Control_Monad.Monad(function () {
              return applicativeFreeT(dictFunctor)(dictMonad);
          }, function () {
              return bindFreeT(dictFunctor)(dictMonad);
          });
      };
  };
  var bindFreeT = function (dictFunctor) {
      return function (dictMonad) {
          return new Control_Bind.Bind(function () {
              return applyFreeT(dictFunctor)(dictMonad);
          }, function (v) {
              return function (f) {
                  if (v instanceof Bind) {
                      return Data_Exists.runExists(function (v1) {
                          return bound(v1.value0)(function (x) {
                              return bound(function (v2) {
                                  return v1.value1(x);
                              })(f);
                          });
                      })(v.value0);
                  };
                  return bound(function (v1) {
                      return v;
                  })(f);
              };
          });
      };
  };
  var applyFreeT = function (dictFunctor) {
      return function (dictMonad) {
          return new Control_Apply.Apply(function () {
              return functorFreeT(dictFunctor)(((dictMonad["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]());
          }, Control_Monad.ap(monadFreeT(dictFunctor)(dictMonad)));
      };
  };
  var applicativeFreeT = function (dictFunctor) {
      return function (dictMonad) {
          return new Control_Applicative.Applicative(function () {
              return applyFreeT(dictFunctor)(dictMonad);
          }, function (a) {
              return new FreeT(function (v) {
                  return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(new Data_Either.Left(a));
              });
          });
      };
  };
  var liftFreeT = function (dictFunctor) {
      return function (dictMonad) {
          return function (fa) {
              return new FreeT(function (v) {
                  return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(new Data_Either.Right(Data_Functor.map(dictFunctor)(Control_Applicative.pure(applicativeFreeT(dictFunctor)(dictMonad)))(fa)));
              });
          };
      };
  };
  var resume = function (dictFunctor) {
      return function (dictMonadRec) {
          var go = function (v) {
              if (v instanceof FreeT) {
                  return Data_Functor.map((((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Control_Monad_Rec_Class.Done.create)(v.value0(Data_Unit.unit));
              };
              if (v instanceof Bind) {
                  return Data_Exists.runExists(function (v1) {
                      var $82 = v1.value0(Data_Unit.unit);
                      if ($82 instanceof FreeT) {
                          return Control_Bind.bind((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())($82.value0(Data_Unit.unit))(function (v2) {
                              if (v2 instanceof Data_Either.Left) {
                                  return Control_Applicative.pure((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Applicative.Applicative_0"]())(new Control_Monad_Rec_Class.Loop(v1.value1(v2.value0)));
                              };
                              if (v2 instanceof Data_Either.Right) {
                                  return Control_Applicative.pure((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Applicative.Applicative_0"]())(new Control_Monad_Rec_Class.Done(new Data_Either.Right(Data_Functor.map(dictFunctor)(function (h) {
                                      return Control_Bind.bind(bindFreeT(dictFunctor)(dictMonadRec["__superclass_Control.Monad.Monad_0"]()))(h)(v1.value1);
                                  })(v2.value0))));
                              };
                              throw new Error("Failed pattern match at Control.Monad.Free.Trans line 49, column 20 - line 51, column 67: " + [ v2.constructor.name ]);
                          });
                      };
                      if ($82 instanceof Bind) {
                          return Data_Exists.runExists(function (v2) {
                              return Control_Applicative.pure((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Applicative.Applicative_0"]())(new Control_Monad_Rec_Class.Loop(Control_Bind.bind(bindFreeT(dictFunctor)(dictMonadRec["__superclass_Control.Monad.Monad_0"]()))(v2.value0(Data_Unit.unit))(function (z) {
                                  return Control_Bind.bind(bindFreeT(dictFunctor)(dictMonadRec["__superclass_Control.Monad.Monad_0"]()))(v2.value1(z))(v1.value1);
                              })));
                          })($82.value0);
                      };
                      throw new Error("Failed pattern match at Control.Monad.Free.Trans line 47, column 5 - line 52, column 98: " + [ $82.constructor.name ]);
                  })(v.value0);
              };
              throw new Error("Failed pattern match at Control.Monad.Free.Trans line 45, column 3 - line 45, column 35: " + [ v.constructor.name ]);
          };
          return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(go);
      };
  };
  var runFreeT = function (dictFunctor) {
      return function (dictMonadRec) {
          return function (interp) {
              var go = function (v) {
                  if (v instanceof Data_Either.Left) {
                      return Control_Applicative.pure((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Applicative.Applicative_0"]())(new Control_Monad_Rec_Class.Done(v.value0));
                  };
                  if (v instanceof Data_Either.Right) {
                      return Data_Functor.map((((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Control_Monad_Rec_Class.Loop.create)(interp(v.value0));
                  };
                  throw new Error("Failed pattern match at Control.Monad.Free.Trans line 109, column 3 - line 109, column 30: " + [ v.constructor.name ]);
              };
              return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(Control_Bind.composeKleisliFlipped((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())(go)(resume(dictFunctor)(dictMonadRec)));
          };
      };
  };
  var monadRecFreeT = function (dictFunctor) {
      return function (dictMonad) {
          return new Control_Monad_Rec_Class.MonadRec(function () {
              return monadFreeT(dictFunctor)(dictMonad);
          }, function (f) {
              var go = function (s) {
                  return Control_Bind.bind(bindFreeT(dictFunctor)(dictMonad))(f(s))(function (v) {
                      if (v instanceof Control_Monad_Rec_Class.Loop) {
                          return go(v.value0);
                      };
                      if (v instanceof Control_Monad_Rec_Class.Done) {
                          return Control_Applicative.pure(applicativeFreeT(dictFunctor)(dictMonad))(v.value0);
                      };
                      throw new Error("Failed pattern match at Control.Monad.Free.Trans line 77, column 15 - line 79, column 25: " + [ v.constructor.name ]);
                  });
              };
              return go;
          });
      };
  };
  exports["freeT"] = freeT;
  exports["liftFreeT"] = liftFreeT;
  exports["resume"] = resume;
  exports["runFreeT"] = runFreeT;
  exports["functorFreeT"] = functorFreeT;
  exports["applyFreeT"] = applyFreeT;
  exports["applicativeFreeT"] = applicativeFreeT;
  exports["bindFreeT"] = bindFreeT;
  exports["monadFreeT"] = monadFreeT;
  exports["monadTransFreeT"] = monadTransFreeT;
  exports["monadRecFreeT"] = monadRecFreeT;
})(PS["Control.Monad.Free.Trans"] = PS["Control.Monad.Free.Trans"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Either = PS["Data.Either"];
  var Data_Function = PS["Data.Function"];
  var Data_Unit = PS["Data.Unit"];        
  var MonadError = function (__superclass_Control$dotMonad$dotMonad_0, catchError, throwError) {
      this["__superclass_Control.Monad.Monad_0"] = __superclass_Control$dotMonad$dotMonad_0;
      this.catchError = catchError;
      this.throwError = throwError;
  };
  var throwError = function (dict) {
      return dict.throwError;
  };                          
  var catchError = function (dict) {
      return dict.catchError;
  };
  exports["MonadError"] = MonadError;
  exports["catchError"] = catchError;
  exports["throwError"] = throwError;
})(PS["Control.Monad.Error.Class"] = PS["Control.Monad.Error.Class"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Control_Category = PS["Control.Category"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];        
  var MonadEff = function (__superclass_Control$dotMonad$dotMonad_0, liftEff) {
      this["__superclass_Control.Monad.Monad_0"] = __superclass_Control$dotMonad$dotMonad_0;
      this.liftEff = liftEff;
  };
  var monadEffEff = new MonadEff(function () {
      return Control_Monad_Eff.monadEff;
  }, Control_Category.id(Control_Category.categoryFn));
  var liftEff = function (dict) {
      return dict.liftEff;
  };
  exports["MonadEff"] = MonadEff;
  exports["liftEff"] = liftEff;
  exports["monadEffEff"] = monadEffEff;
})(PS["Control.Monad.Eff.Class"] = PS["Control.Monad.Eff.Class"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Data_Unit = PS["Data.Unit"];        
  var Lazy = function (defer) {
      this.defer = defer;
  };
  var defer = function (dict) {
      return dict.defer;
  };
  exports["Lazy"] = Lazy;
  exports["defer"] = defer;
})(PS["Control.Lazy"] = PS["Control.Lazy"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Biapplicative = PS["Control.Biapplicative"];
  var Control_Biapply = PS["Control.Biapply"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Lazy = PS["Control.Lazy"];
  var Data_Bifoldable = PS["Data.Bifoldable"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Bitraversable = PS["Data.Bitraversable"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Show = PS["Data.Show"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Bounded = PS["Data.Bounded"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Ring = PS["Data.Ring"];
  var Data_CommutativeRing = PS["Data.CommutativeRing"];
  var Data_BooleanAlgebra = PS["Data.BooleanAlgebra"];
  var Data_Functor = PS["Data.Functor"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Data_Function = PS["Data.Function"];
  var Data_Unit = PS["Data.Unit"];        
  var Tuple = (function () {
      function Tuple(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Tuple.create = function (value0) {
          return function (value1) {
              return new Tuple(value0, value1);
          };
      };
      return Tuple;
  })();
  var snd = function (v) {
      return v.value1;
  };
  var functorTuple = new Data_Functor.Functor(function (f) {
      return function (v) {
          return new Tuple(v.value0, f(v.value1));
      };
  });                                                                                                   
  var fst = function (v) {
      return v.value0;
  };
  exports["Tuple"] = Tuple;
  exports["fst"] = fst;
  exports["snd"] = snd;
  exports["functorTuple"] = functorTuple;
})(PS["Data.Tuple"] = PS["Data.Tuple"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unit = PS["Data.Unit"];        
  var MonadState = function (__superclass_Control$dotMonad$dotMonad_0, state) {
      this["__superclass_Control.Monad.Monad_0"] = __superclass_Control$dotMonad$dotMonad_0;
      this.state = state;
  };
  var state = function (dict) {
      return dict.state;
  };
  var modify = function (dictMonadState) {
      return function (f) {
          return state(dictMonadState)(function (s) {
              return new Data_Tuple.Tuple(Data_Unit.unit, f(s));
          });
      };
  };
  var gets = function (dictMonadState) {
      return function (f) {
          return state(dictMonadState)(function (s) {
              return new Data_Tuple.Tuple(f(s), s);
          });
      };
  };
  exports["MonadState"] = MonadState;
  exports["gets"] = gets;
  exports["modify"] = modify;
  exports["state"] = state;
})(PS["Control.Monad.State.Class"] = PS["Control.Monad.State.Class"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Monad_Cont_Class = PS["Control.Monad.Cont.Class"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Monad_Reader_Class = PS["Control.Monad.Reader.Class"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_Monad_State_Class = PS["Control.Monad.State.Class"];
  var Control_Monad_Trans_Class = PS["Control.Monad.Trans.Class"];
  var Control_Monad_Writer_Class = PS["Control.Monad.Writer.Class"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Either = PS["Data.Either"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Functor = PS["Data.Functor"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Function = PS["Data.Function"];
  var Control_Category = PS["Control.Category"];        
  var ExceptT = function (x) {
      return x;
  };
  var runExceptT = function (v) {
      return v;
  };          
  var monadTransExceptT = new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
      return function (m) {
          return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(m)(function (v) {
              return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(new Data_Either.Right(v));
          });
      };
  });
  var mapExceptT = function (f) {
      return function (v) {
          return f(v);
      };
  };
  var functorExceptT = function (dictFunctor) {
      return new Data_Functor.Functor(function (f) {
          return mapExceptT(Data_Functor.map(dictFunctor)(Data_Functor.map(Data_Either.functorEither)(f)));
      });
  };
  var except = function (dictApplicative) {
      return function ($87) {
          return ExceptT(Control_Applicative.pure(dictApplicative)($87));
      };
  };
  var monadExceptT = function (dictMonad) {
      return new Control_Monad.Monad(function () {
          return applicativeExceptT(dictMonad);
      }, function () {
          return bindExceptT(dictMonad);
      });
  };
  var bindExceptT = function (dictMonad) {
      return new Control_Bind.Bind(function () {
          return applyExceptT(dictMonad);
      }, function (v) {
          return function (k) {
              return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(v)(Data_Either.either(function ($88) {
                  return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(Data_Either.Left.create($88));
              })(function (a) {
                  var $56 = k(a);
                  return $56;
              }));
          };
      });
  };
  var applyExceptT = function (dictMonad) {
      return new Control_Apply.Apply(function () {
          return functorExceptT(((dictMonad["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]());
      }, Control_Monad.ap(monadExceptT(dictMonad)));
  };
  var applicativeExceptT = function (dictMonad) {
      return new Control_Applicative.Applicative(function () {
          return applyExceptT(dictMonad);
      }, function ($89) {
          return ExceptT(Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(Data_Either.Right.create($89)));
      });
  };
  var monadErrorExceptT = function (dictMonad) {
      return new Control_Monad_Error_Class.MonadError(function () {
          return monadExceptT(dictMonad);
      }, function (v) {
          return function (k) {
              return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(v)(Data_Either.either(function (a) {
                  var $60 = k(a);
                  return $60;
              })(function ($91) {
                  return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(Data_Either.Right.create($91));
              }));
          };
      }, function ($92) {
          return ExceptT(Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(Data_Either.Left.create($92)));
      });
  };
  var monadStateExceptT = function (dictMonadState) {
      return new Control_Monad_State_Class.MonadState(function () {
          return monadExceptT(dictMonadState["__superclass_Control.Monad.Monad_0"]());
      }, function (f) {
          return Control_Monad_Trans_Class.lift(monadTransExceptT)(dictMonadState["__superclass_Control.Monad.Monad_0"]())(Control_Monad_State_Class.state(dictMonadState)(f));
      });
  };
  exports["ExceptT"] = ExceptT;
  exports["except"] = except;
  exports["mapExceptT"] = mapExceptT;
  exports["runExceptT"] = runExceptT;
  exports["functorExceptT"] = functorExceptT;
  exports["applyExceptT"] = applyExceptT;
  exports["applicativeExceptT"] = applicativeExceptT;
  exports["bindExceptT"] = bindExceptT;
  exports["monadExceptT"] = monadExceptT;
  exports["monadTransExceptT"] = monadTransExceptT;
  exports["monadErrorExceptT"] = monadErrorExceptT;
  exports["monadStateExceptT"] = monadStateExceptT;
})(PS["Control.Monad.Except.Trans"] = PS["Control.Monad.Except.Trans"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Data_Either = PS["Data.Either"];
  var Data_Identity = PS["Data.Identity"];
  var Data_Newtype = PS["Data.Newtype"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];                                 
  var runExcept = function ($0) {
      return Data_Newtype.unwrap(Data_Identity.newtypeIdentity)(Control_Monad_Except_Trans.runExceptT($0));
  };
  var mapExcept = function (f) {
      return Control_Monad_Except_Trans.mapExceptT(function ($1) {
          return Data_Identity.Identity(f(Data_Newtype.unwrap(Data_Identity.newtypeIdentity)($1)));
      });
  };
  exports["mapExcept"] = mapExcept;
  exports["runExcept"] = runExcept;
})(PS["Control.Monad.Except"] = PS["Control.Monad.Except"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Newtype = PS["Data.Newtype"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Control_Category = PS["Control.Category"];        
  var Profunctor = function (dimap) {
      this.dimap = dimap;
  };
  var profunctorFn = new Profunctor(function (a2b) {
      return function (c2d) {
          return function (b2c) {
              return function ($9) {
                  return c2d(b2c(a2b($9)));
              };
          };
      };
  });
  var dimap = function (dict) {
      return dict.dimap;
  };
  var rmap = function (dictProfunctor) {
      return function (b2c) {
          return dimap(dictProfunctor)(Control_Category.id(Control_Category.categoryFn))(b2c);
      };
  };
  exports["Profunctor"] = Profunctor;
  exports["dimap"] = dimap;
  exports["rmap"] = rmap;
  exports["profunctorFn"] = profunctorFn;
})(PS["Data.Profunctor"] = PS["Data.Profunctor"] || {});
(function(exports) {
    "use strict";

  exports.newRef = function (val) {
    return function () {
      return { value: val };
    };
  };

  exports.readRef = function (ref) {
    return function () {
      return ref.value;
    };
  };

  exports["modifyRef'"] = function (ref) {
    return function (f) {
      return function () {
        var t = f(ref.value);
        ref.value = t.state;
        return t.value;
      };
    };
  };

  exports.writeRef = function (ref) {
    return function (val) {
      return function () {
        ref.value = val;
        return {};
      };
    };
  };
})(PS["Control.Monad.Eff.Ref"] = PS["Control.Monad.Eff.Ref"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var $foreign = PS["Control.Monad.Eff.Ref"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Data_Unit = PS["Data.Unit"];        
  var modifyRef = function (ref) {
      return function (f) {
          return $foreign["modifyRef'"](ref)(function (s) {
              return {
                  state: f(s), 
                  value: Data_Unit.unit
              };
          });
      };
  };
  exports["modifyRef"] = modifyRef;
  exports["modifyRef'"] = $foreign["modifyRef'"];
  exports["newRef"] = $foreign.newRef;
  exports["readRef"] = $foreign.readRef;
  exports["writeRef"] = $foreign.writeRef;
})(PS["Control.Monad.Eff.Ref"] = PS["Control.Monad.Eff.Ref"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Monad_Cont_Trans = PS["Control.Monad.Cont.Trans"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Monad_Eff_Ref = PS["Control.Monad.Eff.Ref"];
  var Control_Monad_Eff_Unsafe = PS["Control.Monad.Eff.Unsafe"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Control_Monad_Maybe_Trans = PS["Control.Monad.Maybe.Trans"];
  var Control_Monad_Reader_Trans = PS["Control.Monad.Reader.Trans"];
  var Control_Monad_Writer_Trans = PS["Control.Monad.Writer.Trans"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Either = PS["Data.Either"];
  var Data_Functor_Compose = PS["Data.Functor.Compose"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Functor = PS["Data.Functor"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Control_Apply = PS["Control.Apply"];
  var Data_Function = PS["Data.Function"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_Unit = PS["Data.Unit"];
  var Parallel = function (__superclass_Control$dotApplicative$dotApplicative_1, __superclass_Control$dotMonad$dotMonad_0, parallel, sequential) {
      this["__superclass_Control.Applicative.Applicative_1"] = __superclass_Control$dotApplicative$dotApplicative_1;
      this["__superclass_Control.Monad.Monad_0"] = __superclass_Control$dotMonad$dotMonad_0;
      this.parallel = parallel;
      this.sequential = sequential;
  };                                                           
  var sequential = function (dict) {
      return dict.sequential;
  };
  var parallel = function (dict) {
      return dict.parallel;
  };
  exports["Parallel"] = Parallel;
  exports["parallel"] = parallel;
  exports["sequential"] = sequential;
})(PS["Control.Parallel.Class"] = PS["Control.Parallel.Class"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Monad_Free_Trans = PS["Control.Monad.Free.Trans"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_Monad_Trans_Class = PS["Control.Monad.Trans.Class"];
  var Control_Monad_Except = PS["Control.Monad.Except"];
  var Control_Parallel = PS["Control.Parallel"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Either = PS["Data.Either"];
  var Data_Identity = PS["Data.Identity"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Profunctor = PS["Data.Profunctor"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Functor = PS["Data.Functor"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_Unit = PS["Data.Unit"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Function = PS["Data.Function"];
  var Control_Parallel_Class = PS["Control.Parallel.Class"];
  var Control_Category = PS["Control.Category"];
  var Emit = (function () {
      function Emit(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Emit.create = function (value0) {
          return function (value1) {
              return new Emit(value0, value1);
          };
      };
      return Emit;
  })();
  var runProcess = function (dictMonadRec) {
      return Control_Monad_Free_Trans.runFreeT(Data_Identity.functorIdentity)(dictMonadRec)(function ($185) {
          return Control_Applicative.pure((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Applicative.Applicative_0"]())(Data_Newtype.unwrap(Data_Identity.newtypeIdentity)($185));
      });
  };
  var profunctorAwait = new Data_Profunctor.Profunctor(function (f) {
      return function (g) {
          return function (v) {
              return Data_Profunctor.dimap(Data_Profunctor.profunctorFn)(f)(g)(v);
          };
      };
  });
  var loop = function (dictFunctor) {
      return function (dictMonad) {
          return function (me) {
              return Control_Monad_Rec_Class.tailRecM(Control_Monad_Free_Trans.monadRecFreeT(dictFunctor)(dictMonad))(function (v) {
                  return Data_Functor.map(Control_Monad_Free_Trans.functorFreeT(dictFunctor)(((dictMonad["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]()))(Data_Maybe.maybe(new Control_Monad_Rec_Class.Loop(Data_Unit.unit))(Control_Monad_Rec_Class.Done.create))(me);
              })(Data_Unit.unit);
          };
      };
  };
  var fuseWithL = function (dictFunctor) {
      return function (dictFunctor1) {
          return function (dictFunctor2) {
              return function (dictMonadRec) {
                  return function (zap) {
                      return function (fs) {
                          return function (gs) {
                              var go = function (v) {
                                  return Control_Monad_Except_Trans.runExceptT(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(dictMonadRec["__superclass_Control.Monad.Monad_0"]()))(Control_Monad_Except_Trans.ExceptT(Control_Monad_Free_Trans.resume(dictFunctor)(dictMonadRec)(v.value0)))(function (v1) {
                                      return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(dictMonadRec["__superclass_Control.Monad.Monad_0"]()))(Control_Monad_Except_Trans.ExceptT(Control_Monad_Free_Trans.resume(dictFunctor1)(dictMonadRec)(v.value1)))(function (v2) {
                                          return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(dictMonadRec["__superclass_Control.Monad.Monad_0"]()))(Data_Functor.map(dictFunctor2)(function (t) {
                                              return Control_Monad_Free_Trans.freeT(function (v3) {
                                                  return go(t);
                                              });
                                          })(zap(Data_Tuple.Tuple.create)(v1)(v2)));
                                      });
                                  }));
                              };
                              return Control_Monad_Free_Trans.freeT(function (v) {
                                  return go(new Data_Tuple.Tuple(fs, gs));
                              });
                          };
                      };
                  };
              };
          };
      };
  };
  var fuseWith = function (dictFunctor) {
      return function (dictFunctor1) {
          return function (dictFunctor2) {
              return function (dictMonadRec) {
                  return function (dictParallel) {
                      return function (zap) {
                          return function (fs) {
                              return function (gs) {
                                  var go = function (v) {
                                      return Control_Bind.bind((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())(Control_Parallel_Class.sequential(dictParallel)(Control_Apply.apply((dictParallel["__superclass_Control.Applicative.Applicative_1"]())["__superclass_Control.Apply.Apply_0"]())(Data_Functor.map(((dictParallel["__superclass_Control.Applicative.Applicative_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Control_Apply.lift2(Data_Either.applyEither)(zap(Data_Tuple.Tuple.create)))(Control_Parallel_Class.parallel(dictParallel)(Control_Monad_Free_Trans.resume(dictFunctor)(dictMonadRec)(v.value0))))(Control_Parallel_Class.parallel(dictParallel)(Control_Monad_Free_Trans.resume(dictFunctor1)(dictMonadRec)(v.value1)))))(function (v1) {
                                          if (v1 instanceof Data_Either.Left) {
                                              return Control_Applicative.pure((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Applicative.Applicative_0"]())(new Data_Either.Left(v1.value0));
                                          };
                                          if (v1 instanceof Data_Either.Right) {
                                              return Control_Applicative.pure((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Applicative.Applicative_0"]())(new Data_Either.Right(Data_Functor.map(dictFunctor2)(function (t) {
                                                  return Control_Monad_Free_Trans.freeT(function (v2) {
                                                      return go(t);
                                                  });
                                              })(v1.value0)));
                                          };
                                          throw new Error("Failed pattern match at Control.Coroutine line 76, column 5 - line 78, column 63: " + [ v1.constructor.name ]);
                                      });
                                  };
                                  return Control_Monad_Free_Trans.freeT(function (v) {
                                      return go(new Data_Tuple.Tuple(fs, gs));
                                  });
                              };
                          };
                      };
                  };
              };
          };
      };
  };
  var functorAwait = new Data_Functor.Functor(Data_Profunctor.rmap(profunctorAwait));
  var bifunctorEmit = new Data_Bifunctor.Bifunctor(function (f) {
      return function (g) {
          return function (v) {
              return new Emit(f(v.value0), g(v.value1));
          };
      };
  });
  var functorEmit = new Data_Functor.Functor(Data_Bifunctor.rmap(bifunctorEmit));
  var connect = function (dictMonadRec) {
      return function (dictParallel) {
          return fuseWith(functorEmit)(functorAwait)(Data_Identity.functorIdentity)(dictMonadRec)(dictParallel)(function (f) {
              return function (v) {
                  return function (v1) {
                      return f(v.value1)(v1(v.value0));
                  };
              };
          });
      };
  };
  var emit = function (dictMonad) {
      return function (o) {
          return Control_Monad_Free_Trans.liftFreeT(functorEmit)(dictMonad)(new Emit(o, Data_Unit.unit));
      };
  };
  var producer = function (dictMonad) {
      return function (recv) {
          return loop(functorEmit)(dictMonad)(Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(functorEmit)(dictMonad))(Control_Monad_Trans_Class.lift(Control_Monad_Free_Trans.monadTransFreeT(functorEmit))(dictMonad)(recv))(function (v) {
              if (v instanceof Data_Either.Left) {
                  return Data_Functor.voidLeft(Control_Monad_Free_Trans.functorFreeT(functorEmit)(((dictMonad["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]()))(emit(dictMonad)(v.value0))(Data_Maybe.Nothing.value);
              };
              if (v instanceof Data_Either.Right) {
                  return Control_Applicative.pure(Control_Monad_Free_Trans.applicativeFreeT(functorEmit)(dictMonad))(new Data_Maybe.Just(v.value0));
              };
              throw new Error("Failed pattern match at Control.Coroutine line 119, column 3 - line 121, column 29: " + [ v.constructor.name ]);
          }));
      };
  };
  var pullFrom = function (dictMonadRec) {
      return fuseWithL(functorAwait)(functorEmit)(Data_Identity.functorIdentity)(dictMonadRec)(function (f) {
          return function (v) {
              return function (v1) {
                  return Control_Applicative.pure(Data_Identity.applicativeIdentity)(f(v(v1.value0))(v1.value1));
              };
          };
      });
  };
  var $$await = function (dictMonad) {
      return Control_Monad_Free_Trans.liftFreeT(functorAwait)(dictMonad)(Control_Category.id(Control_Category.categoryFn));
  };
  exports["Emit"] = Emit;
  exports["await"] = $$await;
  exports["connect"] = connect;
  exports["emit"] = emit;
  exports["fuseWith"] = fuseWith;
  exports["fuseWithL"] = fuseWithL;
  exports["loop"] = loop;
  exports["producer"] = producer;
  exports["pullFrom"] = pullFrom;
  exports["runProcess"] = runProcess;
  exports["bifunctorEmit"] = bifunctorEmit;
  exports["functorEmit"] = functorEmit;
  exports["profunctorAwait"] = profunctorAwait;
  exports["functorAwait"] = functorAwait;
})(PS["Control.Coroutine"] = PS["Control.Coroutine"] || {});
(function(exports) {
  /* globals setTimeout, clearTimeout, setImmediate, clearImmediate */
  "use strict";

  exports._cancelWith = function (nonCanceler, aff, canceler1) {
    return function (success, error) {
      var canceler2 = aff(success, error);

      return function (e) {
        return function (success, error) {
          var cancellations = 0;
          var result = false;
          var errored = false;

          var s = function (bool) {
            cancellations = cancellations + 1;
            result = result || bool;

            if (cancellations === 2 && !errored) {
              success(result);
            }
          };

          var f = function (err) {
            if (!errored) {
              errored = true;
              error(err);
            }
          };

          canceler2(e)(s, f);
          canceler1(e)(s, f);

          return nonCanceler;
        };
      };
    };
  };

  exports._forkAff = function (nonCanceler, aff) {
    var voidF = function () {};

    return function (success) {
      var canceler = aff(voidF, voidF);
      success(canceler);
      return nonCanceler;
    };
  };

  exports._forkAll = function (nonCanceler, foldl, affs) {
    var voidF = function () {};

    return function (success) {
      var cancelers = foldl(function (acc) {
        return function (aff) {
          acc.push(aff(voidF, voidF));
          return acc;
        };
      })([])(affs);

      var canceler = function (e) {
        return function (success, error) {
          var cancellations = 0;
          var result        = false;
          var errored       = false;

          var s = function (bool) {
            cancellations = cancellations + 1;
            result        = result || bool;

            if (cancellations === cancelers.length && !errored) {
              success(result);
            }
          };

          var f = function (err) {
            if (!errored) {
              errored = true;
              error(err);
            }
          };

          for (var i = 0; i < cancelers.length; i++) {
            cancelers[i](e)(s, f);
          }

          return nonCanceler;
        };
      };

      success(canceler);
      return nonCanceler;
    };
  };

  exports._makeAff = function (cb) {
    return function (success, error) {
      try {
        return cb(function (e) {
          return function () {
            error(e);
          };
        })(function (v) {
          return function () {
            success(v);
          };
        })();
      } catch (err) {
        error(err);
      }
    };
  };

  exports._pure = function (nonCanceler, v) {
    return function (success) {
      success(v);
      return nonCanceler;
    };
  };

  exports._throwError = function (nonCanceler, e) {
    return function (success, error) {
      error(e);
      return nonCanceler;
    };
  };

  exports._fmap = function (f, aff) {
    return function (success, error) {
      return aff(function (v) {
        success(f(v));
      }, error);
    };
  };

  exports._bind = function (alwaysCanceler, aff, f) {
    return function (success, error) {
      var canceler1, canceler2;

      var isCanceled    = false;
      var requestCancel = false;

      var onCanceler = function () {};

      canceler1 = aff(function (v) {
        if (requestCancel) {
          isCanceled = true;

          return alwaysCanceler;
        } else {
          canceler2 = f(v)(success, error);

          onCanceler(canceler2);

          return canceler2;
        }
      }, error);

      return function (e) {
        return function (s, f) {
          requestCancel = true;

          if (canceler2 !== undefined) {
            return canceler2(e)(s, f);
          } else {
            return canceler1(e)(function (bool) {
              if (bool || isCanceled) {
                s(true);
              } else {
                onCanceler = function (canceler) {
                  canceler(e)(s, f);
                };
              }
            }, f);
          }
        };
      };
    };
  };

  exports._attempt = function (Left, Right, aff) {
    return function (success) {
      return aff(function (v) {
        success(Right(v));
      }, function (e) {
        success(Left(e));
      });
    };
  };

  exports._runAff = function (errorT, successT, aff) {
    // If errorT or successT throw, and an Aff is comprised only of synchronous
    // effects, then it's possible for makeAff/liftEff to accidentally catch
    // it, which may end up rerunning the Aff depending on error recovery
    // behavior. To mitigate this, we observe synchronicity using mutation. If
    // an Aff is observed to be synchronous, we let the stack reset and run the
    // handlers outside of the normal callback flow.
    return function () {
      var status = 0;
      var result, success;

      var canceler = aff(function (v) {
        if (status === 2) {
          successT(v)();
        } else {
          status = 1;
          result = v;
          success = true;
        }
      }, function (e) {
        if (status === 2) {
          errorT(e)();
        } else {
          status = 1;
          result = e;
          success = false;
        }
      });

      if (status === 1) {
        if (success) {
          successT(result)();
        } else {
          errorT(result)();
        }
      } else {
        status = 2;
      }

      return canceler;
    };
  };

  exports._liftEff = function (nonCanceler, e) {
    return function (success, error) {
      var result;
      try {
        result = e();
      } catch (err) {
        error(err);
        return nonCanceler;
      }

      success(result);
      return nonCanceler;
    };
  };

  exports._tailRecM = function (isLeft, f, a) {
    return function (success, error) {
      return function go (acc) {
        var result, status, canceler;

        // Observes synchronous effects using a flag.
        //   status = 0 (unresolved status)
        //   status = 1 (synchronous effect)
        //   status = 2 (asynchronous effect)

        var csuccess = function (v) {
          // If the status is still unresolved, we have observed a
          // synchronous effect. Otherwise, the status will be `2`.
          if (status === 0) {
            // Store the result for further synchronous processing.
            result = v;
            status = 1;
          } else {
            // When we have observed an asynchronous effect, we use normal
            // recursion. This is safe because we will be on a new stack.
            if (isLeft(v)) {
              go(v.value0);
            } else {
              success(v.value0);
            }
          }
        };

        while (true) {
          status = 0;
          canceler = f(acc)(csuccess, error);

          // If the status has already resolved to `1` by our Aff handler, then
          // we have observed a synchronous effect. Otherwise it will still be
          // `0`.
          if (status === 1) {
            // When we have observed a synchronous effect, we merely swap out the
            // accumulator and continue the loop, preserving stack.
            if (isLeft(result)) {
              acc = result.value0;
              continue;
            } else {
              success(result.value0);
            }
          } else {
            // If the status has not resolved yet, then we have observed an
            // asynchronous effect.
            status = 2;
          }
          return canceler;
        }

      }(a);
    };
  };
})(PS["Control.Monad.Aff"] = PS["Control.Monad.Aff"] || {});
(function(exports) {
    "use strict";

  exports._makeVar = function (nonCanceler) {
    return function (success) {
      success({
        consumers: [],
        producers: [],
        error: undefined
      });
      return nonCanceler;
    };
  };

  exports._takeVar = function (nonCanceler, avar) {
    return function (success, error) {
      if (avar.error !== undefined) {
        error(avar.error);
      } else if (avar.producers.length > 0) {
        avar.producers.shift()(success, error);
      } else {
        avar.consumers.push({ peek: false, success: success, error: error });
      }

      return nonCanceler;
    };
  };

  exports._peekVar = function (nonCanceler, avar) {
    return function (success, error) {
      if (avar.error !== undefined) {
        error(avar.error);
      } else if (avar.producers.length > 0) {
        avar.producers[0](success, error);
      } else {
        avar.consumers.push({ peek: true, success: success, error: error });
      }
      return nonCanceler;
    };
  };

  exports._putVar = function (nonCanceler, avar, a) {
    return function (success, error) {
      if (avar.error !== undefined) {
        error(avar.error);
      } else {
        var shouldQueue = true;
        var consumers = [];
        var consumer;

        while (true) {
          consumer = avar.consumers.shift();
          if (consumer) {
            consumers.push(consumer);
            if (consumer.peek) {
              continue;
            } else {
              shouldQueue = false;
            }
          }
          break;
        }

        if (shouldQueue) {
          avar.producers.push(function (success) {
            success(a);
            return nonCanceler;
          });
        }

        for (var i = 0; i < consumers.length; i++) {
          consumers[i].success(a);
        }

        success({});
      }

      return nonCanceler;
    };
  };

  exports._killVar = function (nonCanceler, avar, e) {
    return function (success, error) {
      if (avar.error !== undefined) {
        error(avar.error);
      } else {
        avar.error = e;
        while (avar.consumers.length) {
          avar.consumers.shift().error(e);
        }
        success({});
      }

      return nonCanceler;
    };
  };
})(PS["Control.Monad.Aff.Internal"] = PS["Control.Monad.Aff.Internal"] || {});
(function(exports) {
    "use strict";

  exports.error = function (msg) {
    return new Error(msg);
  };

  exports.throwException = function (e) {
    return function () {
      throw e;
    };
  };
})(PS["Control.Monad.Eff.Exception"] = PS["Control.Monad.Eff.Exception"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var $foreign = PS["Control.Monad.Eff.Exception"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Data_Either = PS["Data.Either"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Show = PS["Data.Show"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_Functor = PS["Data.Functor"];
  var $$throw = function ($1) {
      return $foreign.throwException($foreign.error($1));
  };
  exports["throw"] = $$throw;
  exports["error"] = $foreign.error;
  exports["throwException"] = $foreign.throwException;
})(PS["Control.Monad.Eff.Exception"] = PS["Control.Monad.Eff.Exception"] || {});
(function(exports) {
    "use strict";

  exports.runFn4 = function (fn) {
    return function (a) {
      return function (b) {
        return function (c) {
          return function (d) {
            return fn(a, b, c, d);
          };
        };
      };
    };
  };
})(PS["Data.Function.Uncurried"] = PS["Data.Function.Uncurried"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var $foreign = PS["Data.Function.Uncurried"];
  var Data_Unit = PS["Data.Unit"];
  exports["runFn4"] = $foreign.runFn4;
})(PS["Data.Function.Uncurried"] = PS["Data.Function.Uncurried"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var $foreign = PS["Control.Monad.Aff.Internal"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  exports["_killVar"] = $foreign._killVar;
  exports["_makeVar"] = $foreign._makeVar;
  exports["_peekVar"] = $foreign._peekVar;
  exports["_putVar"] = $foreign._putVar;
  exports["_takeVar"] = $foreign._takeVar;
})(PS["Control.Monad.Aff.Internal"] = PS["Control.Monad.Aff.Internal"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var $foreign = PS["Control.Monad.Aff"];
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Monad_Aff_Internal = PS["Control.Monad.Aff.Internal"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_Parallel = PS["Control.Parallel"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Either = PS["Data.Either"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Tuple = PS["Data.Tuple"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Control_Apply = PS["Control.Apply"];
  var Data_Functor = PS["Data.Functor"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Data_Function = PS["Data.Function"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Semiring = PS["Data.Semiring"];
  var Control_Parallel_Class = PS["Control.Parallel.Class"];
  var Data_Unit = PS["Data.Unit"];        
  var ParAff = function (x) {
      return x;
  };
  var runAff = function (ex) {
      return function (f) {
          return function (aff) {
              return $foreign._runAff(ex, f, aff);
          };
      };
  };         
  var makeAff$prime = function (h) {
      return $foreign._makeAff(h);
  };
  var functorAff = new Data_Functor.Functor(function (f) {
      return function (fa) {
          return $foreign._fmap(f, fa);
      };
  });
  var functorParAff = functorAff;
  var fromAVBox = Unsafe_Coerce.unsafeCoerce;
  var cancel = function (v) {
      return v;
  };   
  var attempt = function (aff) {
      return $foreign._attempt(Data_Either.Left.create, Data_Either.Right.create, aff);
  };
  var applyAff = new Control_Apply.Apply(function () {
      return functorAff;
  }, function (ff) {
      return function (fa) {
          return $foreign._bind(alwaysCanceler, ff, function (f) {
              return Data_Functor.map(functorAff)(f)(fa);
          });
      };
  });
  var applicativeAff = new Control_Applicative.Applicative(function () {
      return applyAff;
  }, function (v) {
      return $foreign._pure(nonCanceler, v);
  });
  var nonCanceler = Data_Function["const"](Control_Applicative.pure(applicativeAff)(false));
  var alwaysCanceler = Data_Function["const"](Control_Applicative.pure(applicativeAff)(true));
  var cancelWith = function (aff) {
      return function (c) {
          return $foreign._cancelWith(nonCanceler, aff, c);
      };
  };
  var forkAff = function (aff) {
      return $foreign._forkAff(nonCanceler, aff);
  };
  var forkAll = function (dictFoldable) {
      return function (affs) {
          return $foreign._forkAll(nonCanceler, Data_Foldable.foldl(dictFoldable), affs);
      };
  };
  var killVar = function (q) {
      return function (e) {
          return fromAVBox(Control_Monad_Aff_Internal._killVar(nonCanceler, q, e));
      };
  };
  var makeAff = function (h) {
      return makeAff$prime(function (e) {
          return function (a) {
              return Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Function["const"](nonCanceler))(h(e)(a));
          };
      });
  };
  var makeVar = fromAVBox(Control_Monad_Aff_Internal._makeVar(nonCanceler));
  var putVar = function (q) {
      return function (a) {
          return fromAVBox(Control_Monad_Aff_Internal._putVar(nonCanceler, q, a));
      };
  };
  var takeVar = function (q) {
      return fromAVBox(Control_Monad_Aff_Internal._takeVar(nonCanceler, q));
  };
  var semigroupCanceler = new Data_Semigroup.Semigroup(function (v) {
      return function (v1) {
          return function (e) {
              return Control_Apply.apply(applyAff)(Data_Functor.map(functorAff)(Data_HeytingAlgebra.disj(Data_HeytingAlgebra.heytingAlgebraBoolean))(v(e)))(v1(e));
          };
      };
  });                                                                        
  var bindAff = new Control_Bind.Bind(function () {
      return applyAff;
  }, function (fa) {
      return function (f) {
          return $foreign._bind(alwaysCanceler, fa, f);
      };
  });
  var applyParAff = new Control_Apply.Apply(function () {
      return functorParAff;
  }, function (v) {
      return function (v1) {
          var putOrKill = function (v2) {
              return Data_Either.either(killVar(v2))(putVar(v2));
          };
          return Control_Bind.bind(bindAff)(makeVar)(function (v2) {
              return Control_Bind.bind(bindAff)(makeVar)(function (v3) {
                  return Control_Bind.bind(bindAff)(forkAff(Control_Bind.bindFlipped(bindAff)(putOrKill(v2))(attempt(v))))(function (v4) {
                      return Control_Bind.bind(bindAff)(forkAff(Control_Bind.bindFlipped(bindAff)(putOrKill(v3))(attempt(v1))))(function (v5) {
                          return cancelWith(Control_Apply.apply(applyAff)(takeVar(v2))(takeVar(v3)))(Data_Semigroup.append(semigroupCanceler)(v4)(v5));
                      });
                  });
              });
          });
      };
  });
  var applicativeParAff = new Control_Applicative.Applicative(function () {
      return applyParAff;
  }, function ($55) {
      return ParAff(Control_Applicative.pure(applicativeAff)($55));
  });
  var monadAff = new Control_Monad.Monad(function () {
      return applicativeAff;
  }, function () {
      return bindAff;
  });
  var monadEffAff = new Control_Monad_Eff_Class.MonadEff(function () {
      return monadAff;
  }, function (eff) {
      return $foreign._liftEff(nonCanceler, eff);
  });
  var monadRecAff = new Control_Monad_Rec_Class.MonadRec(function () {
      return monadAff;
  }, function (f) {
      return function (a) {
          var isLoop = function (v) {
              if (v instanceof Control_Monad_Rec_Class.Loop) {
                  return true;
              };
              return false;
          };
          return $foreign._tailRecM(isLoop, f, a);
      };
  });
  var parallelParAff = new Control_Parallel_Class.Parallel(function () {
      return applicativeParAff;
  }, function () {
      return monadAff;
  }, ParAff, function (v) {
      return v;
  });
  var monadErrorAff = new Control_Monad_Error_Class.MonadError(function () {
      return monadAff;
  }, function (aff) {
      return function (ex) {
          return Control_Bind.bind(bindAff)(attempt(aff))(Data_Either.either(ex)(Control_Applicative.pure(applicativeAff)));
      };
  }, function (e) {
      return $foreign._throwError(nonCanceler, e);
  });
  exports["ParAff"] = ParAff;
  exports["attempt"] = attempt;
  exports["cancel"] = cancel;
  exports["cancelWith"] = cancelWith;
  exports["forkAff"] = forkAff;
  exports["forkAll"] = forkAll;
  exports["makeAff"] = makeAff;
  exports["nonCanceler"] = nonCanceler;
  exports["runAff"] = runAff;
  exports["functorAff"] = functorAff;
  exports["applyAff"] = applyAff;
  exports["applicativeAff"] = applicativeAff;
  exports["bindAff"] = bindAff;
  exports["monadAff"] = monadAff;
  exports["monadEffAff"] = monadEffAff;
  exports["monadErrorAff"] = monadErrorAff;
  exports["monadRecAff"] = monadRecAff;
  exports["semigroupCanceler"] = semigroupCanceler;
  exports["functorParAff"] = functorParAff;
  exports["applyParAff"] = applyParAff;
  exports["applicativeParAff"] = applicativeParAff;
  exports["parallelParAff"] = parallelParAff;
})(PS["Control.Monad.Aff"] = PS["Control.Monad.Aff"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Aff_Internal = PS["Control.Monad.Aff.Internal"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];
  var Data_Function = PS["Data.Function"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];        
  var fromAVBox = Unsafe_Coerce.unsafeCoerce;
  var killVar = function (q) {
      return function (e) {
          return fromAVBox(Control_Monad_Aff_Internal._killVar(Control_Monad_Aff.nonCanceler, q, e));
      };
  };
  var makeVar = fromAVBox(Control_Monad_Aff_Internal._makeVar(Control_Monad_Aff.nonCanceler));
  var peekVar = function (q) {
      return fromAVBox(Control_Monad_Aff_Internal._peekVar(Control_Monad_Aff.nonCanceler, q));
  };
  var putVar = function (q) {
      return function (a) {
          return fromAVBox(Control_Monad_Aff_Internal._putVar(Control_Monad_Aff.nonCanceler, q, a));
      };
  };
  var takeVar = function (q) {
      return fromAVBox(Control_Monad_Aff_Internal._takeVar(Control_Monad_Aff.nonCanceler, q));
  };
  exports["killVar"] = killVar;
  exports["makeVar"] = makeVar;
  exports["peekVar"] = peekVar;
  exports["putVar"] = putVar;
  exports["takeVar"] = takeVar;
})(PS["Control.Monad.Aff.AVar"] = PS["Control.Monad.Aff.AVar"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];        
  var unsafeCoerceAff = Unsafe_Coerce.unsafeCoerce;
  exports["unsafeCoerceAff"] = unsafeCoerceAff;
})(PS["Control.Monad.Aff.Unsafe"] = PS["Control.Monad.Aff.Unsafe"] || {});
(function(exports) {
    "use strict";

  exports.warn = function (s) {
    return function () {
      console.warn(s);
      return {};
    };
  };
})(PS["Control.Monad.Eff.Console"] = PS["Control.Monad.Eff.Console"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var $foreign = PS["Control.Monad.Eff.Console"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Data_Show = PS["Data.Show"];
  var Data_Unit = PS["Data.Unit"];
  exports["warn"] = $foreign.warn;
})(PS["Control.Monad.Eff.Console"] = PS["Control.Monad.Eff.Console"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Control_Monad_Reader_Trans = PS["Control.Monad.Reader.Trans"];
  var Control_Monad_Trans_Class = PS["Control.Monad.Trans.Class"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Functor = PS["Data.Functor"];        
  var MonadFork = function (__superclass_Control$dotMonad$dotMonad_0, fork) {
      this["__superclass_Control.Monad.Monad_0"] = __superclass_Control$dotMonad$dotMonad_0;
      this.fork = fork;
  };
  var monadForkAff = new MonadFork(function () {
      return Control_Monad_Aff.monadAff;
  }, function ($3) {
      return Data_Functor.map(Control_Monad_Aff.functorAff)(Control_Monad_Aff.cancel)(Control_Monad_Aff.forkAff($3));
  });
  var fork = function (dict) {
      return dict.fork;
  };
  exports["MonadFork"] = MonadFork;
  exports["fork"] = fork;
  exports["monadForkAff"] = monadForkAff;
})(PS["Control.Monad.Fork.Class"] = PS["Control.Monad.Fork.Class"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Show = PS["Data.Show"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Eq = PS["Data.Eq"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Functor = PS["Data.Functor"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Category = PS["Control.Category"];        
  var NonEmpty = (function () {
      function NonEmpty(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      NonEmpty.create = function (value0) {
          return function (value1) {
              return new NonEmpty(value0, value1);
          };
      };
      return NonEmpty;
  })();
  var singleton = function (dictPlus) {
      return function (a) {
          return new NonEmpty(a, Control_Plus.empty(dictPlus));
      };
  };
  var functorNonEmpty = function (dictFunctor) {
      return new Data_Functor.Functor(function (f) {
          return function (v) {
              return new NonEmpty(f(v.value0), Data_Functor.map(dictFunctor)(f)(v.value1));
          };
      });
  };
  exports["NonEmpty"] = NonEmpty;
  exports["singleton"] = singleton;
  exports["functorNonEmpty"] = functorNonEmpty;
})(PS["Data.NonEmpty"] = PS["Data.NonEmpty"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Generic = PS["Data.Generic"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Show = PS["Data.Show"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Category = PS["Control.Category"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];        
  var Nil = (function () {
      function Nil() {

      };
      Nil.value = new Nil();
      return Nil;
  })();
  var Cons = (function () {
      function Cons(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Cons.create = function (value0) {
          return function (value1) {
              return new Cons(value0, value1);
          };
      };
      return Cons;
  })();
  var NonEmptyList = function (x) {
      return x;
  };
  var foldableList = new Data_Foldable.Foldable(function (dictMonoid) {
      return function (f) {
          return Data_Foldable.foldl(foldableList)(function (acc) {
              return function ($128) {
                  return Data_Semigroup.append(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(acc)(f($128));
              };
          })(Data_Monoid.mempty(dictMonoid));
      };
  }, function (f) {
      var go = function (__copy_b) {
          return function (__copy_v) {
              var b = __copy_b;
              var v = __copy_v;
              tco: while (true) {
                  if (v instanceof Nil) {
                      return b;
                  };
                  if (v instanceof Cons) {
                      var __tco_b = f(b)(v.value0);
                      var __tco_v = v.value1;
                      b = __tco_b;
                      v = __tco_v;
                      continue tco;
                  };
                  throw new Error("Failed pattern match at Data.List.Types line 66, column 3 - line 69, column 34: " + [ b.constructor.name, v.constructor.name ]);
              };
          };
      };
      return go;
  }, function (f) {
      return function (b) {
          return function (as) {
              var rev = function (__copy_acc) {
                  return function (__copy_v) {
                      var acc = __copy_acc;
                      var v = __copy_v;
                      tco: while (true) {
                          if (v instanceof Nil) {
                              return acc;
                          };
                          if (v instanceof Cons) {
                              var __tco_acc = new Cons(v.value0, acc);
                              var __tco_v = v.value1;
                              acc = __tco_acc;
                              v = __tco_v;
                              continue tco;
                          };
                          throw new Error("Failed pattern match at Data.List.Types line 62, column 3 - line 65, column 40: " + [ acc.constructor.name, v.constructor.name ]);
                      };
                  };
              };
              return Data_Foldable.foldl(foldableList)(Data_Function.flip(f))(b)(rev(Nil.value)(as));
          };
      };
  });                                                                     
  var functorList = new Data_Functor.Functor(function (f) {
      return Data_Foldable.foldr(foldableList)(function (x) {
          return function (acc) {
              return new Cons(f(x), acc);
          };
      })(Nil.value);
  });
  var functorNonEmptyList = Data_NonEmpty.functorNonEmpty(functorList);
  var semigroupList = new Data_Semigroup.Semigroup(function (xs) {
      return function (ys) {
          return Data_Foldable.foldr(foldableList)(Cons.create)(ys)(xs);
      };
  });
  var showList = function (dictShow) {
      return new Data_Show.Show(function (v) {
          if (v instanceof Nil) {
              return "Nil";
          };
          return "(" + (Data_Foldable.intercalate(foldableList)(Data_Monoid.monoidString)(" : ")(Data_Functor.map(functorList)(Data_Show.show(dictShow))(v)) + " : Nil)");
      });
  }; 
  var applyList = new Control_Apply.Apply(function () {
      return functorList;
  }, function (v) {
      return function (v1) {
          if (v instanceof Nil) {
              return Nil.value;
          };
          if (v instanceof Cons) {
              return Data_Semigroup.append(semigroupList)(Data_Functor.map(functorList)(v.value0)(v1))(Control_Apply.apply(applyList)(v.value1)(v1));
          };
          throw new Error("Failed pattern match at Data.List.Types line 84, column 3 - line 84, column 20: " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var applyNonEmptyList = new Control_Apply.Apply(function () {
      return functorNonEmptyList;
  }, function (v) {
      return function (v1) {
          return new Data_NonEmpty.NonEmpty(v.value0(v1.value0), Data_Semigroup.append(semigroupList)(Control_Apply.apply(applyList)(v.value1)(new Cons(v1.value0, Nil.value)))(Control_Apply.apply(applyList)(new Cons(v.value0, v.value1))(v1.value1)));
      };
  });
  var bindList = new Control_Bind.Bind(function () {
      return applyList;
  }, function (v) {
      return function (v1) {
          if (v instanceof Nil) {
              return Nil.value;
          };
          if (v instanceof Cons) {
              return Data_Semigroup.append(semigroupList)(v1(v.value0))(Control_Bind.bind(bindList)(v.value1)(v1));
          };
          throw new Error("Failed pattern match at Data.List.Types line 91, column 3 - line 91, column 19: " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var applicativeList = new Control_Applicative.Applicative(function () {
      return applyList;
  }, function (a) {
      return new Cons(a, Nil.value);
  });                                              
  var altList = new Control_Alt.Alt(function () {
      return functorList;
  }, Data_Semigroup.append(semigroupList));
  var plusList = new Control_Plus.Plus(function () {
      return altList;
  }, Nil.value);
  var applicativeNonEmptyList = new Control_Applicative.Applicative(function () {
      return applyNonEmptyList;
  }, function ($132) {
      return NonEmptyList(Data_NonEmpty.singleton(plusList)($132));
  });
  exports["Nil"] = Nil;
  exports["Cons"] = Cons;
  exports["NonEmptyList"] = NonEmptyList;
  exports["showList"] = showList;
  exports["semigroupList"] = semigroupList;
  exports["functorList"] = functorList;
  exports["foldableList"] = foldableList;
  exports["applyList"] = applyList;
  exports["applicativeList"] = applicativeList;
  exports["bindList"] = bindList;
  exports["altList"] = altList;
  exports["plusList"] = plusList;
  exports["functorNonEmptyList"] = functorNonEmptyList;
  exports["applyNonEmptyList"] = applyNonEmptyList;
  exports["applicativeNonEmptyList"] = applicativeNonEmptyList;
})(PS["Data.List.Types"] = PS["Data.List.Types"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Function = PS["Data.Function"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Semiring = PS["Data.Semiring"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_Unit = PS["Data.Unit"];
  var Control_Apply = PS["Control.Apply"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Control_Category = PS["Control.Category"];
  var singleton = function (a) {
      return new Data_List_Types.Cons(a, Data_List_Types.Nil.value);
  };
  var reverse = (function () {
      var go = function (__copy_acc) {
          return function (__copy_v) {
              var acc = __copy_acc;
              var v = __copy_v;
              tco: while (true) {
                  if (v instanceof Data_List_Types.Nil) {
                      return acc;
                  };
                  if (v instanceof Data_List_Types.Cons) {
                      var __tco_acc = new Data_List_Types.Cons(v.value0, acc);
                      var __tco_v = v.value1;
                      acc = __tco_acc;
                      v = __tco_v;
                      continue tco;
                  };
                  throw new Error("Failed pattern match at Data.List line 359, column 1 - line 362, column 36: " + [ acc.constructor.name, v.constructor.name ]);
              };
          };
      };
      return go(Data_List_Types.Nil.value);
  })();
  var take = (function () {
      var go = function (__copy_acc) {
          return function (__copy_v) {
              return function (__copy_v1) {
                  var acc = __copy_acc;
                  var v = __copy_v;
                  var v1 = __copy_v1;
                  tco: while (true) {
                      if (v === 0) {
                          return reverse(acc);
                      };
                      if (v1 instanceof Data_List_Types.Nil) {
                          return reverse(acc);
                      };
                      if (v1 instanceof Data_List_Types.Cons) {
                          var __tco_acc = new Data_List_Types.Cons(v1.value0, acc);
                          var __tco_v = v - 1 | 0;
                          var __tco_v1 = v1.value1;
                          acc = __tco_acc;
                          v = __tco_v;
                          v1 = __tco_v1;
                          continue tco;
                      };
                      throw new Error("Failed pattern match at Data.List line 486, column 1 - line 490, column 46: " + [ acc.constructor.name, v.constructor.name, v1.constructor.name ]);
                  };
              };
          };
      };
      return go(Data_List_Types.Nil.value);
  })();
  var zipWith = function (f) {
      return function (xs) {
          return function (ys) {
              var go = function (__copy_v) {
                  return function (__copy_v1) {
                      return function (__copy_acc) {
                          var v = __copy_v;
                          var v1 = __copy_v1;
                          var acc = __copy_acc;
                          tco: while (true) {
                              if (v instanceof Data_List_Types.Nil) {
                                  return acc;
                              };
                              if (v1 instanceof Data_List_Types.Nil) {
                                  return acc;
                              };
                              if (v instanceof Data_List_Types.Cons && v1 instanceof Data_List_Types.Cons) {
                                  var __tco_v = v.value1;
                                  var __tco_v1 = v1.value1;
                                  var __tco_acc = new Data_List_Types.Cons(f(v.value0)(v1.value0), acc);
                                  v = __tco_v;
                                  v1 = __tco_v1;
                                  acc = __tco_acc;
                                  continue tco;
                              };
                              throw new Error("Failed pattern match at Data.List line 650, column 1 - line 654, column 52: " + [ v.constructor.name, v1.constructor.name, acc.constructor.name ]);
                          };
                      };
                  };
              };
              return reverse(go(xs)(ys)(Data_List_Types.Nil.value));
          };
      };
  };
  var range = function (start) {
      return function (end) {
          if (start === end) {
              return singleton(start);
          };
          if (Data_Boolean.otherwise) {
              var go = function (__copy_s) {
                  return function (__copy_e) {
                      return function (__copy_step) {
                          return function (__copy_rest) {
                              var s = __copy_s;
                              var e = __copy_e;
                              var step = __copy_step;
                              var rest = __copy_rest;
                              tco: while (true) {
                                  if (s === e) {
                                      return new Data_List_Types.Cons(s, rest);
                                  };
                                  if (Data_Boolean.otherwise) {
                                      var __tco_s = s + step | 0;
                                      var __tco_e = e;
                                      var __tco_step = step;
                                      var __tco_rest = new Data_List_Types.Cons(s, rest);
                                      s = __tco_s;
                                      e = __tco_e;
                                      step = __tco_step;
                                      rest = __tco_rest;
                                      continue tco;
                                  };
                                  throw new Error("Failed pattern match at Data.List line 138, column 1 - line 142, column 65: " + [ s.constructor.name, e.constructor.name, step.constructor.name, rest.constructor.name ]);
                              };
                          };
                      };
                  };
              };
              return go(end)(start)((function () {
                  var $190 = start > end;
                  if ($190) {
                      return 1;
                  };
                  if (!$190) {
                      return -1 | 0;
                  };
                  throw new Error("Failed pattern match at Data.List line 139, column 45 - line 139, column 74: " + [ $190.constructor.name ]);
              })())(Data_List_Types.Nil.value);
          };
          throw new Error("Failed pattern match at Data.List line 138, column 1 - line 142, column 65: " + [ start.constructor.name, end.constructor.name ]);
      };
  };
  var $$null = function (v) {
      if (v instanceof Data_List_Types.Nil) {
          return true;
      };
      return false;
  };
  var some = function (dictAlternative) {
      return function (dictLazy) {
          return function (v) {
              return Control_Apply.apply((dictAlternative["__superclass_Control.Applicative.Applicative_0"]())["__superclass_Control.Apply.Apply_0"]())(Data_Functor.map(((dictAlternative["__superclass_Control.Plus.Plus_1"]())["__superclass_Control.Alt.Alt_0"]())["__superclass_Data.Functor.Functor_0"]())(Data_List_Types.Cons.create)(v))(Control_Lazy.defer(dictLazy)(function (v1) {
                  return many(dictAlternative)(dictLazy)(v);
              }));
          };
      };
  };
  var many = function (dictAlternative) {
      return function (dictLazy) {
          return function (v) {
              return Control_Alt.alt((dictAlternative["__superclass_Control.Plus.Plus_1"]())["__superclass_Control.Alt.Alt_0"]())(some(dictAlternative)(dictLazy)(v))(Control_Applicative.pure(dictAlternative["__superclass_Control.Applicative.Applicative_0"]())(Data_List_Types.Nil.value));
          };
      };
  };
  var length = Data_Foldable.foldl(Data_List_Types.foldableList)(function (acc) {
      return function (v) {
          return acc + 1 | 0;
      };
  })(0);
  var index = function (__copy_v) {
      return function (__copy_v1) {
          var v = __copy_v;
          var v1 = __copy_v1;
          tco: while (true) {
              if (v instanceof Data_List_Types.Nil) {
                  return Data_Maybe.Nothing.value;
              };
              if (v instanceof Data_List_Types.Cons && v1 === 0) {
                  return new Data_Maybe.Just(v.value0);
              };
              if (v instanceof Data_List_Types.Cons) {
                  var __tco_v = v.value1;
                  var __tco_v1 = v1 - 1 | 0;
                  v = __tco_v;
                  v1 = __tco_v1;
                  continue tco;
              };
              throw new Error("Failed pattern match at Data.List line 275, column 1 - line 275, column 22: " + [ v.constructor.name, v1.constructor.name ]);
          };
      };
  };
  var filter = function (p) {
      var go = function (__copy_acc) {
          return function (__copy_v) {
              var acc = __copy_acc;
              var v = __copy_v;
              tco: while (true) {
                  if (v instanceof Data_List_Types.Nil) {
                      return reverse(acc);
                  };
                  if (v instanceof Data_List_Types.Cons) {
                      if (p(v.value0)) {
                          var __tco_acc = new Data_List_Types.Cons(v.value0, acc);
                          var __tco_v = v.value1;
                          acc = __tco_acc;
                          v = __tco_v;
                          continue tco;
                      };
                      if (Data_Boolean.otherwise) {
                          var __tco_acc = acc;
                          var __tco_v = v.value1;
                          acc = __tco_acc;
                          v = __tco_v;
                          continue tco;
                      };
                  };
                  throw new Error("Failed pattern match at Data.List line 381, column 1 - line 386, column 28: " + [ acc.constructor.name, v.constructor.name ]);
              };
          };
      };
      return go(Data_List_Types.Nil.value);
  };
  var drop = function (__copy_v) {
      return function (__copy_v1) {
          var v = __copy_v;
          var v1 = __copy_v1;
          tco: while (true) {
              if (v === 0) {
                  return v1;
              };
              if (v1 instanceof Data_List_Types.Nil) {
                  return Data_List_Types.Nil.value;
              };
              if (v1 instanceof Data_List_Types.Cons) {
                  var __tco_v = v - 1 | 0;
                  var __tco_v1 = v1.value1;
                  v = __tco_v;
                  v1 = __tco_v1;
                  continue tco;
              };
              throw new Error("Failed pattern match at Data.List line 505, column 1 - line 505, column 15: " + [ v.constructor.name, v1.constructor.name ]);
          };
      };
  };                                                                              
  var concat = function (v) {
      return Control_Bind.bind(Data_List_Types.bindList)(v)(Control_Category.id(Control_Category.categoryFn));
  };
  exports["concat"] = concat;
  exports["drop"] = drop;
  exports["filter"] = filter;
  exports["index"] = index;
  exports["length"] = length;
  exports["many"] = many;
  exports["null"] = $$null;
  exports["range"] = range;
  exports["reverse"] = reverse;
  exports["singleton"] = singleton;
  exports["some"] = some;
  exports["take"] = take;
  exports["zipWith"] = zipWith;
})(PS["Data.List"] = PS["Data.List"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Data_List = PS["Data.List"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_List_Types = PS["Data.List.Types"];        
  var CatQueue = (function () {
      function CatQueue(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      CatQueue.create = function (value0) {
          return function (value1) {
              return new CatQueue(value0, value1);
          };
      };
      return CatQueue;
  })();
  var uncons = function (__copy_v) {
      var v = __copy_v;
      tco: while (true) {
          if (v.value0 instanceof Data_List_Types.Nil && v.value1 instanceof Data_List_Types.Nil) {
              return Data_Maybe.Nothing.value;
          };
          if (v.value0 instanceof Data_List_Types.Nil) {
              var __tco_v = new CatQueue(Data_List.reverse(v.value1), Data_List_Types.Nil.value);
              v = __tco_v;
              continue tco;
          };
          if (v.value0 instanceof Data_List_Types.Cons) {
              return new Data_Maybe.Just(new Data_Tuple.Tuple(v.value0.value0, new CatQueue(v.value0.value1, v.value1)));
          };
          throw new Error("Failed pattern match at Data.CatQueue line 51, column 1 - line 51, column 36: " + [ v.constructor.name ]);
      };
  };
  var snoc = function (v) {
      return function (a) {
          return new CatQueue(v.value0, new Data_List_Types.Cons(a, v.value1));
      };
  };
  var $$null = function (v) {
      if (v.value0 instanceof Data_List_Types.Nil && v.value1 instanceof Data_List_Types.Nil) {
          return true;
      };
      return false;
  };
  var empty = new CatQueue(Data_List_Types.Nil.value, Data_List_Types.Nil.value);
  exports["CatQueue"] = CatQueue;
  exports["empty"] = empty;
  exports["null"] = $$null;
  exports["snoc"] = snoc;
  exports["uncons"] = uncons;
})(PS["Data.CatQueue"] = PS["Data.CatQueue"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Data_CatQueue = PS["Data.CatQueue"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_List = PS["Data.List"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_NaturalTransformation = PS["Data.NaturalTransformation"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Data_List_Types = PS["Data.List.Types"];        
  var CatNil = (function () {
      function CatNil() {

      };
      CatNil.value = new CatNil();
      return CatNil;
  })();
  var CatCons = (function () {
      function CatCons(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      CatCons.create = function (value0) {
          return function (value1) {
              return new CatCons(value0, value1);
          };
      };
      return CatCons;
  })();
  var link = function (v) {
      return function (cat) {
          if (v instanceof CatNil) {
              return cat;
          };
          if (v instanceof CatCons) {
              return new CatCons(v.value0, Data_CatQueue.snoc(v.value1)(cat));
          };
          throw new Error("Failed pattern match at Data.CatList line 111, column 1 - line 111, column 22: " + [ v.constructor.name, cat.constructor.name ]);
      };
  };
  var foldr = function (k) {
      return function (b) {
          return function (q) {
              var foldl = function (__copy_v) {
                  return function (__copy_c) {
                      return function (__copy_v1) {
                          var v = __copy_v;
                          var c = __copy_c;
                          var v1 = __copy_v1;
                          tco: while (true) {
                              if (v1 instanceof Data_List_Types.Nil) {
                                  return c;
                              };
                              if (v1 instanceof Data_List_Types.Cons) {
                                  var __tco_v = v;
                                  var __tco_c = v(c)(v1.value0);
                                  var __tco_v1 = v1.value1;
                                  v = __tco_v;
                                  c = __tco_c;
                                  v1 = __tco_v1;
                                  continue tco;
                              };
                              throw new Error("Failed pattern match at Data.CatList line 126, column 3 - line 126, column 22: " + [ v.constructor.name, c.constructor.name, v1.constructor.name ]);
                          };
                      };
                  };
              };
              var go = function (__copy_xs) {
                  return function (__copy_ys) {
                      var xs = __copy_xs;
                      var ys = __copy_ys;
                      tco: while (true) {
                          var $33 = Data_CatQueue.uncons(xs);
                          if ($33 instanceof Data_Maybe.Nothing) {
                              return foldl(function (x) {
                                  return function (i) {
                                      return i(x);
                                  };
                              })(b)(ys);
                          };
                          if ($33 instanceof Data_Maybe.Just) {
                              var __tco_ys = new Data_List_Types.Cons(k($33.value0.value0), ys);
                              xs = $33.value0.value1;
                              ys = __tco_ys;
                              continue tco;
                          };
                          throw new Error("Failed pattern match at Data.CatList line 121, column 14 - line 123, column 67: " + [ $33.constructor.name ]);
                      };
                  };
              };
              return go(q)(Data_List_Types.Nil.value);
          };
      };
  };
  var uncons = function (v) {
      if (v instanceof CatNil) {
          return Data_Maybe.Nothing.value;
      };
      if (v instanceof CatCons) {
          return new Data_Maybe.Just(new Data_Tuple.Tuple(v.value0, (function () {
              var $38 = Data_CatQueue["null"](v.value1);
              if ($38) {
                  return CatNil.value;
              };
              if (!$38) {
                  return foldr(link)(CatNil.value)(v.value1);
              };
              throw new Error("Failed pattern match at Data.CatList line 103, column 39 - line 103, column 89: " + [ $38.constructor.name ]);
          })()));
      };
      throw new Error("Failed pattern match at Data.CatList line 102, column 1 - line 102, column 24: " + [ v.constructor.name ]);
  }; 
  var empty = CatNil.value;
  var append = function (v) {
      return function (v1) {
          if (v1 instanceof CatNil) {
              return v;
          };
          if (v instanceof CatNil) {
              return v1;
          };
          return link(v)(v1);
      };
  }; 
  var semigroupCatList = new Data_Semigroup.Semigroup(append);
  var snoc = function (cat) {
      return function (a) {
          return append(cat)(new CatCons(a, Data_CatQueue.empty));
      };
  };
  exports["CatNil"] = CatNil;
  exports["CatCons"] = CatCons;
  exports["append"] = append;
  exports["empty"] = empty;
  exports["snoc"] = snoc;
  exports["uncons"] = uncons;
  exports["semigroupCatList"] = semigroupCatList;
})(PS["Data.CatList"] = PS["Data.CatList"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_Monad_Trans_Class = PS["Control.Monad.Trans.Class"];
  var Data_CatList = PS["Data.CatList"];
  var Data_Either = PS["Data.Either"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Inject = PS["Data.Inject"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Functor = PS["Data.Functor"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Monad = PS["Control.Monad"];
  var Data_Function = PS["Data.Function"];
  var Control_Category = PS["Control.Category"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Free = (function () {
      function Free(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Free.create = function (value0) {
          return function (value1) {
              return new Free(value0, value1);
          };
      };
      return Free;
  })();
  var Return = (function () {
      function Return(value0) {
          this.value0 = value0;
      };
      Return.create = function (value0) {
          return new Return(value0);
      };
      return Return;
  })();
  var Bind = (function () {
      function Bind(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Bind.create = function (value0) {
          return function (value1) {
              return new Bind(value0, value1);
          };
      };
      return Bind;
  })();
  var toView = function (__copy_v) {
      var v = __copy_v;
      tco: while (true) {
          var runExpF = function (v2) {
              return v2;
          };
          var concatF = function (v2) {
              return function (r) {
                  return new Free(v2.value0, Data_Semigroup.append(Data_CatList.semigroupCatList)(v2.value1)(r));
              };
          };
          if (v.value0 instanceof Return) {
              var $37 = Data_CatList.uncons(v.value1);
              if ($37 instanceof Data_Maybe.Nothing) {
                  return new Return(Unsafe_Coerce.unsafeCoerce(v.value0.value0));
              };
              if ($37 instanceof Data_Maybe.Just) {
                  var __tco_v = Unsafe_Coerce.unsafeCoerce(concatF(runExpF($37.value0.value0)(v.value0.value0))($37.value0.value1));
                  v = __tco_v;
                  continue tco;
              };
              throw new Error("Failed pattern match at Control.Monad.Free line 206, column 7 - line 210, column 64: " + [ $37.constructor.name ]);
          };
          if (v.value0 instanceof Bind) {
              return new Bind(v.value0.value0, function (a) {
                  return Unsafe_Coerce.unsafeCoerce(concatF(v.value0.value1(a))(v.value1));
              });
          };
          throw new Error("Failed pattern match at Control.Monad.Free line 204, column 3 - line 212, column 56: " + [ v.value0.constructor.name ]);
      };
  };
  var fromView = function (f) {
      return new Free(Unsafe_Coerce.unsafeCoerce(f), Data_CatList.empty);
  };
  var freeMonad = new Control_Monad.Monad(function () {
      return freeApplicative;
  }, function () {
      return freeBind;
  });
  var freeFunctor = new Data_Functor.Functor(function (k) {
      return function (f) {
          return Control_Bind.bindFlipped(freeBind)(function ($85) {
              return Control_Applicative.pure(freeApplicative)(k($85));
          })(f);
      };
  });
  var freeBind = new Control_Bind.Bind(function () {
      return freeApply;
  }, function (v) {
      return function (k) {
          return new Free(v.value0, Data_CatList.snoc(v.value1)(Unsafe_Coerce.unsafeCoerce(k)));
      };
  });
  var freeApply = new Control_Apply.Apply(function () {
      return freeFunctor;
  }, Control_Monad.ap(freeMonad));
  var freeApplicative = new Control_Applicative.Applicative(function () {
      return freeApply;
  }, function ($86) {
      return fromView(Return.create($86));
  });
  var liftF = function (f) {
      return fromView(new Bind(Unsafe_Coerce.unsafeCoerce(f), function ($87) {
          return Control_Applicative.pure(freeApplicative)(Unsafe_Coerce.unsafeCoerce($87));
      }));
  };
  var foldFree = function (dictMonadRec) {
      return function (k) {
          var go = function (f) {
              var $81 = toView(f);
              if ($81 instanceof Return) {
                  return Data_Functor.map((((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Control_Monad_Rec_Class.Done.create)(Control_Applicative.pure((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Applicative.Applicative_0"]())($81.value0));
              };
              if ($81 instanceof Bind) {
                  return Data_Functor.map((((dictMonadRec["__superclass_Control.Monad.Monad_0"]())["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(function ($94) {
                      return Control_Monad_Rec_Class.Loop.create($81.value1($94));
                  })(k($81.value0));
              };
              throw new Error("Failed pattern match at Control.Monad.Free line 147, column 10 - line 149, column 37: " + [ $81.constructor.name ]);
          };
          return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(go);
      };
  };
  exports["foldFree"] = foldFree;
  exports["liftF"] = liftF;
  exports["freeFunctor"] = freeFunctor;
  exports["freeBind"] = freeBind;
  exports["freeApplicative"] = freeApplicative;
  exports["freeApply"] = freeApply;
  exports["freeMonad"] = freeMonad;
})(PS["Control.Monad.Free"] = PS["Control.Monad.Free"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_Monad_Cont_Class = PS["Control.Monad.Cont.Class"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Monad_Reader_Class = PS["Control.Monad.Reader.Class"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_Monad_State_Class = PS["Control.Monad.State.Class"];
  var Control_Monad_Trans_Class = PS["Control.Monad.Trans.Class"];
  var Control_Monad_Writer_Class = PS["Control.Monad.Writer.Class"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Functor = PS["Data.Functor"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_Function = PS["Data.Function"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Unit = PS["Data.Unit"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];        
  var StateT = function (x) {
      return x;
  };
  var runStateT = function (v) {
      return v;
  };
  var lazyStateT = new Control_Lazy.Lazy(function (f) {
      return function (s) {
          var $52 = f(Data_Unit.unit);
          return $52(s);
      };
  });
  var functorStateT = function (dictFunctor) {
      return new Data_Functor.Functor(function (f) {
          return function (v) {
              return function (s) {
                  return Data_Functor.map(dictFunctor)(function (v1) {
                      return new Data_Tuple.Tuple(f(v1.value0), v1.value1);
                  })(v(s));
              };
          };
      });
  };
  var evalStateT = function (dictFunctor) {
      return function (v) {
          return function (s) {
              return Data_Functor.map(dictFunctor)(Data_Tuple.fst)(v(s));
          };
      };
  };
  var monadStateT = function (dictMonad) {
      return new Control_Monad.Monad(function () {
          return applicativeStateT(dictMonad);
      }, function () {
          return bindStateT(dictMonad);
      });
  };
  var bindStateT = function (dictMonad) {
      return new Control_Bind.Bind(function () {
          return applyStateT(dictMonad);
      }, function (v) {
          return function (f) {
              return function (s) {
                  return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(v(s))(function (v1) {
                      var $65 = f(v1.value0);
                      return $65(v1.value1);
                  });
              };
          };
      });
  };
  var applyStateT = function (dictMonad) {
      return new Control_Apply.Apply(function () {
          return functorStateT(((dictMonad["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]());
      }, Control_Monad.ap(monadStateT(dictMonad)));
  };
  var applicativeStateT = function (dictMonad) {
      return new Control_Applicative.Applicative(function () {
          return applyStateT(dictMonad);
      }, function (a) {
          return function (s) {
              return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(new Data_Tuple.Tuple(a, s));
          };
      });
  };
  var monadStateStateT = function (dictMonad) {
      return new Control_Monad_State_Class.MonadState(function () {
          return monadStateT(dictMonad);
      }, function (f) {
          return StateT(function ($101) {
              return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(f($101));
          });
      });
  };
  exports["StateT"] = StateT;
  exports["evalStateT"] = evalStateT;
  exports["runStateT"] = runStateT;
  exports["functorStateT"] = functorStateT;
  exports["applyStateT"] = applyStateT;
  exports["applicativeStateT"] = applicativeStateT;
  exports["bindStateT"] = bindStateT;
  exports["monadStateT"] = monadStateT;
  exports["lazyStateT"] = lazyStateT;
  exports["monadStateStateT"] = monadStateStateT;
})(PS["Control.Monad.State.Trans"] = PS["Control.Monad.State.Trans"] || {});
(function(exports) {
    "use strict";

  exports.currentTarget = function (e) {
    return e.currentTarget;
  };
})(PS["DOM.Event.Event"] = PS["DOM.Event.Event"] || {});
(function(exports) {
  /* global exports */
  "use strict";
  // jshint maxparams: 1

  exports.toForeign = function (value) {
    return value;
  };

  exports.unsafeFromForeign = function (value) {
    return value;
  };

  exports.typeOf = function (value) {
    return typeof value;
  };

  exports.tagOf = function (value) {
    return Object.prototype.toString.call(value).slice(8, -1);
  };

  exports.isNull = function (value) {
    return value === null;
  };

  exports.isUndefined = function (value) {
    return value === undefined;
  };
})(PS["Data.Foreign"] = PS["Data.Foreign"] || {});
(function(exports) {
    "use strict";

  // module Data.Int

  exports.fromNumberImpl = function (just) {
    return function (nothing) {
      return function (n) {
        /* jshint bitwise: false */
        return (n | 0) === n ? just(n) : nothing;
      };
    };
  };

  exports.toNumber = function (n) {
    return n;
  };

  exports.fromStringAsImpl = function (just) {
    return function (nothing) {
      return function (radix) {
        var digits;
        if (radix < 11) {
          digits = "[0-" + (radix - 1).toString() + "]";
        } else if (radix === 11) {
          digits = "[0-9a]";
        } else {
          digits = "[0-9a-" + String.fromCharCode(86 + radix) + "]";
        }
        var pattern = new RegExp("^[\\+\\-]?" + digits + "+$", "i");

        return function (s) {
          /* jshint bitwise: false */
          if (pattern.test(s)) {
            var i = parseInt(s, radix);
            return (i | 0) === i ? just(i) : nothing;
          } else {
            return nothing;
          }
        };
      };
    };
  };
})(PS["Data.Int"] = PS["Data.Int"] || {});
(function(exports) {
  /* globals exports */
  "use strict";         

  exports.infinity = Infinity;
})(PS["Global"] = PS["Global"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var $foreign = PS["Global"];
  exports["infinity"] = $foreign.infinity;
})(PS["Global"] = PS["Global"] || {});
(function(exports) {
    "use strict";

  exports.remainder = function (n) {
    return function (m) {
      return n % m;
    };
  };

  exports.round = Math.round;
})(PS["Math"] = PS["Math"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var $foreign = PS["Math"];
  exports["remainder"] = $foreign.remainder;
  exports["round"] = $foreign.round;
})(PS["Math"] = PS["Math"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var $foreign = PS["Data.Int"];
  var Prelude = PS["Prelude"];
  var Data_Int_Bits = PS["Data.Int.Bits"];
  var Data_Maybe = PS["Data.Maybe"];
  var Global = PS["Global"];
  var $$Math = PS["Math"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Bounded = PS["Data.Bounded"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var fromStringAs = $foreign.fromStringAsImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var fromString = fromStringAs(10);
  var fromNumber = $foreign.fromNumberImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var unsafeClamp = function (x) {
      if (x === Global.infinity) {
          return 0;
      };
      if (x === -Global.infinity) {
          return 0;
      };
      if (x >= $foreign.toNumber(Data_Bounded.top(Data_Bounded.boundedInt))) {
          return Data_Bounded.top(Data_Bounded.boundedInt);
      };
      if (x <= $foreign.toNumber(Data_Bounded.bottom(Data_Bounded.boundedInt))) {
          return Data_Bounded.bottom(Data_Bounded.boundedInt);
      };
      if (Data_Boolean.otherwise) {
          return Data_Maybe.fromMaybe(0)(fromNumber(x));
      };
      throw new Error("Failed pattern match at Data.Int line 63, column 1 - line 68, column 43: " + [ x.constructor.name ]);
  };
  var round = function ($2) {
      return unsafeClamp($$Math.round($2));
  };
  exports["fromNumber"] = fromNumber;
  exports["fromString"] = fromString;
  exports["fromStringAs"] = fromStringAs;
  exports["round"] = round;
  exports["toNumber"] = $foreign.toNumber;
})(PS["Data.Int"] = PS["Data.Int"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_List = PS["Data.List"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Function = PS["Data.Function"];
  var Control_Bind = PS["Control.Bind"];
  var singleton = function ($36) {
      return Data_List_Types.NonEmptyList(Data_NonEmpty.singleton(Data_List_Types.plusList)($36));
  };
  exports["singleton"] = singleton;
})(PS["Data.List.NonEmpty"] = PS["Data.List.NonEmpty"] || {});
(function(exports) {
    "use strict";

  exports._charAt = function (just) {
    return function (nothing) {
      return function (i) {
        return function (s) {
          return i >= 0 && i < s.length ? just(s.charAt(i)) : nothing;
        };
      };
    };
  };

  exports.singleton = function (c) {
    return c;
  };

  exports._indexOf = function (just) {
    return function (nothing) {
      return function (x) {
        return function (s) {
          var i = s.indexOf(x);
          return i === -1 ? nothing : just(i);
        };
      };
    };
  };

  exports.length = function (s) {
    return s.length;
  };

  exports.drop = function (n) {
    return function (s) {
      return s.substring(n);
    };
  };

  exports.split = function (sep) {
    return function (s) {
      return s.split(sep);
    };
  };
})(PS["Data.String"] = PS["Data.String"] || {});
(function(exports) {
    "use strict";

  exports.charAt = function (i) {
    return function (s) {
      if (i >= 0 && i < s.length) return s.charAt(i);
      throw new Error("Data.String.Unsafe.charAt: Invalid index.");
    };
  };
})(PS["Data.String.Unsafe"] = PS["Data.String.Unsafe"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var $foreign = PS["Data.String.Unsafe"];
  exports["charAt"] = $foreign.charAt;
})(PS["Data.String.Unsafe"] = PS["Data.String.Unsafe"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var $foreign = PS["Data.String"];
  var Prelude = PS["Prelude"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_String_Unsafe = PS["Data.String.Unsafe"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Show = PS["Data.Show"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Function = PS["Data.Function"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Pattern = function (x) {
      return x;
  };
  var uncons = function (v) {
      if (v === "") {
          return Data_Maybe.Nothing.value;
      };
      return new Data_Maybe.Just({
          head: Data_String_Unsafe.charAt(0)(v), 
          tail: $foreign.drop(1)(v)
      });
  }; 
  var $$null = function (s) {
      return s === "";
  };              
  var newtypePattern = new Data_Newtype.Newtype(function (n) {
      return n;
  }, Pattern);                                                                                
  var indexOf = $foreign._indexOf(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);      
  var charAt = $foreign._charAt(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  exports["Pattern"] = Pattern;
  exports["charAt"] = charAt;
  exports["indexOf"] = indexOf;
  exports["null"] = $$null;
  exports["uncons"] = uncons;
  exports["newtypePattern"] = newtypePattern;
  exports["drop"] = $foreign.drop;
  exports["length"] = $foreign.length;
  exports["singleton"] = $foreign.singleton;
  exports["split"] = $foreign.split;
})(PS["Data.String"] = PS["Data.String"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var $foreign = PS["Data.Foreign"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Except = PS["Control.Monad.Except"];
  var Data_Either = PS["Data.Either"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Int = PS["Data.Int"];
  var Data_List_NonEmpty = PS["Data.List.NonEmpty"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_String = PS["Data.String"];
  var Data_Eq = PS["Data.Eq"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Show = PS["Data.Show"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Data_Identity = PS["Data.Identity"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_Function = PS["Data.Function"];
  var Data_Boolean = PS["Data.Boolean"];
  var TypeMismatch = (function () {
      function TypeMismatch(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      TypeMismatch.create = function (value0) {
          return function (value1) {
              return new TypeMismatch(value0, value1);
          };
      };
      return TypeMismatch;
  })();
  var ErrorAtProperty = (function () {
      function ErrorAtProperty(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ErrorAtProperty.create = function (value0) {
          return function (value1) {
              return new ErrorAtProperty(value0, value1);
          };
      };
      return ErrorAtProperty;
  })();
  var fail = function ($112) {
      return Control_Monad_Error_Class.throwError(Control_Monad_Except_Trans.monadErrorExceptT(Data_Identity.monadIdentity))(Data_List_NonEmpty.singleton($112));
  };
  var unsafeReadTagged = function (tag) {
      return function (value) {
          if ($foreign.tagOf(value) === tag) {
              return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))($foreign.unsafeFromForeign(value));
          };
          if (Data_Boolean.otherwise) {
              return fail(new TypeMismatch(tag, $foreign.tagOf(value)));
          };
          throw new Error("Failed pattern match at Data.Foreign line 109, column 1 - line 111, column 54: " + [ tag.constructor.name, value.constructor.name ]);
      };
  };
  var readBoolean = unsafeReadTagged("Boolean");
  var readString = unsafeReadTagged("String");
  exports["TypeMismatch"] = TypeMismatch;
  exports["ErrorAtProperty"] = ErrorAtProperty;
  exports["fail"] = fail;
  exports["readBoolean"] = readBoolean;
  exports["readString"] = readString;
  exports["unsafeReadTagged"] = unsafeReadTagged;
  exports["isNull"] = $foreign.isNull;
  exports["isUndefined"] = $foreign.isUndefined;
  exports["toForeign"] = $foreign.toForeign;
  exports["typeOf"] = $foreign.typeOf;
})(PS["Data.Foreign"] = PS["Data.Foreign"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Newtype = PS["Data.Newtype"];
  var DOM_Event_Types = PS["DOM.Event.Types"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];
  var DOM_Util_FFI = PS["DOM.Util.FFI"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Ord = PS["Data.Ord"];                                     
  var elementToNode = Unsafe_Coerce.unsafeCoerce;
  exports["elementToNode"] = elementToNode;
})(PS["DOM.Node.Types"] = PS["DOM.Node.Types"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var $foreign = PS["DOM.Event.Event"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Data_Enum = PS["Data.Enum"];
  var Data_Maybe = PS["Data.Maybe"];
  var DOM = PS["DOM"];
  var DOM_Event_EventPhase = PS["DOM.Event.EventPhase"];
  var DOM_Event_Types = PS["DOM.Event.Types"];
  var DOM_Node_Types = PS["DOM.Node.Types"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  exports["currentTarget"] = $foreign.currentTarget;
})(PS["DOM.Event.Event"] = PS["DOM.Event.Event"] || {});
(function(exports) {
    "use strict";

  exports.eventListener = function (fn) {
    return function (event) {
      return fn(event)();
    };
  };

  exports.addEventListener = function (type) {
    return function (listener) {
      return function (useCapture) {
        return function (target) {
          return function () {
            target.addEventListener(type, listener, useCapture);
            return {};
          };
        };
      };
    };
  };
})(PS["DOM.Event.EventTarget"] = PS["DOM.Event.EventTarget"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var $foreign = PS["DOM.Event.EventTarget"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var DOM = PS["DOM"];
  var DOM_Event_Types = PS["DOM.Event.Types"];
  exports["addEventListener"] = $foreign.addEventListener;
  exports["eventListener"] = $foreign.eventListener;
})(PS["DOM.Event.EventTarget"] = PS["DOM.Event.EventTarget"] || {});
(function(exports) {
  /* global window */
  "use strict";

  exports.window = function () {
    return window;
  };
})(PS["DOM.HTML"] = PS["DOM.HTML"] || {});
(function(exports) {
    "use strict";

  exports._readHTMLElement = function (failure) {
    return function (success) {
      return function (value) {
        var tag = Object.prototype.toString.call(value);
        if (tag.indexOf("[object HTML") === 0 && tag.indexOf("Element]") === tag.length - 8) {
          return success(value);
        } else {
          return failure(tag);
        }
      };
    };
  };
})(PS["DOM.HTML.Types"] = PS["DOM.HTML.Types"] || {});
(function(exports) {
    "use strict";

  //------------------------------------------------------------------------------
  // Array size ------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.length = function (xs) {
    return xs.length;
  };

  exports.snoc = function (l) {
    return function (e) {
      var l1 = l.slice();
      l1.push(e);
      return l1;
    };
  };

  //------------------------------------------------------------------------------
  // Subarrays -------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.slice = function (s) {
    return function (e) {
      return function (l) {
        return l.slice(s, e);
      };
    };
  };
})(PS["Data.Array"] = PS["Data.Array"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var $foreign = PS["Data.Array"];
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_Monad_ST = PS["Control.Monad.ST"];
  var Data_Array_ST = PS["Data.Array.ST"];
  var Data_Array_ST_Iterator = PS["Data.Array.ST.Iterator"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Data_Function = PS["Data.Function"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Eq = PS["Data.Eq"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Control_Apply = PS["Control.Apply"];
  var Data_Functor = PS["Data.Functor"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Control_Category = PS["Control.Category"];
  exports["length"] = $foreign.length;
  exports["snoc"] = $foreign.snoc;
})(PS["Data.Array"] = PS["Data.Array"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // jshint maxparams: 4
  exports.unsafeReadPropImpl = function (f, s, key, value) {
    return value == null ? f : s(value[key]);
  };

  // jshint maxparams: 2
  exports.unsafeHasOwnProperty = function (prop, value) {
    return Object.prototype.hasOwnProperty.call(value, prop);
  };

  exports.unsafeHasProperty = function (prop, value) {
    return prop in value;
  };
})(PS["Data.Foreign.Index"] = PS["Data.Foreign.Index"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var $foreign = PS["Data.Foreign.Index"];
  var Prelude = PS["Prelude"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Function = PS["Data.Function"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Data_Identity = PS["Data.Identity"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Eq = PS["Data.Eq"];        
  var Index = function (errorAt, hasOwnProperty, hasProperty, ix) {
      this.errorAt = errorAt;
      this.hasOwnProperty = hasOwnProperty;
      this.hasProperty = hasProperty;
      this.ix = ix;
  };
  var unsafeReadProp = function (k) {
      return function (value) {
          return $foreign.unsafeReadPropImpl(Data_Foreign.fail(new Data_Foreign.TypeMismatch("object", Data_Foreign.typeOf(value))), Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity)), k, value);
      };
  };
  var prop = unsafeReadProp;
  var ix = function (dict) {
      return dict.ix;
  };                         
  var hasPropertyImpl = function (v) {
      return function (value) {
          if (Data_Foreign.isNull(value)) {
              return false;
          };
          if (Data_Foreign.isUndefined(value)) {
              return false;
          };
          if (Data_Foreign.typeOf(value) === "object" || Data_Foreign.typeOf(value) === "function") {
              return $foreign.unsafeHasProperty(v, value);
          };
          return false;
      };
  };
  var hasProperty = function (dict) {
      return dict.hasProperty;
  };
  var hasOwnPropertyImpl = function (v) {
      return function (value) {
          if (Data_Foreign.isNull(value)) {
              return false;
          };
          if (Data_Foreign.isUndefined(value)) {
              return false;
          };
          if (Data_Foreign.typeOf(value) === "object" || Data_Foreign.typeOf(value) === "function") {
              return $foreign.unsafeHasOwnProperty(v, value);
          };
          return false;
      };
  };                                                                                                                         
  var indexString = new Index(Data_Foreign.ErrorAtProperty.create, hasOwnPropertyImpl, hasPropertyImpl, Data_Function.flip(prop));
  var hasOwnProperty = function (dict) {
      return dict.hasOwnProperty;
  };
  var errorAt = function (dict) {
      return dict.errorAt;
  };
  exports["Index"] = Index;
  exports["errorAt"] = errorAt;
  exports["hasOwnProperty"] = hasOwnProperty;
  exports["hasProperty"] = hasProperty;
  exports["ix"] = ix;
  exports["prop"] = prop;
  exports["indexString"] = indexString;
})(PS["Data.Foreign.Index"] = PS["Data.Foreign.Index"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Monad_Except = PS["Control.Monad.Except"];
  var Data_Array = PS["Data.Array"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Either = PS["Data.Either"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Foreign_Index = PS["Data.Foreign.Index"];
  var Data_Foreign_Null = PS["Data.Foreign.Null"];
  var Data_Foreign_NullOrUndefined = PS["Data.Foreign.NullOrUndefined"];
  var Data_Foreign_Undefined = PS["Data.Foreign.Undefined"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Traversable = PS["Data.Traversable"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Semiring = PS["Data.Semiring"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Identity = PS["Data.Identity"];        
  var IsForeign = function (read) {
      this.read = read;
  };
  var stringIsForeign = new IsForeign(Data_Foreign.readString);
  var read = function (dict) {
      return dict.read;
  };
  var readWith = function (dictIsForeign) {
      return function (f) {
          return function ($23) {
              return Control_Monad_Except.mapExcept(Data_Bifunctor.lmap(Data_Either.bifunctorEither)(f))(read(dictIsForeign)($23));
          };
      };
  };
  var readProp = function (dictIsForeign) {
      return function (dictIndex) {
          return function (prop) {
              return function (value) {
                  return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Data_Foreign_Index.ix(dictIndex)(value)(prop))(readWith(dictIsForeign)(Data_Functor.map(Data_List_Types.functorNonEmptyList)(Data_Foreign_Index.errorAt(dictIndex)(prop))));
              };
          };
      };
  };                                                        
  var booleanIsForeign = new IsForeign(Data_Foreign.readBoolean);
  exports["IsForeign"] = IsForeign;
  exports["read"] = read;
  exports["readProp"] = readProp;
  exports["readWith"] = readWith;
  exports["stringIsForeign"] = stringIsForeign;
  exports["booleanIsForeign"] = booleanIsForeign;
})(PS["Data.Foreign.Class"] = PS["Data.Foreign.Class"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var $foreign = PS["DOM.HTML.Types"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Data_Either = PS["Data.Either"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Foreign_Class = PS["Data.Foreign.Class"];
  var DOM_Event_Types = PS["DOM.Event.Types"];
  var DOM_Node_Types = PS["DOM.Node.Types"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Identity = PS["Data.Identity"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_List_Types = PS["Data.List.Types"];        
  var windowToEventTarget = Unsafe_Coerce.unsafeCoerce;                        
  var readHTMLElement = $foreign._readHTMLElement(function ($0) {
      return Control_Monad_Except_Trans.except(Data_Identity.applicativeIdentity)(Data_Either.Left.create(Control_Applicative.pure(Data_List_Types.applicativeNonEmptyList)(Data_Foreign.TypeMismatch.create("HTMLElement")($0))));
  })(function ($1) {
      return Control_Monad_Except_Trans.except(Data_Identity.applicativeIdentity)(Data_Either.Right.create($1));
  });                                                                    
  var htmlElementToNode = Unsafe_Coerce.unsafeCoerce;   
  var htmlDocumentToParentNode = Unsafe_Coerce.unsafeCoerce; 
  var htmlDocumentToDocument = Unsafe_Coerce.unsafeCoerce;
  exports["htmlDocumentToDocument"] = htmlDocumentToDocument;
  exports["htmlDocumentToParentNode"] = htmlDocumentToParentNode;
  exports["htmlElementToNode"] = htmlElementToNode;
  exports["readHTMLElement"] = readHTMLElement;
  exports["windowToEventTarget"] = windowToEventTarget;
})(PS["DOM.HTML.Types"] = PS["DOM.HTML.Types"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var $foreign = PS["DOM.HTML"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var DOM = PS["DOM"];
  var DOM_HTML_Types = PS["DOM.HTML.Types"];
  exports["window"] = $foreign.window;
})(PS["DOM.HTML"] = PS["DOM.HTML"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var DOM_Event_Types = PS["DOM.Event.Types"];
  var load = "load";
  exports["load"] = load;
})(PS["DOM.HTML.Event.EventTypes"] = PS["DOM.HTML.Event.EventTypes"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var InputButton = (function () {
      function InputButton() {

      };
      InputButton.value = new InputButton();
      return InputButton;
  })();
  var InputCheckbox = (function () {
      function InputCheckbox() {

      };
      InputCheckbox.value = new InputCheckbox();
      return InputCheckbox;
  })();
  var InputColor = (function () {
      function InputColor() {

      };
      InputColor.value = new InputColor();
      return InputColor;
  })();
  var InputDate = (function () {
      function InputDate() {

      };
      InputDate.value = new InputDate();
      return InputDate;
  })();
  var InputDatetime = (function () {
      function InputDatetime() {

      };
      InputDatetime.value = new InputDatetime();
      return InputDatetime;
  })();
  var InputDatetimeLocal = (function () {
      function InputDatetimeLocal() {

      };
      InputDatetimeLocal.value = new InputDatetimeLocal();
      return InputDatetimeLocal;
  })();
  var InputEmail = (function () {
      function InputEmail() {

      };
      InputEmail.value = new InputEmail();
      return InputEmail;
  })();
  var InputFile = (function () {
      function InputFile() {

      };
      InputFile.value = new InputFile();
      return InputFile;
  })();
  var InputHidden = (function () {
      function InputHidden() {

      };
      InputHidden.value = new InputHidden();
      return InputHidden;
  })();
  var InputImage = (function () {
      function InputImage() {

      };
      InputImage.value = new InputImage();
      return InputImage;
  })();
  var InputMonth = (function () {
      function InputMonth() {

      };
      InputMonth.value = new InputMonth();
      return InputMonth;
  })();
  var InputNumber = (function () {
      function InputNumber() {

      };
      InputNumber.value = new InputNumber();
      return InputNumber;
  })();
  var InputPassword = (function () {
      function InputPassword() {

      };
      InputPassword.value = new InputPassword();
      return InputPassword;
  })();
  var InputRadio = (function () {
      function InputRadio() {

      };
      InputRadio.value = new InputRadio();
      return InputRadio;
  })();
  var InputRange = (function () {
      function InputRange() {

      };
      InputRange.value = new InputRange();
      return InputRange;
  })();
  var InputReset = (function () {
      function InputReset() {

      };
      InputReset.value = new InputReset();
      return InputReset;
  })();
  var InputSearch = (function () {
      function InputSearch() {

      };
      InputSearch.value = new InputSearch();
      return InputSearch;
  })();
  var InputSubmit = (function () {
      function InputSubmit() {

      };
      InputSubmit.value = new InputSubmit();
      return InputSubmit;
  })();
  var InputTel = (function () {
      function InputTel() {

      };
      InputTel.value = new InputTel();
      return InputTel;
  })();
  var InputText = (function () {
      function InputText() {

      };
      InputText.value = new InputText();
      return InputText;
  })();
  var InputTime = (function () {
      function InputTime() {

      };
      InputTime.value = new InputTime();
      return InputTime;
  })();
  var InputUrl = (function () {
      function InputUrl() {

      };
      InputUrl.value = new InputUrl();
      return InputUrl;
  })();
  var InputWeek = (function () {
      function InputWeek() {

      };
      InputWeek.value = new InputWeek();
      return InputWeek;
  })();
  var renderInputType = function (v) {
      if (v instanceof InputButton) {
          return "button";
      };
      if (v instanceof InputCheckbox) {
          return "checkbox";
      };
      if (v instanceof InputColor) {
          return "color";
      };
      if (v instanceof InputDate) {
          return "date";
      };
      if (v instanceof InputDatetime) {
          return "datetime";
      };
      if (v instanceof InputDatetimeLocal) {
          return "datetime-local";
      };
      if (v instanceof InputEmail) {
          return "email";
      };
      if (v instanceof InputFile) {
          return "file";
      };
      if (v instanceof InputHidden) {
          return "hidden";
      };
      if (v instanceof InputImage) {
          return "image";
      };
      if (v instanceof InputMonth) {
          return "month";
      };
      if (v instanceof InputNumber) {
          return "number";
      };
      if (v instanceof InputPassword) {
          return "password";
      };
      if (v instanceof InputRadio) {
          return "radio";
      };
      if (v instanceof InputRange) {
          return "range";
      };
      if (v instanceof InputReset) {
          return "reset";
      };
      if (v instanceof InputSearch) {
          return "search";
      };
      if (v instanceof InputSubmit) {
          return "submit";
      };
      if (v instanceof InputTel) {
          return "tel";
      };
      if (v instanceof InputText) {
          return "text";
      };
      if (v instanceof InputTime) {
          return "time";
      };
      if (v instanceof InputUrl) {
          return "url";
      };
      if (v instanceof InputWeek) {
          return "week";
      };
      throw new Error("Failed pattern match at DOM.HTML.Indexed.InputType line 29, column 19 - line 52, column 16: " + [ v.constructor.name ]);
  };
  exports["InputButton"] = InputButton;
  exports["InputCheckbox"] = InputCheckbox;
  exports["InputColor"] = InputColor;
  exports["InputDate"] = InputDate;
  exports["InputDatetime"] = InputDatetime;
  exports["InputDatetimeLocal"] = InputDatetimeLocal;
  exports["InputEmail"] = InputEmail;
  exports["InputFile"] = InputFile;
  exports["InputHidden"] = InputHidden;
  exports["InputImage"] = InputImage;
  exports["InputMonth"] = InputMonth;
  exports["InputNumber"] = InputNumber;
  exports["InputPassword"] = InputPassword;
  exports["InputRadio"] = InputRadio;
  exports["InputRange"] = InputRange;
  exports["InputReset"] = InputReset;
  exports["InputSearch"] = InputSearch;
  exports["InputSubmit"] = InputSubmit;
  exports["InputTel"] = InputTel;
  exports["InputText"] = InputText;
  exports["InputTime"] = InputTime;
  exports["InputUrl"] = InputUrl;
  exports["InputWeek"] = InputWeek;
  exports["renderInputType"] = renderInputType;
})(PS["DOM.HTML.Indexed.InputType"] = PS["DOM.HTML.Indexed.InputType"] || {});
(function(exports) {
    "use strict";

  exports.document = function (window) {
    return function () {
      return window.document;
    };
  };
})(PS["DOM.HTML.Window"] = PS["DOM.HTML.Window"] || {});
(function(exports) {
    "use strict";

  exports["null"] = null;

  exports.nullable = function (a, r, f) {
    return a == null ? r : f(a);
  };

  exports.notNull = function (x) {
    return x;
  };
})(PS["Data.Nullable"] = PS["Data.Nullable"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var $foreign = PS["Data.Nullable"];
  var Prelude = PS["Prelude"];
  var Data_Function = PS["Data.Function"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Show = PS["Data.Show"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Ord = PS["Data.Ord"];        
  var toNullable = Data_Maybe.maybe($foreign["null"])($foreign.notNull);
  var toMaybe = function (n) {
      return $foreign.nullable(n, Data_Maybe.Nothing.value, Data_Maybe.Just.create);
  };
  exports["toMaybe"] = toMaybe;
  exports["toNullable"] = toNullable;
})(PS["Data.Nullable"] = PS["Data.Nullable"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var $foreign = PS["DOM.HTML.Window"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var DOM = PS["DOM"];
  var DOM_HTML_Types = PS["DOM.HTML.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Prelude = PS["Prelude"];
  var Data_Functor = PS["Data.Functor"];
  exports["document"] = $foreign.document;
})(PS["DOM.HTML.Window"] = PS["DOM.HTML.Window"] || {});
(function(exports) {
    "use strict";

  var getEffProp = function (name) {
    return function (node) {
      return function () {
        return node[name];
      };
    };
  };                                                  

  exports.parentNode = getEffProp("parentNode");          

  exports.nextSibling = getEffProp("nextSibling");

  exports.insertBefore = function (node1) {
    return function (node2) {
      return function (parent) {
        return function () {
          return parent.insertBefore(node1, node2);
        };
      };
    };
  };

  exports.appendChild = function (node) {
    return function (parent) {
      return function () {
        return parent.appendChild(node);
      };
    };
  };

  exports.removeChild = function (node) {
    return function (parent) {
      return function () {
        return parent.removeChild(node);
      };
    };
  };
})(PS["DOM.Node.Node"] = PS["DOM.Node.Node"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var $foreign = PS["DOM.Node.Node"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Data_Enum = PS["Data.Enum"];
  var Data_Nullable = PS["Data.Nullable"];
  var Data_Maybe = PS["Data.Maybe"];
  var DOM = PS["DOM"];
  var DOM_Node_NodeType = PS["DOM.Node.NodeType"];
  var DOM_Node_Types = PS["DOM.Node.Types"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  exports["appendChild"] = $foreign.appendChild;
  exports["insertBefore"] = $foreign.insertBefore;
  exports["nextSibling"] = $foreign.nextSibling;
  exports["parentNode"] = $foreign.parentNode;
  exports["removeChild"] = $foreign.removeChild;
})(PS["DOM.Node.Node"] = PS["DOM.Node.Node"] || {});
(function(exports) {
    "use strict";                                             

  exports.querySelector = function (selector) {
    return function (node) {
      return function () {
        return node.querySelector(selector);
      };
    };
  };
})(PS["DOM.Node.ParentNode"] = PS["DOM.Node.ParentNode"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var $foreign = PS["DOM.Node.ParentNode"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Data_Nullable = PS["Data.Nullable"];
  var DOM = PS["DOM"];
  var DOM_Node_Types = PS["DOM.Node.Types"];
  exports["querySelector"] = $foreign.querySelector;
})(PS["DOM.Node.ParentNode"] = PS["DOM.Node.ParentNode"] || {});
(function(exports) {
    "use strict";

  exports.toCharCode = function (c) {
    return c.charCodeAt(0);
  };
})(PS["Data.Char"] = PS["Data.Char"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var $foreign = PS["Data.Char"];
  exports["toCharCode"] = $foreign.toCharCode;
})(PS["Data.Char"] = PS["Data.Char"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Char = PS["Data.Char"];
  var Data_Char_Unicode_Internal = PS["Data.Char.Unicode.Internal"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Show = PS["Data.Show"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Bounded = PS["Data.Bounded"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Function = PS["Data.Function"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Boolean = PS["Data.Boolean"];
  var isDigit = function (c) {
      var diff = Data_Char.toCharCode(c) - Data_Char.toCharCode("0") | 0;
      return diff <= 9 && diff >= 0;
  };
  exports["isDigit"] = isDigit;
})(PS["Data.Char.Unicode"] = PS["Data.Char.Unicode"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Exists = PS["Data.Exists"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Monad_Trans_Class = PS["Control.Monad.Trans.Class"];
  var Data_Functor = PS["Data.Functor"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Control_Apply = PS["Control.Apply"];
  var Data_Function = PS["Data.Function"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Category = PS["Control.Category"];
  var unCoyoneda = function (f) {
      return function (v) {
          return Data_Exists.runExists(function (v1) {
              return f(v1.value0)(v1.value1);
          })(v);
      };
  };
  exports["unCoyoneda"] = unCoyoneda;
})(PS["Data.Coyoneda"] = PS["Data.Coyoneda"] || {});
(function(exports) {
    "use strict";

  exports.defer = function () {

    function Defer(thunk) {
      if (this instanceof Defer) {
        this.thunk = thunk;
        return this;
      } else {
        return new Defer(thunk);
      }
    }

    Defer.prototype.force = function () {
      var value = this.thunk();
      this.thunk = null;
      this.force = function () {
        return value;
      };
      return value;
    };

    return Defer;

  }();

  exports.force = function (l) {
    return l.force();
  };
})(PS["Data.Lazy"] = PS["Data.Lazy"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var $foreign = PS["Data.Lazy"];
  var Prelude = PS["Prelude"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Lazy = PS["Control.Lazy"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Ring = PS["Data.Ring"];
  var Data_CommutativeRing = PS["Data.CommutativeRing"];
  var Data_EuclideanRing = PS["Data.EuclideanRing"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Field = PS["Data.Field"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Control_Apply = PS["Control.Apply"];
  var Data_Functor = PS["Data.Functor"];
  var Data_BooleanAlgebra = PS["Data.BooleanAlgebra"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Function = PS["Data.Function"];
  var Control_Monad = PS["Control.Monad"];
  var Data_Show = PS["Data.Show"];
  var Data_Unit = PS["Data.Unit"];
  exports["defer"] = $foreign.defer;
  exports["force"] = $foreign.force;
})(PS["Data.Lazy"] = PS["Data.Lazy"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_List = PS["Data.List"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Show = PS["Data.Show"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Functor = PS["Data.Functor"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Category = PS["Control.Category"];
  var Data_List_Types = PS["Data.List.Types"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Function = PS["Data.Function"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semiring = PS["Data.Semiring"];        
  var Leaf = (function () {
      function Leaf() {

      };
      Leaf.value = new Leaf();
      return Leaf;
  })();
  var Two = (function () {
      function Two(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      Two.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new Two(value0, value1, value2, value3);
                  };
              };
          };
      };
      return Two;
  })();
  var Three = (function () {
      function Three(value0, value1, value2, value3, value4, value5, value6) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
          this.value6 = value6;
      };
      Three.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return function (value6) {
                                  return new Three(value0, value1, value2, value3, value4, value5, value6);
                              };
                          };
                      };
                  };
              };
          };
      };
      return Three;
  })();
  var TwoLeft = (function () {
      function TwoLeft(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      TwoLeft.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new TwoLeft(value0, value1, value2);
              };
          };
      };
      return TwoLeft;
  })();
  var TwoRight = (function () {
      function TwoRight(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      TwoRight.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new TwoRight(value0, value1, value2);
              };
          };
      };
      return TwoRight;
  })();
  var ThreeLeft = (function () {
      function ThreeLeft(value0, value1, value2, value3, value4, value5) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
      };
      ThreeLeft.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return new ThreeLeft(value0, value1, value2, value3, value4, value5);
                          };
                      };
                  };
              };
          };
      };
      return ThreeLeft;
  })();
  var ThreeMiddle = (function () {
      function ThreeMiddle(value0, value1, value2, value3, value4, value5) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
      };
      ThreeMiddle.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return new ThreeMiddle(value0, value1, value2, value3, value4, value5);
                          };
                      };
                  };
              };
          };
      };
      return ThreeMiddle;
  })();
  var ThreeRight = (function () {
      function ThreeRight(value0, value1, value2, value3, value4, value5) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
      };
      ThreeRight.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return new ThreeRight(value0, value1, value2, value3, value4, value5);
                          };
                      };
                  };
              };
          };
      };
      return ThreeRight;
  })();
  var KickUp = (function () {
      function KickUp(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      KickUp.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new KickUp(value0, value1, value2, value3);
                  };
              };
          };
      };
      return KickUp;
  })();
  var values = function (v) {
      if (v instanceof Leaf) {
          return Data_List_Types.Nil.value;
      };
      if (v instanceof Two) {
          return Data_Semigroup.append(Data_List_Types.semigroupList)(values(v.value0))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value2))(values(v.value3)));
      };
      if (v instanceof Three) {
          return Data_Semigroup.append(Data_List_Types.semigroupList)(values(v.value0))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value2))(Data_Semigroup.append(Data_List_Types.semigroupList)(values(v.value3))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value5))(values(v.value6)))));
      };
      throw new Error("Failed pattern match at Data.Map line 423, column 1 - line 423, column 18: " + [ v.constructor.name ]);
  };
  var lookup = function (dictOrd) {
      return function (k) {
          return function (tree) {
              if (tree instanceof Leaf) {
                  return Data_Maybe.Nothing.value;
              };
              var comp = Data_Ord.compare(dictOrd);
              var __unused = function (dictPartial1) {
                  return function ($dollar43) {
                      return $dollar43;
                  };
              };
              return __unused()((function () {
                  if (tree instanceof Two) {
                      var $189 = comp(k)(tree.value1);
                      if ($189 instanceof Data_Ordering.EQ) {
                          return new Data_Maybe.Just(tree.value2);
                      };
                      if ($189 instanceof Data_Ordering.LT) {
                          return lookup(dictOrd)(k)(tree.value0);
                      };
                      return lookup(dictOrd)(k)(tree.value3);
                  };
                  if (tree instanceof Three) {
                      var $194 = comp(k)(tree.value1);
                      if ($194 instanceof Data_Ordering.EQ) {
                          return new Data_Maybe.Just(tree.value2);
                      };
                      var $196 = comp(k)(tree.value4);
                      if ($196 instanceof Data_Ordering.EQ) {
                          return new Data_Maybe.Just(tree.value5);
                      };
                      if ($194 instanceof Data_Ordering.LT) {
                          return lookup(dictOrd)(k)(tree.value0);
                      };
                      if ($196 instanceof Data_Ordering.GT) {
                          return lookup(dictOrd)(k)(tree.value6);
                      };
                      return lookup(dictOrd)(k)(tree.value3);
                  };
                  throw new Error("Failed pattern match at Data.Map line 149, column 10 - line 163, column 39: " + [ tree.constructor.name ]);
              })());
          };
      };
  };
  var member = function (dictOrd) {
      return function (k) {
          return function (m) {
              return Data_Maybe.isJust(lookup(dictOrd)(k)(m));
          };
      };
  };
  var keys = function (v) {
      if (v instanceof Leaf) {
          return Data_List_Types.Nil.value;
      };
      if (v instanceof Two) {
          return Data_Semigroup.append(Data_List_Types.semigroupList)(keys(v.value0))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value1))(keys(v.value3)));
      };
      if (v instanceof Three) {
          return Data_Semigroup.append(Data_List_Types.semigroupList)(keys(v.value0))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value1))(Data_Semigroup.append(Data_List_Types.semigroupList)(keys(v.value3))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value4))(keys(v.value6)))));
      };
      throw new Error("Failed pattern match at Data.Map line 417, column 1 - line 417, column 16: " + [ v.constructor.name ]);
  };
  var functorMap = new Data_Functor.Functor(function (v) {
      return function (v1) {
          if (v1 instanceof Leaf) {
              return Leaf.value;
          };
          if (v1 instanceof Two) {
              return new Two(Data_Functor.map(functorMap)(v)(v1.value0), v1.value1, v(v1.value2), Data_Functor.map(functorMap)(v)(v1.value3));
          };
          if (v1 instanceof Three) {
              return new Three(Data_Functor.map(functorMap)(v)(v1.value0), v1.value1, v(v1.value2), Data_Functor.map(functorMap)(v)(v1.value3), v1.value4, v(v1.value5), Data_Functor.map(functorMap)(v)(v1.value6));
          };
          throw new Error("Failed pattern match at Data.Map line 74, column 3 - line 74, column 20: " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var fromZipper = function (__copy_dictOrd) {
      return function (__copy_v) {
          return function (__copy_tree) {
              var dictOrd = __copy_dictOrd;
              var v = __copy_v;
              var tree = __copy_tree;
              tco: while (true) {
                  if (v instanceof Data_List_Types.Nil) {
                      return tree;
                  };
                  if (v instanceof Data_List_Types.Cons) {
                      if (v.value0 instanceof TwoLeft) {
                          var __tco_dictOrd = dictOrd;
                          var __tco_v = v.value1;
                          var __tco_tree = new Two(tree, v.value0.value0, v.value0.value1, v.value0.value2);
                          dictOrd = __tco_dictOrd;
                          v = __tco_v;
                          tree = __tco_tree;
                          continue tco;
                      };
                      if (v.value0 instanceof TwoRight) {
                          var __tco_dictOrd = dictOrd;
                          var __tco_v = v.value1;
                          var __tco_tree = new Two(v.value0.value0, v.value0.value1, v.value0.value2, tree);
                          dictOrd = __tco_dictOrd;
                          v = __tco_v;
                          tree = __tco_tree;
                          continue tco;
                      };
                      if (v.value0 instanceof ThreeLeft) {
                          var __tco_dictOrd = dictOrd;
                          var __tco_v = v.value1;
                          var __tco_tree = new Three(tree, v.value0.value0, v.value0.value1, v.value0.value2, v.value0.value3, v.value0.value4, v.value0.value5);
                          dictOrd = __tco_dictOrd;
                          v = __tco_v;
                          tree = __tco_tree;
                          continue tco;
                      };
                      if (v.value0 instanceof ThreeMiddle) {
                          var __tco_dictOrd = dictOrd;
                          var __tco_v = v.value1;
                          var __tco_tree = new Three(v.value0.value0, v.value0.value1, v.value0.value2, tree, v.value0.value3, v.value0.value4, v.value0.value5);
                          dictOrd = __tco_dictOrd;
                          v = __tco_v;
                          tree = __tco_tree;
                          continue tco;
                      };
                      if (v.value0 instanceof ThreeRight) {
                          var __tco_dictOrd = dictOrd;
                          var __tco_v = v.value1;
                          var __tco_tree = new Three(v.value0.value0, v.value0.value1, v.value0.value2, v.value0.value3, v.value0.value4, v.value0.value5, tree);
                          dictOrd = __tco_dictOrd;
                          v = __tco_v;
                          tree = __tco_tree;
                          continue tco;
                      };
                      throw new Error("Failed pattern match at Data.Map line 240, column 3 - line 245, column 88: " + [ v.value0.constructor.name ]);
                  };
                  throw new Error("Failed pattern match at Data.Map line 238, column 1 - line 238, column 27: " + [ v.constructor.name, tree.constructor.name ]);
              };
          };
      };
  };
  var insert = function (dictOrd) {
      var up = function (__copy_v) {
          return function (__copy_v1) {
              var v = __copy_v;
              var v1 = __copy_v1;
              tco: while (true) {
                  if (v instanceof Data_List_Types.Nil) {
                      return new Two(v1.value0, v1.value1, v1.value2, v1.value3);
                  };
                  if (v instanceof Data_List_Types.Cons) {
                      if (v.value0 instanceof TwoLeft) {
                          return fromZipper(dictOrd)(v.value1)(new Three(v1.value0, v1.value1, v1.value2, v1.value3, v.value0.value0, v.value0.value1, v.value0.value2));
                      };
                      if (v.value0 instanceof TwoRight) {
                          return fromZipper(dictOrd)(v.value1)(new Three(v.value0.value0, v.value0.value1, v.value0.value2, v1.value0, v1.value1, v1.value2, v1.value3));
                      };
                      if (v.value0 instanceof ThreeLeft) {
                          var __tco_v = v.value1;
                          var __tco_v1 = new KickUp(new Two(v1.value0, v1.value1, v1.value2, v1.value3), v.value0.value0, v.value0.value1, new Two(v.value0.value2, v.value0.value3, v.value0.value4, v.value0.value5));
                          v = __tco_v;
                          v1 = __tco_v1;
                          continue tco;
                      };
                      if (v.value0 instanceof ThreeMiddle) {
                          var __tco_v = v.value1;
                          var __tco_v1 = new KickUp(new Two(v.value0.value0, v.value0.value1, v.value0.value2, v1.value0), v1.value1, v1.value2, new Two(v1.value3, v.value0.value3, v.value0.value4, v.value0.value5));
                          v = __tco_v;
                          v1 = __tco_v1;
                          continue tco;
                      };
                      if (v.value0 instanceof ThreeRight) {
                          var __tco_v = v.value1;
                          var __tco_v1 = new KickUp(new Two(v.value0.value0, v.value0.value1, v.value0.value2, v.value0.value3), v.value0.value4, v.value0.value5, new Two(v1.value0, v1.value1, v1.value2, v1.value3));
                          v = __tco_v;
                          v1 = __tco_v1;
                          continue tco;
                      };
                      throw new Error("Failed pattern match at Data.Map line 276, column 5 - line 281, column 104: " + [ v.value0.constructor.name, v1.constructor.name ]);
                  };
                  throw new Error("Failed pattern match at Data.Map line 274, column 3 - line 274, column 54: " + [ v.constructor.name, v1.constructor.name ]);
              };
          };
      };
      var comp = Data_Ord.compare(dictOrd);
      var down = function (__copy_ctx) {
          return function (__copy_k) {
              return function (__copy_v) {
                  return function (__copy_v1) {
                      var ctx = __copy_ctx;
                      var k = __copy_k;
                      var v = __copy_v;
                      var v1 = __copy_v1;
                      tco: while (true) {
                          if (v1 instanceof Leaf) {
                              return up(ctx)(new KickUp(Leaf.value, k, v, Leaf.value));
                          };
                          if (v1 instanceof Two) {
                              var $317 = comp(k)(v1.value1);
                              if ($317 instanceof Data_Ordering.EQ) {
                                  return fromZipper(dictOrd)(ctx)(new Two(v1.value0, k, v, v1.value3));
                              };
                              if ($317 instanceof Data_Ordering.LT) {
                                  var __tco_ctx = new Data_List_Types.Cons(new TwoLeft(v1.value1, v1.value2, v1.value3), ctx);
                                  var __tco_k = k;
                                  var __tco_v = v;
                                  var __tco_v1 = v1.value0;
                                  ctx = __tco_ctx;
                                  k = __tco_k;
                                  v = __tco_v;
                                  v1 = __tco_v1;
                                  continue tco;
                              };
                              var __tco_ctx = new Data_List_Types.Cons(new TwoRight(v1.value0, v1.value1, v1.value2), ctx);
                              var __tco_k = k;
                              var __tco_v = v;
                              var __tco_v1 = v1.value3;
                              ctx = __tco_ctx;
                              k = __tco_k;
                              v = __tco_v;
                              v1 = __tco_v1;
                              continue tco;
                          };
                          if (v1 instanceof Three) {
                              var $322 = comp(k)(v1.value1);
                              if ($322 instanceof Data_Ordering.EQ) {
                                  return fromZipper(dictOrd)(ctx)(new Three(v1.value0, k, v, v1.value3, v1.value4, v1.value5, v1.value6));
                              };
                              var $324 = comp(k)(v1.value4);
                              if ($324 instanceof Data_Ordering.EQ) {
                                  return fromZipper(dictOrd)(ctx)(new Three(v1.value0, v1.value1, v1.value2, v1.value3, k, v, v1.value6));
                              };
                              if ($322 instanceof Data_Ordering.LT) {
                                  var __tco_ctx = new Data_List_Types.Cons(new ThreeLeft(v1.value1, v1.value2, v1.value3, v1.value4, v1.value5, v1.value6), ctx);
                                  var __tco_k = k;
                                  var __tco_v = v;
                                  var __tco_v1 = v1.value0;
                                  ctx = __tco_ctx;
                                  k = __tco_k;
                                  v = __tco_v;
                                  v1 = __tco_v1;
                                  continue tco;
                              };
                              if ($322 instanceof Data_Ordering.GT && $324 instanceof Data_Ordering.LT) {
                                  var __tco_ctx = new Data_List_Types.Cons(new ThreeMiddle(v1.value0, v1.value1, v1.value2, v1.value4, v1.value5, v1.value6), ctx);
                                  var __tco_k = k;
                                  var __tco_v = v;
                                  var __tco_v1 = v1.value3;
                                  ctx = __tco_ctx;
                                  k = __tco_k;
                                  v = __tco_v;
                                  v1 = __tco_v1;
                                  continue tco;
                              };
                              var __tco_ctx = new Data_List_Types.Cons(new ThreeRight(v1.value0, v1.value1, v1.value2, v1.value3, v1.value4, v1.value5), ctx);
                              var __tco_k = k;
                              var __tco_v = v;
                              var __tco_v1 = v1.value6;
                              ctx = __tco_ctx;
                              k = __tco_k;
                              v = __tco_v;
                              v1 = __tco_v1;
                              continue tco;
                          };
                          throw new Error("Failed pattern match at Data.Map line 257, column 3 - line 257, column 52: " + [ ctx.constructor.name, k.constructor.name, v.constructor.name, v1.constructor.name ]);
                      };
                  };
              };
          };
      };
      return down(Data_List_Types.Nil.value);
  };
  var pop = function (dictOrd) {
      var up = function (ctxs) {
          return function (tree) {
              if (ctxs instanceof Data_List_Types.Nil) {
                  return tree;
              };
              if (ctxs instanceof Data_List_Types.Cons) {
                  var __unused = function (dictPartial1) {
                      return function ($dollar51) {
                          return $dollar51;
                      };
                  };
                  return __unused()((function () {
                      if (ctxs.value0 instanceof TwoLeft && (ctxs.value0.value2 instanceof Leaf && tree instanceof Leaf)) {
                          return fromZipper(dictOrd)(ctxs.value1)(new Two(Leaf.value, ctxs.value0.value0, ctxs.value0.value1, Leaf.value));
                      };
                      if (ctxs.value0 instanceof TwoRight && (ctxs.value0.value0 instanceof Leaf && tree instanceof Leaf)) {
                          return fromZipper(dictOrd)(ctxs.value1)(new Two(Leaf.value, ctxs.value0.value1, ctxs.value0.value2, Leaf.value));
                      };
                      if (ctxs.value0 instanceof TwoLeft && ctxs.value0.value2 instanceof Two) {
                          return up(ctxs.value1)(new Three(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0, ctxs.value0.value2.value1, ctxs.value0.value2.value2, ctxs.value0.value2.value3));
                      };
                      if (ctxs.value0 instanceof TwoRight && ctxs.value0.value0 instanceof Two) {
                          return up(ctxs.value1)(new Three(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3, ctxs.value0.value1, ctxs.value0.value2, tree));
                      };
                      if (ctxs.value0 instanceof TwoLeft && ctxs.value0.value2 instanceof Three) {
                          return fromZipper(dictOrd)(ctxs.value1)(new Two(new Two(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0), ctxs.value0.value2.value1, ctxs.value0.value2.value2, new Two(ctxs.value0.value2.value3, ctxs.value0.value2.value4, ctxs.value0.value2.value5, ctxs.value0.value2.value6)));
                      };
                      if (ctxs.value0 instanceof TwoRight && ctxs.value0.value0 instanceof Three) {
                          return fromZipper(dictOrd)(ctxs.value1)(new Two(new Two(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3), ctxs.value0.value0.value4, ctxs.value0.value0.value5, new Two(ctxs.value0.value0.value6, ctxs.value0.value1, ctxs.value0.value2, tree)));
                      };
                      if (ctxs.value0 instanceof ThreeLeft && (ctxs.value0.value2 instanceof Leaf && (ctxs.value0.value5 instanceof Leaf && tree instanceof Leaf))) {
                          return fromZipper(dictOrd)(ctxs.value1)(new Three(Leaf.value, ctxs.value0.value0, ctxs.value0.value1, Leaf.value, ctxs.value0.value3, ctxs.value0.value4, Leaf.value));
                      };
                      if (ctxs.value0 instanceof ThreeMiddle && (ctxs.value0.value0 instanceof Leaf && (ctxs.value0.value5 instanceof Leaf && tree instanceof Leaf))) {
                          return fromZipper(dictOrd)(ctxs.value1)(new Three(Leaf.value, ctxs.value0.value1, ctxs.value0.value2, Leaf.value, ctxs.value0.value3, ctxs.value0.value4, Leaf.value));
                      };
                      if (ctxs.value0 instanceof ThreeRight && (ctxs.value0.value0 instanceof Leaf && (ctxs.value0.value3 instanceof Leaf && tree instanceof Leaf))) {
                          return fromZipper(dictOrd)(ctxs.value1)(new Three(Leaf.value, ctxs.value0.value1, ctxs.value0.value2, Leaf.value, ctxs.value0.value4, ctxs.value0.value5, Leaf.value));
                      };
                      if (ctxs.value0 instanceof ThreeLeft && ctxs.value0.value2 instanceof Two) {
                          return fromZipper(dictOrd)(ctxs.value1)(new Two(new Three(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0, ctxs.value0.value2.value1, ctxs.value0.value2.value2, ctxs.value0.value2.value3), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
                      };
                      if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value0 instanceof Two) {
                          return fromZipper(dictOrd)(ctxs.value1)(new Two(new Three(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3, ctxs.value0.value1, ctxs.value0.value2, tree), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
                      };
                      if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value5 instanceof Two) {
                          return fromZipper(dictOrd)(ctxs.value1)(new Two(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Three(tree, ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5.value0, ctxs.value0.value5.value1, ctxs.value0.value5.value2, ctxs.value0.value5.value3)));
                      };
                      if (ctxs.value0 instanceof ThreeRight && ctxs.value0.value3 instanceof Two) {
                          return fromZipper(dictOrd)(ctxs.value1)(new Two(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Three(ctxs.value0.value3.value0, ctxs.value0.value3.value1, ctxs.value0.value3.value2, ctxs.value0.value3.value3, ctxs.value0.value4, ctxs.value0.value5, tree)));
                      };
                      if (ctxs.value0 instanceof ThreeLeft && ctxs.value0.value2 instanceof Three) {
                          return fromZipper(dictOrd)(ctxs.value1)(new Three(new Two(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0), ctxs.value0.value2.value1, ctxs.value0.value2.value2, new Two(ctxs.value0.value2.value3, ctxs.value0.value2.value4, ctxs.value0.value2.value5, ctxs.value0.value2.value6), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
                      };
                      if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value0 instanceof Three) {
                          return fromZipper(dictOrd)(ctxs.value1)(new Three(new Two(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3), ctxs.value0.value0.value4, ctxs.value0.value0.value5, new Two(ctxs.value0.value0.value6, ctxs.value0.value1, ctxs.value0.value2, tree), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
                      };
                      if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value5 instanceof Three) {
                          return fromZipper(dictOrd)(ctxs.value1)(new Three(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Two(tree, ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5.value0), ctxs.value0.value5.value1, ctxs.value0.value5.value2, new Two(ctxs.value0.value5.value3, ctxs.value0.value5.value4, ctxs.value0.value5.value5, ctxs.value0.value5.value6)));
                      };
                      if (ctxs.value0 instanceof ThreeRight && ctxs.value0.value3 instanceof Three) {
                          return fromZipper(dictOrd)(ctxs.value1)(new Three(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Two(ctxs.value0.value3.value0, ctxs.value0.value3.value1, ctxs.value0.value3.value2, ctxs.value0.value3.value3), ctxs.value0.value3.value4, ctxs.value0.value3.value5, new Two(ctxs.value0.value3.value6, ctxs.value0.value4, ctxs.value0.value5, tree)));
                      };
                      throw new Error("Failed pattern match at Data.Map line 326, column 9 - line 343, column 136: " + [ ctxs.value0.constructor.name, tree.constructor.name ]);
                  })());
              };
              throw new Error("Failed pattern match at Data.Map line 323, column 5 - line 343, column 136: " + [ ctxs.constructor.name ]);
          };
      };
      var removeMaxNode = function (ctx) {
          return function (m) {
              var __unused = function (dictPartial1) {
                  return function ($dollar53) {
                      return $dollar53;
                  };
              };
              return __unused()((function () {
                  if (m instanceof Two && (m.value0 instanceof Leaf && m.value3 instanceof Leaf)) {
                      return up(ctx)(Leaf.value);
                  };
                  if (m instanceof Two) {
                      return removeMaxNode(new Data_List_Types.Cons(new TwoRight(m.value0, m.value1, m.value2), ctx))(m.value3);
                  };
                  if (m instanceof Three && (m.value0 instanceof Leaf && (m.value3 instanceof Leaf && m.value6 instanceof Leaf))) {
                      return up(new Data_List_Types.Cons(new TwoRight(Leaf.value, m.value1, m.value2), ctx))(Leaf.value);
                  };
                  if (m instanceof Three) {
                      return removeMaxNode(new Data_List_Types.Cons(new ThreeRight(m.value0, m.value1, m.value2, m.value3, m.value4, m.value5), ctx))(m.value6);
                  };
                  throw new Error("Failed pattern match at Data.Map line 355, column 5 - line 359, column 107: " + [ m.constructor.name ]);
              })());
          };
      };
      var maxNode = function (m) {
          var __unused = function (dictPartial1) {
              return function ($dollar55) {
                  return $dollar55;
              };
          };
          return __unused()((function () {
              if (m instanceof Two && m.value3 instanceof Leaf) {
                  return {
                      key: m.value1, 
                      value: m.value2
                  };
              };
              if (m instanceof Two) {
                  return maxNode(m.value3);
              };
              if (m instanceof Three && m.value6 instanceof Leaf) {
                  return {
                      key: m.value4, 
                      value: m.value5
                  };
              };
              if (m instanceof Three) {
                  return maxNode(m.value6);
              };
              throw new Error("Failed pattern match at Data.Map line 346, column 33 - line 350, column 45: " + [ m.constructor.name ]);
          })());
      };
      var comp = Data_Ord.compare(dictOrd);
      var down = function (__copy_ctx) {
          return function (__copy_k) {
              return function (__copy_m) {
                  var ctx = __copy_ctx;
                  var k = __copy_k;
                  var m = __copy_m;
                  tco: while (true) {
                      if (m instanceof Leaf) {
                          return Data_Maybe.Nothing.value;
                      };
                      if (m instanceof Two) {
                          var $535 = comp(k)(m.value1);
                          if (m.value3 instanceof Leaf && $535 instanceof Data_Ordering.EQ) {
                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, up(ctx)(Leaf.value)));
                          };
                          if ($535 instanceof Data_Ordering.EQ) {
                              var max = maxNode(m.value0);
                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, removeMaxNode(new Data_List_Types.Cons(new TwoLeft(max.key, max.value, m.value3), ctx))(m.value0)));
                          };
                          if ($535 instanceof Data_Ordering.LT) {
                              var __tco_ctx = new Data_List_Types.Cons(new TwoLeft(m.value1, m.value2, m.value3), ctx);
                              var __tco_k = k;
                              var __tco_m = m.value0;
                              ctx = __tco_ctx;
                              k = __tco_k;
                              m = __tco_m;
                              continue tco;
                          };
                          var __tco_ctx = new Data_List_Types.Cons(new TwoRight(m.value0, m.value1, m.value2), ctx);
                          var __tco_k = k;
                          var __tco_m = m.value3;
                          ctx = __tco_ctx;
                          k = __tco_k;
                          m = __tco_m;
                          continue tco;
                      };
                      if (m instanceof Three) {
                          var leaves = (function () {
                              if (m.value0 instanceof Leaf && (m.value3 instanceof Leaf && m.value6 instanceof Leaf)) {
                                  return true;
                              };
                              return false;
                          })();
                          var $544 = comp(k)(m.value1);
                          var $545 = comp(k)(m.value4);
                          if (leaves && $544 instanceof Data_Ordering.EQ) {
                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, fromZipper(dictOrd)(ctx)(new Two(Leaf.value, m.value4, m.value5, Leaf.value))));
                          };
                          if (leaves && $545 instanceof Data_Ordering.EQ) {
                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value5, fromZipper(dictOrd)(ctx)(new Two(Leaf.value, m.value1, m.value2, Leaf.value))));
                          };
                          if ($544 instanceof Data_Ordering.EQ) {
                              var max = maxNode(m.value0);
                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, removeMaxNode(new Data_List_Types.Cons(new ThreeLeft(max.key, max.value, m.value3, m.value4, m.value5, m.value6), ctx))(m.value0)));
                          };
                          if ($545 instanceof Data_Ordering.EQ) {
                              var max = maxNode(m.value3);
                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value5, removeMaxNode(new Data_List_Types.Cons(new ThreeMiddle(m.value0, m.value1, m.value2, max.key, max.value, m.value6), ctx))(m.value3)));
                          };
                          if ($544 instanceof Data_Ordering.LT) {
                              var __tco_ctx = new Data_List_Types.Cons(new ThreeLeft(m.value1, m.value2, m.value3, m.value4, m.value5, m.value6), ctx);
                              var __tco_k = k;
                              var __tco_m = m.value0;
                              ctx = __tco_ctx;
                              k = __tco_k;
                              m = __tco_m;
                              continue tco;
                          };
                          if ($544 instanceof Data_Ordering.GT && $545 instanceof Data_Ordering.LT) {
                              var __tco_ctx = new Data_List_Types.Cons(new ThreeMiddle(m.value0, m.value1, m.value2, m.value4, m.value5, m.value6), ctx);
                              var __tco_k = k;
                              var __tco_m = m.value3;
                              ctx = __tco_ctx;
                              k = __tco_k;
                              m = __tco_m;
                              continue tco;
                          };
                          var __tco_ctx = new Data_List_Types.Cons(new ThreeRight(m.value0, m.value1, m.value2, m.value3, m.value4, m.value5), ctx);
                          var __tco_k = k;
                          var __tco_m = m.value6;
                          ctx = __tco_ctx;
                          k = __tco_k;
                          m = __tco_m;
                          continue tco;
                      };
                      throw new Error("Failed pattern match at Data.Map line 296, column 36 - line 319, column 82: " + [ m.constructor.name ]);
                  };
              };
          };
      };
      return down(Data_List_Types.Nil.value);
  };
  var foldableMap = new Data_Foldable.Foldable(function (dictMonoid) {
      return function (f) {
          return function (m) {
              return Data_Foldable.foldMap(Data_List_Types.foldableList)(dictMonoid)(f)(values(m));
          };
      };
  }, function (f) {
      return function (z) {
          return function (m) {
              return Data_Foldable.foldl(Data_List_Types.foldableList)(f)(z)(values(m));
          };
      };
  }, function (f) {
      return function (z) {
          return function (m) {
              return Data_Foldable.foldr(Data_List_Types.foldableList)(f)(z)(values(m));
          };
      };
  });
  var empty = Leaf.value;
  var fromFoldable = function (dictOrd) {
      return function (dictFoldable) {
          return Data_Foldable.foldl(dictFoldable)(function (m) {
              return function (v) {
                  return insert(dictOrd)(v.value0)(v.value1)(m);
              };
          })(empty);
      };
  };
  var $$delete = function (dictOrd) {
      return function (k) {
          return function (m) {
              return Data_Maybe.maybe(m)(Data_Tuple.snd)(pop(dictOrd)(k)(m));
          };
      };
  };
  exports["delete"] = $$delete;
  exports["empty"] = empty;
  exports["fromFoldable"] = fromFoldable;
  exports["insert"] = insert;
  exports["keys"] = keys;
  exports["lookup"] = lookup;
  exports["member"] = member;
  exports["pop"] = pop;
  exports["values"] = values;
  exports["functorMap"] = functorMap;
  exports["foldableMap"] = foldableMap;
})(PS["Data.Map"] = PS["Data.Map"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Data.StrMap

  exports._copyEff = function (m) {
    return function () {
      var r = {};
      for (var k in m) {
        if (hasOwnProperty.call(m, k)) {
          r[k] = m[k];
        }
      }
      return r;
    };
  };

  exports.empty = {};

  exports.runST = function (f) {
    return f;
  };

  // jshint maxparams: 4
  exports._lookup = function (no, yes, k, m) {
    return k in m ? yes(m[k]) : no;
  };

  function _collect(f) {
    return function (m) {
      var r = [];
      for (var k in m) {
        if (hasOwnProperty.call(m, k)) {
          r.push(f(k)(m[k]));
        }
      }
      return r;
    };
  }
})(PS["Data.StrMap"] = PS["Data.StrMap"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Data.StrMap.ST

  exports["new"] = function () {
    return {};
  };

  exports.poke = function (m) {
    return function (k) {
      return function (v) {
        return function () {
          m[k] = v;
          return m;
        };
      };
    };
  };

  exports["delete"] = function (m) {
    return function (k) {
      return function () {
        delete m[k];
        return m;
      };
    };
  };
})(PS["Data.StrMap.ST"] = PS["Data.StrMap.ST"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var $foreign = PS["Data.StrMap.ST"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_ST = PS["Control.Monad.ST"];
  var Data_Maybe = PS["Data.Maybe"];
  exports["delete"] = $foreign["delete"];
  exports["new"] = $foreign["new"];
  exports["poke"] = $foreign.poke;
})(PS["Data.StrMap.ST"] = PS["Data.StrMap.ST"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var $foreign = PS["Data.StrMap"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_ST = PS["Control.Monad.ST"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_List = PS["Data.List"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_StrMap_ST = PS["Data.StrMap.ST"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Function = PS["Data.Function"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Category = PS["Control.Category"];
  var Data_Eq = PS["Data.Eq"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Show = PS["Data.Show"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_List_Types = PS["Data.List.Types"];
  var Control_Bind = PS["Control.Bind"];
  var thawST = $foreign._copyEff;
  var pureST = function (f) {
      return Control_Monad_Eff.runPure($foreign.runST(f));
  };
  var mutate = function (f) {
      return function (m) {
          return pureST(function __do() {
              var v = thawST(m)();
              var v1 = f(v)();
              return v;
          });
      };
  };
  var lookup = Data_Function_Uncurried.runFn4($foreign._lookup)(Data_Maybe.Nothing.value)(Data_Maybe.Just.create);
  var insert = function (k) {
      return function (v) {
          return mutate(function (s) {
              return Data_Functor["void"](Control_Monad_Eff.functorEff)(Data_StrMap_ST.poke(s)(k)(v));
          });
      };
  };
  var $$delete = function (k) {
      return mutate(function (s) {
          return Data_Functor["void"](Control_Monad_Eff.functorEff)(Data_StrMap_ST["delete"](s)(k));
      });
  };
  var alter = function (f) {
      return function (k) {
          return function (m) {
              var $41 = f(lookup(k)(m));
              if ($41 instanceof Data_Maybe.Nothing) {
                  return $$delete(k)(m);
              };
              if ($41 instanceof Data_Maybe.Just) {
                  return insert(k)($41.value0)(m);
              };
              throw new Error("Failed pattern match at Data.StrMap line 184, column 15 - line 186, column 25: " + [ $41.constructor.name ]);
          };
      };
  };
  exports["alter"] = alter;
  exports["insert"] = insert;
  exports["lookup"] = lookup;
  exports["pureST"] = pureST;
  exports["thawST"] = thawST;
  exports["empty"] = $foreign.empty;
})(PS["Data.StrMap"] = PS["Data.StrMap"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Ord = PS["Data.Ord"];        
  var OrdBox = (function () {
      function OrdBox(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      OrdBox.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new OrdBox(value0, value1, value2);
              };
          };
      };
      return OrdBox;
  })();
  var unOrdBox = function (v) {
      return v.value2;
  };
  var mkOrdBox = function (dictOrd) {
      return OrdBox.create(Data_Eq.eq(dictOrd["__superclass_Data.Eq.Eq_0"]()))(Data_Ord.compare(dictOrd));
  };
  var eqOrdBox = new Data_Eq.Eq(function (v) {
      return function (v1) {
          return v.value0(v.value2)(v1.value2);
      };
  });
  var ordOrdBox = new Data_Ord.Ord(function () {
      return eqOrdBox;
  }, function (v) {
      return function (v1) {
          return v.value1(v.value2)(v1.value2);
      };
  });
  exports["mkOrdBox"] = mkOrdBox;
  exports["unOrdBox"] = unOrdBox;
  exports["eqOrdBox"] = eqOrdBox;
  exports["ordOrdBox"] = ordOrdBox;
})(PS["Halogen.Data.OrdBox"] = PS["Halogen.Data.OrdBox"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Functor = PS["Data.Functor"];
  var RefUpdate = (function () {
      function RefUpdate(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      RefUpdate.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new RefUpdate(value0, value1, value2);
              };
          };
      };
      return RefUpdate;
  })();
  var Query = (function () {
      function Query(value0) {
          this.value0 = value0;
      };
      Query.create = function (value0) {
          return new Query(value0);
      };
      return Query;
  })();                             
  var bifunctorInputF = new Data_Bifunctor.Bifunctor(function (f) {
      return function (g) {
          return function (v) {
              if (v instanceof RefUpdate) {
                  return new RefUpdate(v.value0, v.value1, f(v.value2));
              };
              if (v instanceof Query) {
                  return new Query(g(v.value0));
              };
              throw new Error("Failed pattern match at Halogen.Query.InputF line 21, column 15 - line 23, column 27: " + [ v.constructor.name ]);
          };
      };
  });
  var functorInputF = new Data_Functor.Functor(Data_Bifunctor.rmap(bifunctorInputF));
  exports["RefUpdate"] = RefUpdate;
  exports["Query"] = Query;
  exports["bifunctorInputF"] = bifunctorInputF;
  exports["functorInputF"] = functorInputF;
})(PS["Halogen.Query.InputF"] = PS["Halogen.Query.InputF"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Generic = PS["Data.Generic"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Tuple = PS["Data.Tuple"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];
  var Data_Functor = PS["Data.Functor"];
  var Control_Category = PS["Control.Category"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Eq = PS["Data.Eq"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Control_Apply = PS["Control.Apply"];
  var Data_Unit = PS["Data.Unit"];
  var ElemSpec = (function () {
      function ElemSpec(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      ElemSpec.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new ElemSpec(value0, value1, value2);
              };
          };
      };
      return ElemSpec;
  })();
  var Text = (function () {
      function Text(value0) {
          this.value0 = value0;
      };
      Text.create = function (value0) {
          return new Text(value0);
      };
      return Text;
  })();
  var Elem = (function () {
      function Elem(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Elem.create = function (value0) {
          return function (value1) {
              return new Elem(value0, value1);
          };
      };
      return Elem;
  })();
  var Keyed = (function () {
      function Keyed(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Keyed.create = function (value0) {
          return function (value1) {
              return new Keyed(value0, value1);
          };
      };
      return Keyed;
  })();
  var Widget = (function () {
      function Widget(value0) {
          this.value0 = value0;
      };
      Widget.create = function (value0) {
          return new Widget(value0);
      };
      return Widget;
  })();
  var Grafted = (function () {
      function Grafted(value0) {
          this.value0 = value0;
      };
      Grafted.create = function (value0) {
          return new Grafted(value0);
      };
      return Grafted;
  })();
  var Graft = (function () {
      function Graft(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      Graft.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new Graft(value0, value1, value2);
              };
          };
      };
      return Graft;
  })();
  var unGraft = function (f) {
      return function ($120) {
          return f(Unsafe_Coerce.unsafeCoerce($120));
      };
  };           
  var graft = Unsafe_Coerce.unsafeCoerce;
  var functorElemSpec = new Data_Functor.Functor(function (f) {
      return function (v) {
          return new ElemSpec(v.value0, v.value1, f(v.value2));
      };
  });                                
  var eqElemName = Data_Eq.eqString;
  var bifunctorGraft = new Data_Bifunctor.Bifunctor(function (f) {
      return function (g) {
          return unGraft(function (v) {
              return graft(new Graft(function ($122) {
                  return f(v.value0($122));
              }, function ($123) {
                  return g(v.value1($123));
              }, v.value2));
          });
      };
  });
  var bifunctorVDom = new Data_Bifunctor.Bifunctor(function (f) {
      return function (g) {
          return function (v) {
              if (v instanceof Text) {
                  return new Text(v.value0);
              };
              if (v instanceof Grafted) {
                  return new Grafted(Data_Bifunctor.bimap(bifunctorGraft)(f)(g)(v.value0));
              };
              return new Grafted(graft(new Graft(f, g, v)));
          };
      };
  });
  var runGraft = unGraft(function (v) {
      var go = function (v2) {
          if (v2 instanceof Text) {
              return new Text(v2.value0);
          };
          if (v2 instanceof Elem) {
              return new Elem(Data_Functor.map(functorElemSpec)(v.value0)(v2.value0), Data_Functor.map(Data_Functor.functorArray)(go)(v2.value1));
          };
          if (v2 instanceof Keyed) {
              return new Keyed(Data_Functor.map(functorElemSpec)(v.value0)(v2.value0), Data_Functor.map(Data_Functor.functorArray)(Data_Functor.map(Data_Tuple.functorTuple)(go))(v2.value1));
          };
          if (v2 instanceof Widget) {
              return new Widget(v.value1(v2.value0));
          };
          if (v2 instanceof Grafted) {
              return new Grafted(Data_Bifunctor.bimap(bifunctorGraft)(v.value0)(v.value1)(v2.value0));
          };
          throw new Error("Failed pattern match at Halogen.VDom.Types line 74, column 5 - line 81, column 11: " + [ v2.constructor.name ]);
      };
      return go(v.value2);
  });
  exports["ElemSpec"] = ElemSpec;
  exports["Graft"] = Graft;
  exports["Text"] = Text;
  exports["Elem"] = Elem;
  exports["Keyed"] = Keyed;
  exports["Widget"] = Widget;
  exports["Grafted"] = Grafted;
  exports["graft"] = graft;
  exports["runGraft"] = runGraft;
  exports["unGraft"] = unGraft;
  exports["bifunctorVDom"] = bifunctorVDom;
  exports["bifunctorGraft"] = bifunctorGraft;
  exports["functorElemSpec"] = functorElemSpec;
  exports["eqElemName"] = eqElemName;
})(PS["Halogen.VDom.Types"] = PS["Halogen.VDom.Types"] || {});
(function(exports) {
    "use strict";

  exports.unsafeGetAny = function (key, obj) {
    return obj[key];
  };

  exports.unsafeHasAny = function (key, obj) {
    return obj.hasOwnProperty(key);
  };

  exports.unsafeSetAny = function (key, val, obj) {
    return function () {
      obj[key] = val;
    };
  };

  exports.forE = function (a, f) {
    return function () {
      var b = [];
      for (var i = 0; i < a.length; i++) {
        b.push(f(i, a[i])());
      }
      return b;
    };
  };

  exports.forInE = function (o, f) {
    return function () {
      var ks = Object.keys(o);
      for (var i = 0; i < ks.length; i++) {
        var k = ks[i];
        f(k, o[k])();
      }
    };
  };

  exports.diffWithIxE = function (a1, a2, f1, f2, f3) {
    return function () {
      var a3 = [];
      var l1 = a1.length;
      var l2 = a2.length;
      var i  = 0;
      while (1) {
        if (i < l1) {
          if (i < l2) {
            a3.push(f1(i, a1[i], a2[i])());
          } else {
            f2(i, a1[i])();
          }
        } else if (i < l2) {
          a3.push(f3(i, a2[i])());
        } else {
          break;
        }
        i++;
      }
      return a3;
    };
  };

  exports.strMapWithIxE = function (as, fk, f) {
    return function () {
      var o = {};
      for (var i = 0; i < as.length; i++) {
        var a = as[i];
        var k = fk(a);
        o[k] = f(k, i, a)();
      }
      return o;
    };
  };

  exports.diffWithKeyAndIxE = function (o1, as, fk, f1, f2, f3) {
    return function () {
      var o2 = {};
      for (var i = 0; i < as.length; i++) {
        var a = as[i];
        var k = fk(a);
        if (o1.hasOwnProperty(k)) {
          o2[k] = f1(k, i, o1[k], a)();
        } else {
          o2[k] = f3(k, i, a)();
        }
      }
      for (var k in o1) {
        if (k in o2) {
          continue;
        }
        f2(k, o1[k])();
      }
      return o2;
    };
  };

  exports.refEq = function (a, b) {
    return a === b;
  };

  exports.createTextNode = function (s, doc) {
    return function () {
      return doc.createTextNode(s);
    };
  };

  exports.setTextContent = function (s, n) {
    return function () {
      n.textContent = s;
    };
  };

  exports.createElement = function (ns, name, doc) {
    return function () {
      if (ns != null) {
        return doc.createElementNS(ns, name);
      } else {
        return doc.createElement(name)
      }
    };
  };

  exports.insertChildIx = function (i, a, b) {
    return function () {
      var n = b.childNodes.item(i) || null;
      if (n !== a) {
        b.insertBefore(a, n);
      }
    };
  };

  exports.removeChild = function (a, b) {
    return function () {
      if (b && a.parentNode === b) {
        b.removeChild(a);
      }
    };
  };

  exports.unsafeParent = function (a) {
    return a.parentNode;
  };

  exports.setAttribute = function (ns, attr, val, el) {
    return function () {
      if (ns != null) {
        el.setAttributeNS(ns, attr, val);
      } else {
        el.setAttribute(attr, val);
      }
    };
  };

  exports.removeAttribute = function (ns, attr, el) {
    return function () {
      if (ns != null) {
        el.removeAttributeNS(ns, attr);
      } else {
        el.removeAttribute(attr);
      }
    };
  };

  exports.addEventListener = function (ev, listener, el) {
    return function () {
      el.addEventListener(ev, listener, false);
    };
  };

  exports.removeEventListener = function (ev, listener, el) {
    return function () {
      el.removeEventListener(ev, listener, false);
    };
  };

  exports.jsUndefined = void 0;
})(PS["Halogen.VDom.Util"] = PS["Halogen.VDom.Util"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var $foreign = PS["Halogen.VDom.Util"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Ref = PS["Control.Monad.Eff.Ref"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Nullable = PS["Data.Nullable"];
  var Data_StrMap = PS["Data.StrMap"];
  var Data_StrMap_ST = PS["Data.StrMap.ST"];
  var DOM = PS["DOM"];
  var DOM_Event_EventTarget = PS["DOM.Event.EventTarget"];
  var DOM_Node_Types = PS["DOM.Node.Types"];
  var Halogen_VDom_Types = PS["Halogen.VDom.Types"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_Unit = PS["Data.Unit"];        
  var unsafeLookup = $foreign.unsafeGetAny;
  var unsafeFreeze = Unsafe_Coerce.unsafeCoerce;
  var pokeMutMap = $foreign.unsafeSetAny;
  var newMutMap = Unsafe_Coerce.unsafeCoerce(Data_StrMap_ST["new"]);
  var effUnit = Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit);
  var effPure = Control_Applicative.pure(Control_Monad_Eff.applicativeEff);
  exports["effPure"] = effPure;
  exports["effUnit"] = effUnit;
  exports["newMutMap"] = newMutMap;
  exports["pokeMutMap"] = pokeMutMap;
  exports["unsafeFreeze"] = unsafeFreeze;
  exports["unsafeLookup"] = unsafeLookup;
  exports["addEventListener"] = $foreign.addEventListener;
  exports["createElement"] = $foreign.createElement;
  exports["createTextNode"] = $foreign.createTextNode;
  exports["diffWithIxE"] = $foreign.diffWithIxE;
  exports["diffWithKeyAndIxE"] = $foreign.diffWithKeyAndIxE;
  exports["forE"] = $foreign.forE;
  exports["forInE"] = $foreign.forInE;
  exports["insertChildIx"] = $foreign.insertChildIx;
  exports["jsUndefined"] = $foreign.jsUndefined;
  exports["refEq"] = $foreign.refEq;
  exports["removeAttribute"] = $foreign.removeAttribute;
  exports["removeChild"] = $foreign.removeChild;
  exports["removeEventListener"] = $foreign.removeEventListener;
  exports["setAttribute"] = $foreign.setAttribute;
  exports["setTextContent"] = $foreign.setTextContent;
  exports["strMapWithIxE"] = $foreign.strMapWithIxE;
  exports["unsafeGetAny"] = $foreign.unsafeGetAny;
  exports["unsafeHasAny"] = $foreign.unsafeHasAny;
  exports["unsafeParent"] = $foreign.unsafeParent;
  exports["unsafeSetAny"] = $foreign.unsafeSetAny;
})(PS["Halogen.VDom.Util"] = PS["Halogen.VDom.Util"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Functor = PS["Data.Functor"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_Void = PS["Data.Void"];
  var Data_Unit = PS["Data.Unit"];        
  var Step = (function () {
      function Step(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      Step.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new Step(value0, value1, value2);
              };
          };
      };
      return Step;
  })();
  var step = function (v) {
      return v.value1;
  };
  var halt = function (v) {
      return v.value2;
  };
  var extract = function (v) {
      return v.value0;
  };
  exports["Step"] = Step;
  exports["extract"] = extract;
  exports["halt"] = halt;
  exports["step"] = step;
})(PS["Halogen.VDom.Machine"] = PS["Halogen.VDom.Machine"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Ref = PS["Control.Monad.Eff.Ref"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_StrMap = PS["Data.StrMap"];
  var Data_Nullable = PS["Data.Nullable"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Tuple = PS["Data.Tuple"];
  var DOM = PS["DOM"];
  var DOM_Event_EventTarget = PS["DOM.Event.EventTarget"];
  var DOM_Event_Types = PS["DOM.Event.Types"];
  var DOM_Node_Types = PS["DOM.Node.Types"];
  var Halogen_VDom = PS["Halogen.VDom"];
  var Halogen_VDom_Types = PS["Halogen.VDom.Types"];
  var Halogen_VDom_Util = PS["Halogen.VDom.Util"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Eq = PS["Data.Eq"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Halogen_VDom_Machine = PS["Halogen.VDom.Machine"];
  var Data_Unit = PS["Data.Unit"];        
  var Created = (function () {
      function Created(value0) {
          this.value0 = value0;
      };
      Created.create = function (value0) {
          return new Created(value0);
      };
      return Created;
  })();
  var Removed = (function () {
      function Removed(value0) {
          this.value0 = value0;
      };
      Removed.create = function (value0) {
          return new Removed(value0);
      };
      return Removed;
  })();
  var Attribute = (function () {
      function Attribute(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      Attribute.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new Attribute(value0, value1, value2);
              };
          };
      };
      return Attribute;
  })();
  var Property = (function () {
      function Property(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Property.create = function (value0) {
          return function (value1) {
              return new Property(value0, value1);
          };
      };
      return Property;
  })();
  var Handler = (function () {
      function Handler(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Handler.create = function (value0) {
          return function (value1) {
              return new Handler(value0, value1);
          };
      };
      return Handler;
  })();
  var Ref = (function () {
      function Ref(value0) {
          this.value0 = value0;
      };
      Ref.create = function (value0) {
          return new Ref(value0);
      };
      return Ref;
  })();
  var unsafeGetProperty = Halogen_VDom_Util.unsafeGetAny;
  var setProperty = Halogen_VDom_Util.unsafeSetAny;
  var removeProperty = function (key, el) {
      var $14 = Data_Foreign.typeOf(Halogen_VDom_Util.unsafeGetAny(key, el));
      if ($14 === "string") {
          return Halogen_VDom_Util.unsafeSetAny(key, "", el);
      };
      return Halogen_VDom_Util.unsafeSetAny(key, Halogen_VDom_Util.jsUndefined, el);
  };
  var propToStrKey = function (v) {
      if (v instanceof Attribute && v.value0 instanceof Data_Maybe.Just) {
          return "attr/" + (v.value0.value0 + (":" + v.value1));
      };
      if (v instanceof Attribute) {
          return "attr/:" + v.value1;
      };
      if (v instanceof Property) {
          return "prop/" + v.value0;
      };
      if (v instanceof Handler) {
          return "handler/" + v.value0;
      };
      if (v instanceof Ref) {
          return "ref";
      };
      throw new Error("Failed pattern match at Halogen.VDom.DOM.Prop line 179, column 16 - line 186, column 1: " + [ v.constructor.name ]);
  };
  var propFromString = Unsafe_Coerce.unsafeCoerce;
  var propFromBoolean = Unsafe_Coerce.unsafeCoerce;
  var functorProp = new Data_Functor.Functor(function (f) {
      return function (v) {
          if (v instanceof Handler) {
              return new Handler(v.value0, Data_Functor.map(Data_Functor.functorFn)(Data_Functor.map(Data_Maybe.functorMaybe)(f))(v.value1));
          };
          if (v instanceof Ref) {
              return new Ref(Data_Functor.map(Data_Functor.functorFn)(Data_Functor.map(Data_Maybe.functorMaybe)(f))(v.value0));
          };
          return Unsafe_Coerce.unsafeCoerce(v);
      };
  });
  var buildProp = function (emit) {
      return function (el) {
          var removeProp = function (prevEvents) {
              return function (v, v1) {
                  if (v1 instanceof Attribute) {
                      return Halogen_VDom_Util.removeAttribute(Data_Nullable.toNullable(v1.value0), v1.value1, el);
                  };
                  if (v1 instanceof Property) {
                      return removeProperty(v1.value0, el);
                  };
                  if (v1 instanceof Handler) {
                      var handler = Halogen_VDom_Util.unsafeLookup(v1.value0, prevEvents);
                      return Halogen_VDom_Util.removeEventListener(v1.value0, Data_Tuple.fst(handler), el);
                  };
                  if (v1 instanceof Ref) {
                      return Halogen_VDom_Util.effUnit;
                  };
                  throw new Error("Failed pattern match at Halogen.VDom.DOM.Prop line 166, column 5 - line 176, column 21: " + [ v1.constructor.name ]);
              };
          };
          var mbEmit = Data_Maybe.maybe(Halogen_VDom_Util.effUnit)(emit);
          var done = function (ps) {
              var $47 = Data_StrMap.lookup("ref")(ps);
              if ($47 instanceof Data_Maybe.Just && $47.value0 instanceof Ref) {
                  return mbEmit($47.value0.value0(new Removed(el)));
              };
              return Halogen_VDom_Util.effUnit;
          };
          var diffProp = function (prevEvents, events) {
              return function (v, v1, v11, v2) {
                  if (v11 instanceof Attribute && v2 instanceof Attribute) {
                      var $54 = v11.value2 !== v2.value2;
                      if ($54) {
                          return function __do() {
                              Halogen_VDom_Util.setAttribute(Data_Nullable.toNullable(v2.value0), v2.value1, v2.value2, el)();
                              return v2;
                          };
                      };
                      return Halogen_VDom_Util.effPure(v2);
                  };
                  if (v11 instanceof Property && v2 instanceof Property) {
                      var $61 = Halogen_VDom_Util.refEq(v11.value1, v2.value1);
                      if ($61) {
                          return Halogen_VDom_Util.effPure(v2);
                      };
                      if (v2.value0 === "value") {
                          var elVal = unsafeGetProperty("value", el);
                          var $63 = !Halogen_VDom_Util.refEq(elVal, v2.value1);
                          if ($63) {
                              return function __do() {
                                  setProperty(v2.value0, v2.value1, el)();
                                  return v2;
                              };
                          };
                          return Halogen_VDom_Util.effPure(v2);
                      };
                      return function __do() {
                          setProperty(v2.value0, v2.value1, el)();
                          return v2;
                      };
                  };
                  if (v11 instanceof Handler && v2 instanceof Handler) {
                      var handler = Halogen_VDom_Util.unsafeLookup(v2.value0, prevEvents);
                      return function __do() {
                          Control_Monad_Eff_Ref.writeRef(Data_Tuple.snd(handler))(v2.value1)();
                          Halogen_VDom_Util.pokeMutMap(v2.value0, handler, events)();
                          return v2;
                      };
                  };
                  return Halogen_VDom_Util.effPure(v2);
              };
          };
          var applyProp = function (events) {
              return function (v, v1, v2) {
                  if (v2 instanceof Attribute) {
                      return function __do() {
                          Halogen_VDom_Util.setAttribute(Data_Nullable.toNullable(v2.value0), v2.value1, v2.value2, el)();
                          return v2;
                      };
                  };
                  if (v2 instanceof Property) {
                      return function __do() {
                          setProperty(v2.value0, v2.value1, el)();
                          return v2;
                      };
                  };
                  if (v2 instanceof Handler) {
                      var $80 = Halogen_VDom_Util.unsafeGetAny(v2.value0, events);
                      if (Halogen_VDom_Util.unsafeHasAny(v2.value0, events)) {
                          return function __do() {
                              Control_Monad_Eff_Ref.writeRef(Data_Tuple.snd($80))(v2.value1)();
                              return v2;
                          };
                      };
                      return function __do() {
                          var v3 = Control_Monad_Eff_Ref.newRef(v2.value1)();
                          var listener = DOM_Event_EventTarget.eventListener(function (ev) {
                              return function __do() {
                                  var v4 = Control_Monad_Eff_Ref.readRef(v3)();
                                  return mbEmit(v4(ev))();
                              };
                          });
                          Halogen_VDom_Util.pokeMutMap(v2.value0, new Data_Tuple.Tuple(listener, v3), events)();
                          Halogen_VDom_Util.addEventListener(v2.value0, listener, el)();
                          return v2;
                      };
                  };
                  if (v2 instanceof Ref) {
                      return function __do() {
                          mbEmit(v2.value0(new Created(el)))();
                          return v2;
                      };
                  };
                  throw new Error("Failed pattern match at Halogen.VDom.DOM.Prop line 107, column 5 - line 130, column 15: " + [ v2.constructor.name ]);
              };
          };
          var patch = function (prevEvents, ps1) {
              return function (ps2) {
                  return function __do() {
                      var v = Halogen_VDom_Util.newMutMap();
                      var onThis = removeProp(prevEvents);
                      var onThese = diffProp(prevEvents, v);
                      var onThat = applyProp(v);
                      var v1 = Halogen_VDom_Util.diffWithKeyAndIxE(ps1, ps2, propToStrKey, onThese, onThis, onThat)();
                      return new Halogen_VDom_Machine.Step(Data_Unit.unit, patch(Halogen_VDom_Util.unsafeFreeze(v), v1), done(v1));
                  };
              };
          };
          var render = function (ps1) {
              return function __do() {
                  var v = Halogen_VDom_Util.newMutMap();
                  var v1 = Halogen_VDom_Util.strMapWithIxE(ps1, propToStrKey, applyProp(v))();
                  return new Halogen_VDom_Machine.Step(Data_Unit.unit, patch(Halogen_VDom_Util.unsafeFreeze(v), v1), done(v1));
              };
          };
          return render;
      };
  };
  exports["Created"] = Created;
  exports["Removed"] = Removed;
  exports["Attribute"] = Attribute;
  exports["Property"] = Property;
  exports["Handler"] = Handler;
  exports["Ref"] = Ref;
  exports["buildProp"] = buildProp;
  exports["propFromBoolean"] = propFromBoolean;
  exports["propFromString"] = propFromString;
  exports["functorProp"] = functorProp;
})(PS["Halogen.VDom.DOM.Prop"] = PS["Halogen.VDom.DOM.Prop"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Generic = PS["Data.Generic"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_MediaType = PS["Data.MediaType"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Tuple = PS["Data.Tuple"];
  var DOM_Node_Types = PS["DOM.Node.Types"];
  var DOM_Event_Types = PS["DOM.Event.Types"];
  var DOM_HTML_Indexed_ButtonType = PS["DOM.HTML.Indexed.ButtonType"];
  var DOM_HTML_Indexed_CrossOriginValue = PS["DOM.HTML.Indexed.CrossOriginValue"];
  var DOM_HTML_Indexed_DirValue = PS["DOM.HTML.Indexed.DirValue"];
  var DOM_HTML_Indexed_FormMethod = PS["DOM.HTML.Indexed.FormMethod"];
  var DOM_HTML_Indexed_InputType = PS["DOM.HTML.Indexed.InputType"];
  var DOM_HTML_Indexed_KindValue = PS["DOM.HTML.Indexed.KindValue"];
  var DOM_HTML_Indexed_MenuitemType = PS["DOM.HTML.Indexed.MenuitemType"];
  var DOM_HTML_Indexed_MenuType = PS["DOM.HTML.Indexed.MenuType"];
  var DOM_HTML_Indexed_OnOff = PS["DOM.HTML.Indexed.OnOff"];
  var DOM_HTML_Indexed_OrderedListType = PS["DOM.HTML.Indexed.OrderedListType"];
  var DOM_HTML_Indexed_PreloadValue = PS["DOM.HTML.Indexed.PreloadValue"];
  var DOM_HTML_Indexed_ScopeValue = PS["DOM.HTML.Indexed.ScopeValue"];
  var DOM_HTML_Indexed_StepValue = PS["DOM.HTML.Indexed.StepValue"];
  var DOM_HTML_Indexed_WrapValue = PS["DOM.HTML.Indexed.WrapValue"];
  var Halogen_Query_InputF = PS["Halogen.Query.InputF"];
  var Halogen_VDom = PS["Halogen.VDom"];
  var Halogen_VDom_DOM_Prop = PS["Halogen.VDom.DOM.Prop"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];
  var Data_Functor = PS["Data.Functor"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Ord = PS["Data.Ord"];
  var Control_Apply = PS["Control.Apply"];
  var Data_Unit = PS["Data.Unit"];
  var Halogen_VDom_Types = PS["Halogen.VDom.Types"];
  var Data_Function = PS["Data.Function"];
  var HTML = function (x) {
      return x;
  };
  var ClassName = function (x) {
      return x;
  };
  var IsProp = function (toPropValue) {
      this.toPropValue = toPropValue;
  }; 
  var toPropValue = function (dict) {
      return dict.toPropValue;
  };
  var text = function ($53) {
      return HTML(Halogen_VDom_Types.Text.create($53));
  };
  var stringIsProp = new IsProp(Halogen_VDom_DOM_Prop.propFromString);
  var prop = function (dictIsProp) {
      return function (v) {
          return function ($58) {
              return Halogen_VDom_DOM_Prop.Property.create(v)(toPropValue(dictIsProp)($58));
          };
      };
  };       
  var newtypeClassName = new Data_Newtype.Newtype(function (n) {
      return n;
  }, ClassName);                                                
  var inputTypeIsProp = new IsProp(function ($66) {
      return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_InputType.renderInputType($66));
  });
  var handler = Halogen_VDom_DOM_Prop.Handler.create;
  var element = Unsafe_Coerce.unsafeCoerce(function (name) {
      return function (props) {
          return function (children) {
              return new Halogen_VDom_Types.Elem(new Halogen_VDom_Types.ElemSpec(Data_Maybe.Nothing.value, name, props), children);
          };
      };
  });
  var booleanIsProp = new IsProp(Halogen_VDom_DOM_Prop.propFromBoolean);
  var bifunctorHTML = new Data_Bifunctor.Bifunctor(function (f) {
      return function (g) {
          return function (v) {
              return Data_Bifunctor.bimap(Halogen_VDom_Types.bifunctorVDom)(Data_Functor.map(Data_Functor.functorArray)(Data_Functor.map(Halogen_VDom_DOM_Prop.functorProp)(Data_Functor.map(Halogen_Query_InputF.functorInputF)(g))))(f)(v);
          };
      };
  });
  exports["ClassName"] = ClassName;
  exports["HTML"] = HTML;
  exports["IsProp"] = IsProp;
  exports["element"] = element;
  exports["handler"] = handler;
  exports["prop"] = prop;
  exports["text"] = text;
  exports["toPropValue"] = toPropValue;
  exports["bifunctorHTML"] = bifunctorHTML;
  exports["stringIsProp"] = stringIsProp;
  exports["booleanIsProp"] = booleanIsProp;
  exports["inputTypeIsProp"] = inputTypeIsProp;
  exports["newtypeClassName"] = newtypeClassName;
})(PS["Halogen.HTML.Core"] = PS["Halogen.HTML.Core"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Coroutine = PS["Control.Coroutine"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Aff_AVar = PS["Control.Monad.Aff.AVar"];
  var Control_Monad_Aff_Class = PS["Control.Monad.Aff.Class"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Control_Monad_Free_Trans = PS["Control.Monad.Free.Trans"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_Monad_Trans_Class = PS["Control.Monad.Trans.Class"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Either = PS["Data.Either"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Function = PS["Data.Function"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];        
  var Listening = (function () {
      function Listening() {

      };
      Listening.value = new Listening();
      return Listening;
  })();
  var Done = (function () {
      function Done() {

      };
      Done.value = new Done();
      return Done;
  })();
  var unEventSource = function (v) {
      return v;
  };
  var eqSubscribeStatus = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof Listening && y instanceof Listening) {
              return true;
          };
          if (x instanceof Done && y instanceof Done) {
              return true;
          };
          return false;
      };
  });
  exports["Listening"] = Listening;
  exports["Done"] = Done;
  exports["unEventSource"] = unEventSource;
  exports["eqSubscribeStatus"] = eqSubscribeStatus;
})(PS["Halogen.Query.EventSource"] = PS["Halogen.Query.EventSource"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Function = PS["Data.Function"];
  var Control_Category = PS["Control.Category"];
  var unFork = Unsafe_Coerce.unsafeCoerce;
  exports["unFork"] = unFork;
})(PS["Halogen.Query.ForkF"] = PS["Halogen.Query.ForkF"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Applicative_Free = PS["Control.Applicative.Free"];
  var Control_Monad_Aff_Class = PS["Control.Monad.Aff.Class"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Control_Monad_Fork = PS["Control.Monad.Fork"];
  var Control_Monad_Free = PS["Control.Monad.Free"];
  var Control_Monad_Reader_Class = PS["Control.Monad.Reader.Class"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_Monad_State_Class = PS["Control.Monad.State.Class"];
  var Control_Monad_Trans_Class = PS["Control.Monad.Trans.Class"];
  var Control_Monad_Writer_Class = PS["Control.Monad.Writer.Class"];
  var Control_Parallel_Class = PS["Control.Parallel.Class"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Coyoneda = PS["Data.Coyoneda"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_List = PS["Data.List"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Tuple = PS["Data.Tuple"];
  var Halogen_Query_EventSource = PS["Halogen.Query.EventSource"];
  var Halogen_Query_ForkF = PS["Halogen.Query.ForkF"];
  var Halogen_Query_InputF = PS["Halogen.Query.InputF"];
  var Data_Functor = PS["Data.Functor"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Data_Function = PS["Data.Function"];
  var Control_Monad_Fork_Class = PS["Control.Monad.Fork.Class"];
  var Data_Unit = PS["Data.Unit"];
  var Control_Category = PS["Control.Category"];
  var HalogenM = function (x) {
      return x;
  };
  var State = (function () {
      function State(value0) {
          this.value0 = value0;
      };
      State.create = function (value0) {
          return new State(value0);
      };
      return State;
  })();
  var Subscribe = (function () {
      function Subscribe(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Subscribe.create = function (value0) {
          return function (value1) {
              return new Subscribe(value0, value1);
          };
      };
      return Subscribe;
  })();
  var Lift = (function () {
      function Lift(value0) {
          this.value0 = value0;
      };
      Lift.create = function (value0) {
          return new Lift(value0);
      };
      return Lift;
  })();
  var Halt = (function () {
      function Halt(value0) {
          this.value0 = value0;
      };
      Halt.create = function (value0) {
          return new Halt(value0);
      };
      return Halt;
  })();
  var GetSlots = (function () {
      function GetSlots(value0) {
          this.value0 = value0;
      };
      GetSlots.create = function (value0) {
          return new GetSlots(value0);
      };
      return GetSlots;
  })();
  var CheckSlot = (function () {
      function CheckSlot(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      CheckSlot.create = function (value0) {
          return function (value1) {
              return new CheckSlot(value0, value1);
          };
      };
      return CheckSlot;
  })();
  var ChildQuery = (function () {
      function ChildQuery(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ChildQuery.create = function (value0) {
          return function (value1) {
              return new ChildQuery(value0, value1);
          };
      };
      return ChildQuery;
  })();
  var Raise = (function () {
      function Raise(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Raise.create = function (value0) {
          return function (value1) {
              return new Raise(value0, value1);
          };
      };
      return Raise;
  })();
  var Par = (function () {
      function Par(value0) {
          this.value0 = value0;
      };
      Par.create = function (value0) {
          return new Par(value0);
      };
      return Par;
  })();
  var Fork = (function () {
      function Fork(value0) {
          this.value0 = value0;
      };
      Fork.create = function (value0) {
          return new Fork(value0);
      };
      return Fork;
  })();
  var GetRef = (function () {
      function GetRef(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      GetRef.create = function (value0) {
          return function (value1) {
              return new GetRef(value0, value1);
          };
      };
      return GetRef;
  })();
  var functorHalogenM = new Data_Functor.Functor(function (f) {
      return function (v) {
          return Data_Functor.map(Control_Monad_Free.freeFunctor)(f)(v);
      };
  });
  var applyHalogenM = new Control_Apply.Apply(function () {
      return functorHalogenM;
  }, function (v) {
      return function (v1) {
          return Control_Apply.apply(Control_Monad_Free.freeApply)(v)(v1);
      };
  });
  var bindHalogenM = new Control_Bind.Bind(function () {
      return applyHalogenM;
  }, function (v) {
      return function (f) {
          return Control_Bind.bind(Control_Monad_Free.freeBind)(v)(function (x) {
              var $62 = f(x);
              return $62;
          });
      };
  });                                                       
  var applicativeHalogenM = new Control_Applicative.Applicative(function () {
      return applyHalogenM;
  }, function (a) {
      return Control_Applicative.pure(Control_Monad_Free.freeApplicative)(a);
  });
  var monadHalogenM = new Control_Monad.Monad(function () {
      return applicativeHalogenM;
  }, function () {
      return bindHalogenM;
  });
  var monadStateHalogenM = new Control_Monad_State_Class.MonadState(function () {
      return monadHalogenM;
  }, function ($68) {
      return HalogenM(Control_Monad_Free.liftF(State.create($68)));
  });
  exports["State"] = State;
  exports["Subscribe"] = Subscribe;
  exports["Lift"] = Lift;
  exports["Halt"] = Halt;
  exports["GetSlots"] = GetSlots;
  exports["CheckSlot"] = CheckSlot;
  exports["ChildQuery"] = ChildQuery;
  exports["Raise"] = Raise;
  exports["Par"] = Par;
  exports["Fork"] = Fork;
  exports["GetRef"] = GetRef;
  exports["HalogenM"] = HalogenM;
  exports["functorHalogenM"] = functorHalogenM;
  exports["applyHalogenM"] = applyHalogenM;
  exports["applicativeHalogenM"] = applicativeHalogenM;
  exports["bindHalogenM"] = bindHalogenM;
  exports["monadHalogenM"] = monadHalogenM;
  exports["monadStateHalogenM"] = monadStateHalogenM;
})(PS["Halogen.Query.HalogenM"] = PS["Halogen.Query.HalogenM"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Const = PS["Data.Const"];
  var Data_Maybe = PS["Data.Maybe"];
  var Halogen_Data_OrdBox = PS["Halogen.Data.OrdBox"];
  var Halogen_HTML_Core = PS["Halogen.HTML.Core"];
  var Halogen_Query_HalogenM = PS["Halogen.Query.HalogenM"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Ord = PS["Data.Ord"];
  var unComponentSlot = function (f) {
      return function (cs) {
          var $8 = Unsafe_Coerce.unsafeCoerce(cs);
          return f($8.value0)($8.value1)($8.value2)($8.value3)($8.value4)($8.value5);
      };
  };
  var unComponent = Unsafe_Coerce.unsafeCoerce;                          
  var mkComponent = Unsafe_Coerce.unsafeCoerce;
  var lifecycleComponent = function (dictBifunctor) {
      return function (spec) {
          return mkComponent({
              initialState: spec.initialState, 
              render: Unsafe_Coerce.unsafeCoerce(spec.render), 
              "eval": spec["eval"], 
              receiver: spec.receiver, 
              initializer: spec.initializer, 
              finalizer: spec.finalizer, 
              mkOrdBox: Halogen_Data_OrdBox.mkOrdBox(Data_Ord.ordVoid)
          });
      };
  }; 
  var component = function (dictBifunctor) {
      return function (spec) {
          return lifecycleComponent(dictBifunctor)({
              initialState: spec.initialState, 
              render: spec.render, 
              "eval": spec["eval"], 
              receiver: spec.receiver, 
              initializer: Data_Maybe.Nothing.value, 
              finalizer: Data_Maybe.Nothing.value
          });
      };
  };
  exports["component"] = component;
  exports["lifecycleComponent"] = lifecycleComponent;
  exports["mkComponent"] = mkComponent;
  exports["unComponent"] = unComponent;
  exports["unComponentSlot"] = unComponentSlot;
})(PS["Halogen.Component"] = PS["Halogen.Component"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Ref = PS["Control.Monad.Eff.Ref"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_List = PS["Data.List"];
  var Data_Map = PS["Data.Map"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_StrMap = PS["Data.StrMap"];
  var Data_Traversable = PS["Data.Traversable"];
  var Halogen_Aff_Effects = PS["Halogen.Aff.Effects"];
  var Halogen_Component = PS["Halogen.Component"];
  var Halogen_Data_OrdBox = PS["Halogen.Data.OrdBox"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];
  var Data_Foldable = PS["Data.Foldable"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Functor = PS["Data.Functor"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Function = PS["Data.Function"];
  var Control_Applicative = PS["Control.Applicative"];
  var unRenderStateX = Unsafe_Coerce.unsafeCoerce;
  var unDriverStateX = Unsafe_Coerce.unsafeCoerce;
  var renderStateX_ = function (dictApplicative) {
      return function (f) {
          return unDriverStateX(function (st) {
              return Data_Foldable.traverse_(dictApplicative)(Data_Foldable.foldableMaybe)(f)(st.rendering);
          });
      };
  };
  var mkRenderStateX = function (v) {
      return Unsafe_Coerce.unsafeCoerce;
  };
  var renderStateX = function (dictFunctor) {
      return function (f) {
          return unDriverStateX(function (st) {
              return mkRenderStateX(st.prjQuery)(f(st.rendering));
          });
      };
  };
  var mkDriverStateXRef = Unsafe_Coerce.unsafeCoerce;
  var initDriverState = function (component) {
      return function (input) {
          return function (handler) {
              return function (prjQuery) {
                  return function (lchs) {
                      return function __do() {
                          var v = Control_Monad_Eff_Ref.newRef(Unsafe_Coerce.unsafeCoerce({}))();
                          var v1 = Control_Monad_Eff_Ref.newRef(Data_Map.empty)();
                          var v2 = Control_Monad_Eff_Ref.newRef(Data_Map.empty)();
                          var v3 = Control_Monad_Eff_Ref.newRef(Data_Functor.voidLeft(Data_Maybe.functorMaybe)(component.initializer)(Data_List_Types.Nil.value))();
                          var v4 = Control_Monad_Eff_Ref.newRef(new Data_Maybe.Just(Data_List_Types.Nil.value))();
                          var v5 = Control_Monad_Eff_Ref.newRef(Data_Maybe.Nothing.value)();
                          var v6 = Control_Monad_Eff_Ref.newRef(0)();
                          var v7 = Control_Monad_Eff_Ref.newRef(new Data_Maybe.Just(Data_Map.empty))();
                          var ds = {
                              component: component, 
                              state: component.initialState(input), 
                              refs: Data_StrMap.empty, 
                              children: Data_Map.empty, 
                              childrenIn: v1, 
                              childrenOut: v2, 
                              selfRef: v, 
                              handler: handler, 
                              pendingQueries: v3, 
                              pendingOuts: v4, 
                              pendingHandlers: v5, 
                              rendering: Data_Maybe.Nothing.value, 
                              prjQuery: prjQuery, 
                              fresh: v6, 
                              subscriptions: v7, 
                              lifecycleHandlers: lchs
                          };
                          Control_Monad_Eff_Ref.writeRef(v)(ds)();
                          return mkDriverStateXRef(v);
                      };
                  };
              };
          };
      };
  };
  exports["initDriverState"] = initDriverState;
  exports["mkDriverStateXRef"] = mkDriverStateXRef;
  exports["renderStateX"] = renderStateX;
  exports["renderStateX_"] = renderStateX_;
  exports["unDriverStateX"] = unDriverStateX;
  exports["unRenderStateX"] = unRenderStateX;
})(PS["Halogen.Aff.Driver.State"] = PS["Halogen.Aff.Driver.State"] || {});
(function(exports) {
    "use strict";

  exports.reallyUnsafeRefEq = function (a) {
    return function (b) {
      return a === b;
    };
  };
})(PS["Unsafe.Reference"] = PS["Unsafe.Reference"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var $foreign = PS["Unsafe.Reference"];
  var unsafeRefEq = $foreign.reallyUnsafeRefEq;
  exports["unsafeRefEq"] = unsafeRefEq;
})(PS["Unsafe.Reference"] = PS["Unsafe.Reference"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Applicative_Free = PS["Control.Applicative.Free"];
  var Control_Coroutine = PS["Control.Coroutine"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Aff_Unsafe = PS["Control.Monad.Aff.Unsafe"];
  var Control_Monad_Aff_AVar = PS["Control.Monad.Aff.AVar"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Control_Monad_Eff_Ref = PS["Control.Monad.Eff.Ref"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Monad_Fork = PS["Control.Monad.Fork"];
  var Control_Monad_Free = PS["Control.Monad.Free"];
  var Control_Monad_Trans_Class = PS["Control.Monad.Trans.Class"];
  var Control_Parallel = PS["Control.Parallel"];
  var Data_Coyoneda = PS["Data.Coyoneda"];
  var Data_Either = PS["Data.Either"];
  var Data_List = PS["Data.List"];
  var Data_Map = PS["Data.Map"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_StrMap = PS["Data.StrMap"];
  var Data_Tuple = PS["Data.Tuple"];
  var Halogen_Aff_Driver_State = PS["Halogen.Aff.Driver.State"];
  var Halogen_Aff_Effects = PS["Halogen.Aff.Effects"];
  var Halogen_Data_OrdBox = PS["Halogen.Data.OrdBox"];
  var Halogen_Query_EventSource = PS["Halogen.Query.EventSource"];
  var Halogen_Query_ForkF = PS["Halogen.Query.ForkF"];
  var Halogen_Query_HalogenM = PS["Halogen.Query.HalogenM"];
  var Halogen_Query_InputF = PS["Halogen.Query.InputF"];
  var Unsafe_Reference = PS["Unsafe.Reference"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Function = PS["Data.Function"];
  var Data_List_Types = PS["Data.List.Types"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Ord = PS["Data.Ord"];
  var Control_Monad_Free_Trans = PS["Control.Monad.Free.Trans"];
  var Data_Eq = PS["Data.Eq"];
  var Control_Parallel_Class = PS["Control.Parallel.Class"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Control_Monad_Fork_Class = PS["Control.Monad.Fork.Class"];        
  var queuingHandler = function (handler) {
      return function (ref) {
          return function (message) {
              return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.readRef(ref)))(function (v) {
                  if (v instanceof Data_Maybe.Nothing) {
                      return handler(message);
                  };
                  if (v instanceof Data_Maybe.Just) {
                      return Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.writeRef(ref)(new Data_Maybe.Just(new Data_List_Types.Cons(handler(message), v.value0))));
                  };
                  throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval line 198, column 3 - line 202, column 57: " + [ v.constructor.name ]);
              });
          };
      };
  };
  var parSequenceAff_ = function (v) {
      if (v instanceof Data_List_Types.Nil) {
          return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(Data_Unit.unit);
      };
      if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Nil) {
          return Data_Functor["void"](Control_Monad_Aff.functorAff)(v.value0);
      };
      if (v instanceof Data_List_Types.Cons) {
          return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.makeVar)(function (v1) {
              return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.newRef(v.value1)))(function (v2) {
                  var run = function (a) {
                      return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff.attempt(a))(function (v3) {
                          if (v3 instanceof Data_Either.Left) {
                              return Control_Monad_Aff_AVar.putVar(v1)(new Data_Maybe.Just(v3.value0));
                          };
                          if (v3 instanceof Data_Either.Right) {
                              return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.readRef(v2)))(function (v4) {
                                  if (v4 instanceof Data_List_Types.Nil) {
                                      return Control_Monad_Aff_AVar.putVar(v1)(Data_Maybe.Nothing.value);
                                  };
                                  if (v4 instanceof Data_List_Types.Cons) {
                                      return Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.writeRef(v2)(v4.value1));
                                  };
                                  throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval line 55, column 15 - line 57, column 57: " + [ v4.constructor.name ]);
                              });
                          };
                          throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval line 51, column 23 - line 57, column 57: " + [ v3.constructor.name ]);
                      });
                  };
                  return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff.forkAll(Data_List_Types.foldableList)(Data_Functor.map(Data_List_Types.functorList)(run)(v)))(function (v3) {
                      return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.peekVar(v1))(function (v4) {
                          if (v4 instanceof Data_Maybe.Nothing) {
                              return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(Data_Unit.unit);
                          };
                          if (v4 instanceof Data_Maybe.Just) {
                              return Control_Monad_Error_Class.throwError(Control_Monad_Aff.monadErrorAff)(v4.value0);
                          };
                          throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval line 59, column 24 - line 61, column 33: " + [ v4.constructor.name ]);
                      });
                  });
              });
          });
      };
      throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval line 43, column 19 - line 61, column 33: " + [ v.constructor.name ]);
  };
  var handleLifecycle = function (lchs) {
      return function (f) {
          return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.writeRef(lchs)({
              initializers: Data_List_Types.Nil.value, 
              finalizers: Data_List_Types.Nil.value
          })))(function () {
              return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(f))(function (v) {
                  return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.readRef(lchs)))(function (v1) {
                      return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff.forkAll(Data_List_Types.foldableList)(v1.finalizers))(function () {
                          return Control_Bind.bind(Control_Monad_Aff.bindAff)(parSequenceAff_(v1.initializers))(function () {
                              return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(v);
                          });
                      });
                  });
              });
          });
      };
  };
  var $$eval = function (render) {
      return function (r) {
          var go = function (ref) {
              return function (v) {
                  if (v instanceof Halogen_Query_HalogenM.State) {
                      return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.readRef(ref)))(function (v1) {
                          var $57 = v.value0(v1.state);
                          if (Unsafe_Reference.unsafeRefEq(v1.state)($57.value1)) {
                              return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)($57.value0);
                          };
                          if (Data_Boolean.otherwise) {
                              return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.writeRef(ref)((function () {
                                  var $58 = {};
                                  for (var $59 in v1) {
                                      if ({}.hasOwnProperty.call(v1, $59)) {
                                          $58[$59] = v1[$59];
                                      };
                                  };
                                  $58.state = $57.value1;
                                  return $58;
                              })())))(function () {
                                  return Control_Bind.bind(Control_Monad_Aff.bindAff)(handleLifecycle(v1.lifecycleHandlers)(render(v1.lifecycleHandlers)(ref)))(function () {
                                      return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)($57.value0);
                                  });
                              });
                          };
                          throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval line 106, column 7 - line 112, column 21: " + [ $57.constructor.name ]);
                      });
                  };
                  if (v instanceof Halogen_Query_HalogenM.Subscribe) {
                      return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.readRef(ref)))(function (v1) {
                          return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff.forkAff(Control_Bind.bind(Control_Monad_Aff.bindAff)(Halogen_Query_EventSource.unEventSource(v.value0))(function (v2) {
                              return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(function __do() {
                                  var v3 = Control_Monad_Eff_Ref["modifyRef'"](v1.fresh)(function (i) {
                                      return {
                                          state: i + 1 | 0, 
                                          value: i
                                      };
                                  })();
                                  Control_Monad_Eff_Ref.modifyRef(v1.subscriptions)(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Map.insert(Data_Ord.ordInt)(v3)(v2.done)))();
                                  return v3;
                              }))(function (v3) {
                                  var consumer = Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorAwait)(Control_Monad_Aff.monadAff))(Control_Coroutine["await"](Control_Monad_Aff.monadAff))(function (v4) {
                                      return Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorAwait)(Control_Monad_Aff.monadAff))(Control_Monad_Trans_Class.lift(Control_Monad_Free_Trans.monadTransFreeT(Control_Coroutine.functorAwait))(Control_Monad_Aff.monadAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.readRef(v1.subscriptions))))(function (v5) {
                                          return Control_Applicative.when(Control_Monad_Free_Trans.applicativeFreeT(Control_Coroutine.functorAwait)(Control_Monad_Aff.monadAff))(Data_Maybe.isJust(v5))(Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorAwait)(Control_Monad_Aff.monadAff))(Control_Monad_Trans_Class.lift(Control_Monad_Free_Trans.monadTransFreeT(Control_Coroutine.functorAwait))(Control_Monad_Aff.monadAff)(evalF(ref)(v4)))(function (v6) {
                                              return Control_Applicative.when(Control_Monad_Free_Trans.applicativeFreeT(Control_Coroutine.functorAwait)(Control_Monad_Aff.monadAff))(Data_Eq.eq(Halogen_Query_EventSource.eqSubscribeStatus)(v6)(Halogen_Query_EventSource.Listening.value))(consumer);
                                          }));
                                      });
                                  });
                                  return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Coroutine.runProcess(Control_Monad_Aff.monadRecAff)(Control_Coroutine.pullFrom(Control_Monad_Aff.monadRecAff)(consumer)(v2.producer)))(function () {
                                      return Control_Bind.bind(Control_Monad_Aff.bindAff)(v2.done)(function () {
                                          return Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.modifyRef(v1.subscriptions)(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Map["delete"](Data_Ord.ordInt)(v3))));
                                      });
                                  });
                              });
                          })))(function () {
                              return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(v.value1);
                          });
                      });
                  };
                  if (v instanceof Halogen_Query_HalogenM.Lift) {
                      return v.value0;
                  };
                  if (v instanceof Halogen_Query_HalogenM.Halt) {
                      return Control_Monad_Error_Class.throwError(Control_Monad_Aff.monadErrorAff)(Control_Monad_Eff_Exception.error(v.value0));
                  };
                  if (v instanceof Halogen_Query_HalogenM.GetSlots) {
                      return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.readRef(ref)))(function (v1) {
                          return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(v.value0(Data_Functor.map(Data_List_Types.functorList)(Halogen_Data_OrdBox.unOrdBox)(Data_Map.keys(v1.children))));
                      });
                  };
                  if (v instanceof Halogen_Query_HalogenM.CheckSlot) {
                      return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.readRef(ref)))(function (v1) {
                          return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(v.value1(Data_Map.member(Halogen_Data_OrdBox.ordOrdBox)(v1.component.mkOrdBox(v.value0))(v1.children)));
                      });
                  };
                  if (v instanceof Halogen_Query_HalogenM.ChildQuery) {
                      return evalChildQuery(ref)(v.value0)(v.value1);
                  };
                  if (v instanceof Halogen_Query_HalogenM.Raise) {
                      return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.readRef(ref)))(function (v1) {
                          return Control_Bind.bind(Control_Monad_Aff.bindAff)(queuingHandler(v1.handler)(v1.pendingOuts)(v.value0))(function () {
                              return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(v.value1);
                          });
                      });
                  };
                  if (v instanceof Halogen_Query_HalogenM.Par) {
                      return Control_Parallel_Class.sequential(Control_Monad_Aff.parallelParAff)(Control_Applicative_Free.retractFreeAp(Control_Monad_Aff.applicativeParAff)(Control_Applicative_Free.hoistFreeAp(function ($125) {
                          return Control_Parallel_Class.parallel(Control_Monad_Aff.parallelParAff)(evalM(ref)($125));
                      })(v.value0)));
                  };
                  if (v instanceof Halogen_Query_HalogenM.Fork) {
                      return Halogen_Query_ForkF.unFork(function (v1) {
                          return Data_Functor.map(Control_Monad_Aff.functorAff)(function ($126) {
                              return v1.value1(Data_Functor.map(Data_Functor.functorFn)(Control_Monad_Aff_Unsafe.unsafeCoerceAff)($126));
                          })(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff)(evalM(ref)(v1.value0)));
                      })(v.value0);
                  };
                  if (v instanceof Halogen_Query_HalogenM.GetRef) {
                      return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.readRef(ref)))(function (v1) {
                          return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(v.value1(Data_StrMap.lookup(v.value0)(v1.refs)));
                      });
                  };
                  throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval line 103, column 12 - line 155, column 34: " + [ v.constructor.name ]);
              };
          };
          var evalM = function (ref) {
              return function (v) {
                  return Control_Monad_Free.foldFree(Control_Monad_Aff.monadRecAff)(go(ref))(v);
              };
          };
          var evalF = function (ref) {
              return function (q) {
                  return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.readRef(ref)))(function (v) {
                      var $109 = v["component"]["eval"](q);
                      return Control_Monad_Free.foldFree(Control_Monad_Aff.monadRecAff)(go(ref))($109);
                  });
              };
          };
          var evalChildQuery = function (ref) {
              return function (p) {
                  return Data_Coyoneda.unCoyoneda(function (k) {
                      return function (q) {
                          return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.readRef(ref)))(function (v) {
                              var $111 = Data_Map.lookup(Halogen_Data_OrdBox.ordOrdBox)(v.component.mkOrdBox(p))(v.children);
                              if ($111 instanceof Data_Maybe.Just) {
                                  return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.readRef($111.value0)))(function (v1) {
                                      return Halogen_Aff_Driver_State.unDriverStateX(function (ds) {
                                          var $113 = ds.prjQuery(q);
                                          if ($113 instanceof Data_Maybe.Just) {
                                              return Data_Functor.map(Control_Monad_Aff.functorAff)(k)(evalF(ds.selfRef)($113.value0));
                                          };
                                          if ($113 instanceof Data_Maybe.Nothing) {
                                              return Control_Monad_Error_Class.throwError(Control_Monad_Aff.monadErrorAff)(Control_Monad_Eff_Exception.error("Query projection failed for child query"));
                                          };
                                          throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval line 168, column 32 - line 170, column 82: " + [ $113.constructor.name ]);
                                      })(v1);
                                  });
                              };
                              if ($111 instanceof Data_Maybe.Nothing) {
                                  return Control_Monad_Error_Class.throwError(Control_Monad_Aff.monadErrorAff)(Control_Monad_Eff_Exception.error("Slot lookup failed for child query"));
                              };
                              throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval line 165, column 5 - line 171, column 73: " + [ $111.constructor.name ]);
                          });
                      };
                  });
              };
          };
          return function (v) {
              if (v instanceof Halogen_Query_InputF.RefUpdate) {
                  return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.modifyRef(r)(function (v1) {
                      var $118 = {};
                      for (var $119 in v1) {
                          if ({}.hasOwnProperty.call(v1, $119)) {
                              $118[$119] = v1[$119];
                          };
                      };
                      $118.refs = Data_StrMap.alter(Data_Function["const"](v.value1))(v.value0)(v1.refs);
                      return $118;
                  })))(function () {
                      return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(v.value2);
                  });
              };
              if (v instanceof Halogen_Query_InputF.Query) {
                  return evalF(r)(v.value0);
              };
              throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval line 89, column 3 - line 94, column 25: " + [ v.constructor.name ]);
          };
      };
  };
  exports["eval"] = $$eval;
  exports["handleLifecycle"] = handleLifecycle;
  exports["parSequenceAff_"] = parSequenceAff_;
  exports["queuingHandler"] = queuingHandler;
})(PS["Halogen.Aff.Driver.Eval"] = PS["Halogen.Aff.Driver.Eval"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Coroutine = PS["Control.Coroutine"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Aff_AVar = PS["Control.Monad.Aff.AVar"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Monad_Eff_Console = PS["Control.Monad.Eff.Console"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Control_Monad_Eff_Ref = PS["Control.Monad.Eff.Ref"];
  var Control_Monad_Eff_Unsafe = PS["Control.Monad.Eff.Unsafe"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Data_List = PS["Data.List"];
  var Data_Either = PS["Data.Either"];
  var Data_Map = PS["Data.Map"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Halogen = PS["Halogen"];
  var Halogen_Aff_Driver_Eval = PS["Halogen.Aff.Driver.Eval"];
  var Halogen_Aff_Driver_State = PS["Halogen.Aff.Driver.State"];
  var Halogen_Aff_Effects = PS["Halogen.Aff.Effects"];
  var Halogen_Component = PS["Halogen.Component"];
  var Halogen_Data_OrdBox = PS["Halogen.Data.OrdBox"];
  var Halogen_Query_InputF = PS["Halogen.Query.InputF"];
  var Data_List_Types = PS["Data.List.Types"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Function = PS["Data.Function"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_Unit = PS["Data.Unit"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Foldable = PS["Data.Foldable"];        
  var newLifecycleHandlers = Control_Monad_Eff_Ref.newRef({
      initializers: Data_List_Types.Nil.value, 
      finalizers: Data_List_Types.Nil.value
  });
  var handleAff = function ($60) {
      return Data_Functor["void"](Control_Monad_Eff.functorEff)(Control_Monad_Aff.runAff(Control_Monad_Eff_Exception.throwException)(Data_Function["const"](Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit)))($60));
  };
  var runUI = function (renderSpec) {
      return function (component) {
          return function (i) {
              var subscribe = function (fresh) {
                  return function (ref) {
                      return function (consumer) {
                          return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.makeVar)(function (v) {
                              return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(function __do() {
                                  var v1 = Control_Monad_Eff_Ref.readRef(fresh)();
                                  Control_Monad_Eff_Ref.modifyRef(fresh)(function (v2) {
                                      return v2 + 1 | 0;
                                  })();
                                  Control_Monad_Eff_Ref.modifyRef(ref)(Data_Map.insert(Data_Ord.ordInt)(v1)(v))();
                                  return v1;
                              }))(function (v1) {
                                  var producer = Control_Coroutine.producer(Control_Monad_Aff.monadAff)(Data_Functor.map(Control_Monad_Aff.functorAff)(Data_Either.Left.create)(Control_Monad_Aff_AVar.takeVar(v)));
                                  return Data_Functor["void"](Control_Monad_Aff.functorAff)(Control_Monad_Aff.forkAff(Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Coroutine.runProcess(Control_Monad_Aff.monadRecAff)(Control_Coroutine.connect(Control_Monad_Aff.monadRecAff)(Control_Monad_Aff.parallelParAff)(producer)(consumer)))(function () {
                                      return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.modifyRef(ref)(Data_Map["delete"](Data_Ord.ordInt)(v1))))(function () {
                                          return Control_Monad_Aff_AVar.killVar(v)(Control_Monad_Eff_Exception.error("ended"));
                                      });
                                  })));
                              });
                          });
                      };
                  };
              };
              var rootHandler = function (ref) {
                  return function (message) {
                      return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.readRef(ref)))(function (v) {
                          return Data_Functor["void"](Control_Monad_Aff.functorAff)(Control_Monad_Aff.forkAll(Data_Map.foldableMap)(Data_Functor.map(Data_Map.functorMap)(function ($$var) {
                              return Control_Monad_Aff_AVar.putVar($$var)(message);
                          })(v)));
                      });
                  };
              };
              var handlePending = function (ref) {
                  return function __do() {
                      var v = Control_Monad_Eff_Ref.readRef(ref)();
                      Control_Monad_Eff_Ref.writeRef(ref)(Data_Maybe.Nothing.value)();
                      return Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableMaybe)(v)(function ($61) {
                          return handleAff(Control_Monad_Aff.forkAll(Data_List_Types.foldableList)(Data_List.reverse($61)));
                      })();
                  };
              };
              var cleanupSubscriptions = Halogen_Aff_Driver_State.unDriverStateX(function (ds) {
                  return function __do() {
                      Control_Bind.bindFlipped(Control_Monad_Eff.bindEff)(Data_Foldable.traverse_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableMaybe)(function ($62) {
                          return handleAff(Control_Monad_Aff.forkAll(Data_Map.foldableMap)($62));
                      }))(Control_Monad_Eff_Ref.readRef(ds.subscriptions))();
                      return Control_Monad_Eff_Ref.writeRef(ds.subscriptions)(Data_Maybe.Nothing.value)();
                  };
              });
              var squashChildInitializers = function (lchs) {
                  return function (preInits) {
                      return Halogen_Aff_Driver_State.unDriverStateX(function (st) {
                          var parentInitializer = Data_Functor.map(Data_Maybe.functorMaybe)(function ($63) {
                              return evalF(st.selfRef)(Halogen_Query_InputF.Query.create($63));
                          })(st.component.initializer);
                          return Control_Monad_Eff_Ref.modifyRef(lchs)(function (handlers) {
                              return {
                                  initializers: new Data_List_Types.Cons(Control_Bind.bind(Control_Monad_Aff.bindAff)(Halogen_Aff_Driver_Eval.parSequenceAff_(Data_List.reverse(handlers.initializers)))(function () {
                                      return Control_Bind.bind(Control_Monad_Aff.bindAff)(Data_Foldable.sequence_(Control_Monad_Aff.applicativeAff)(Data_Foldable.foldableMaybe)(parentInitializer))(function () {
                                          return Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(function __do() {
                                              handlePending(st.pendingQueries)();
                                              return handlePending(st.pendingOuts)();
                                          });
                                      });
                                  }), preInits), 
                                  finalizers: handlers.finalizers
                              };
                          });
                      });
                  };
              };
              var runComponent = function (lchs) {
                  return function (handler) {
                      return function (j) {
                          return function (prjQuery) {
                              return Halogen_Component.unComponent(function (c) {
                                  return function __do() {
                                      var v = newLifecycleHandlers();
                                      var v1 = Halogen_Aff_Driver_State.initDriverState(c)(j)(handler)(prjQuery)(v)();
                                      var v2 = Control_Monad_Eff_Ref.readRef(lchs)();
                                      Control_Monad_Eff_Ref.writeRef(lchs)({
                                          initializers: Data_List_Types.Nil.value, 
                                          finalizers: v2.finalizers
                                      })();
                                      Control_Bind.bindFlipped(Control_Monad_Eff.bindEff)(Halogen_Aff_Driver_State.unDriverStateX(function ($64) {
                                          return render(lchs)((function (v3) {
                                              return v3.selfRef;
                                          })($64));
                                      }))(Control_Monad_Eff_Ref.readRef(v1))();
                                      Control_Bind.bindFlipped(Control_Monad_Eff.bindEff)(squashChildInitializers(lchs)(v2.initializers))(Control_Monad_Eff_Ref.readRef(v1))();
                                      return v1;
                                  };
                              });
                          };
                      };
                  };
              };
              var renderChild = function (lchs) {
                  return function (handler) {
                      return function (mkOrdBox) {
                          return function (childrenInRef) {
                              return function (childrenOutRef) {
                                  return Halogen_Component.unComponentSlot(function (p) {
                                      return function (ctor) {
                                          return function (input) {
                                              return function (inputQuery) {
                                                  return function (outputQuery) {
                                                      return function (prjQuery) {
                                                          var ordP = mkOrdBox(p);
                                                          return function __do() {
                                                              var v = Control_Monad_Eff_Ref.readRef(childrenInRef)();
                                                              var v1 = (function () {
                                                                  var $36 = Data_Map.pop(Halogen_Data_OrdBox.ordOrdBox)(ordP)(v);
                                                                  if ($36 instanceof Data_Maybe.Just) {
                                                                      return function __do() {
                                                                          Control_Monad_Eff_Ref.writeRef(childrenInRef)($36.value0.value1)();
                                                                          Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableMaybe)(inputQuery(input))(function (q) {
                                                                              return function __do() {
                                                                                  var v1 = Control_Monad_Eff_Ref.readRef($36.value0.value0)();
                                                                                  return Halogen_Aff_Driver_State.unDriverStateX(function (st) {
                                                                                      return Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableMaybe)(st.prjQuery(q))(function ($65) {
                                                                                          return handleAff(evalF(st.selfRef)(Halogen_Query_InputF.Query.create($65)));
                                                                                      });
                                                                                  })(v1)();
                                                                              };
                                                                          })();
                                                                          return $36.value0.value0;
                                                                      };
                                                                  };
                                                                  if ($36 instanceof Data_Maybe.Nothing) {
                                                                      return runComponent(lchs)(function ($66) {
                                                                          return Data_Maybe.maybe(Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(Data_Unit.unit))(handler)(outputQuery($66));
                                                                      })(input)(prjQuery)(ctor);
                                                                  };
                                                                  throw new Error("Failed pattern match at Halogen.Aff.Driver line 203, column 14 - line 211, column 92: " + [ $36.constructor.name ]);
                                                              })()();
                                                              var v2 = Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Map.member(Halogen_Data_OrdBox.ordOrdBox)(ordP))(Control_Monad_Eff_Ref.readRef(childrenOutRef))();
                                                              Control_Applicative.when(Control_Monad_Eff.applicativeEff)(v2)(Control_Monad_Eff_Unsafe.unsafeCoerceEff(Control_Monad_Eff_Console.warn("Halogen: Duplicate slot address was detected during rendering, unexpected results may occur")))();
                                                              Control_Monad_Eff_Ref.modifyRef(childrenOutRef)(Data_Map.insert(Halogen_Data_OrdBox.ordOrdBox)(ordP)(v1))();
                                                              return Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Monad_Eff_Ref.readRef(v1))(Halogen_Aff_Driver_State.renderStateX(Control_Monad_Eff.functorEff)(function (v3) {
                                                                  if (v3 instanceof Data_Maybe.Nothing) {
                                                                      return Control_Monad_Eff_Exception["throw"]("Halogen internal error: child was not initialized in renderChild");
                                                                  };
                                                                  if (v3 instanceof Data_Maybe.Just) {
                                                                      return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(renderSpec.renderChild(v3.value0));
                                                                  };
                                                                  throw new Error("Failed pattern match at Halogen.Aff.Driver line 217, column 36 - line 219, column 50: " + [ v3.constructor.name ]);
                                                              }))();
                                                          };
                                                      };
                                                  };
                                              };
                                          };
                                      };
                                  });
                              };
                          };
                      };
                  };
              };
              var render = function (lchs) {
                  return function ($$var) {
                      return function __do() {
                          var v = Control_Monad_Eff_Ref.readRef($$var)();
                          var v1 = Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Maybe.isNothing)(Control_Monad_Eff_Ref.readRef(v.pendingHandlers))();
                          Control_Applicative.when(Control_Monad_Eff.applicativeEff)(v1)(Control_Monad_Eff_Ref.writeRef(v.pendingHandlers)(new Data_Maybe.Just(Data_List_Types.Nil.value)))();
                          Control_Monad_Eff_Ref.writeRef(v.childrenOut)(Data_Map.empty)();
                          Control_Monad_Eff_Ref.writeRef(v.childrenIn)(v.children)();
                          var handler = Halogen_Aff_Driver_Eval.queuingHandler(function ($67) {
                              return Data_Functor["void"](Control_Monad_Aff.functorAff)(evalF(v.selfRef)($67));
                          })(v.pendingHandlers);
                          var childHandler = Halogen_Aff_Driver_Eval.queuingHandler(function ($68) {
                              return handler(Halogen_Query_InputF.Query.create($68));
                          })(v.pendingQueries);
                          var v2 = renderSpec.render(function ($69) {
                              return handleAff(handler($69));
                          })(renderChild(lchs)(childHandler)(v.component.mkOrdBox)(v.childrenIn)(v.childrenOut))(v.component.render(v.state))(v.rendering)();
                          var v3 = Control_Monad_Eff_Ref.readRef(v.childrenOut)();
                          Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Monad_Eff_Ref.readRef(v.childrenIn))(Data_Foldable.traverse_(Control_Monad_Eff.applicativeEff)(Data_Map.foldableMap)(function (childVar) {
                              return function __do() {
                                  var v4 = Control_Monad_Eff_Ref.readRef(childVar)();
                                  Halogen_Aff_Driver_State.renderStateX_(Control_Monad_Eff.applicativeEff)(renderSpec.removeChild)(v4)();
                                  cleanupSubscriptions(v4)();
                                  return addFinalizer(lchs)(v4)();
                              };
                          }))();
                          Control_Monad_Eff_Ref.modifyRef(v.selfRef)(function (v4) {
                              return {
                                  rendering: new Data_Maybe.Just(v2), 
                                  children: v3, 
                                  component: v4.component, 
                                  state: v4.state, 
                                  refs: v4.refs, 
                                  childrenIn: v4.childrenIn, 
                                  childrenOut: v4.childrenOut, 
                                  selfRef: v4.selfRef, 
                                  handler: v4.handler, 
                                  pendingQueries: v4.pendingQueries, 
                                  pendingOuts: v4.pendingOuts, 
                                  pendingHandlers: v4.pendingHandlers, 
                                  prjQuery: v4.prjQuery, 
                                  fresh: v4.fresh, 
                                  subscriptions: v4.subscriptions, 
                                  lifecycleHandlers: v4.lifecycleHandlers
                              };
                          })();
                          return Control_Applicative.when(Control_Monad_Eff.applicativeEff)(v1)(Data_Function.flip(Control_Monad_Rec_Class.tailRecM(Control_Monad_Rec_Class.monadRecEff))(Data_Unit.unit)(function (v4) {
                              return function __do() {
                                  var v5 = Control_Monad_Eff_Ref.readRef(v.pendingHandlers)();
                                  Control_Monad_Eff_Ref.writeRef(v.pendingHandlers)(new Data_Maybe.Just(Data_List_Types.Nil.value))();
                                  Data_Foldable.traverse_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableMaybe)(function ($70) {
                                      return handleAff(Control_Monad_Aff.forkAll(Data_List_Types.foldableList)(Data_List.reverse($70)));
                                  })(v5)();
                                  var v6 = Control_Monad_Eff_Ref.readRef(v.pendingHandlers)();
                                  var $54 = Data_Maybe.maybe(false)(Data_List["null"])(v6);
                                  if ($54) {
                                      return Data_Functor.voidLeft(Control_Monad_Eff.functorEff)(Control_Monad_Eff_Ref.writeRef(v.pendingHandlers)(Data_Maybe.Nothing.value))(new Control_Monad_Rec_Class.Done(Data_Unit.unit))();
                                  };
                                  if (!$54) {
                                      return new Control_Monad_Rec_Class.Loop(Data_Unit.unit);
                                  };
                                  throw new Error("Failed pattern match at Halogen.Aff.Driver line 186, column 9 - line 188, column 32: " + [ $54.constructor.name ]);
                              };
                          }))();
                      };
                  };
              };
              var evalF = function (ref) {
                  return Halogen_Aff_Driver_Eval["eval"](render)(ref);
              };
              var addFinalizer = function (lchs) {
                  return Halogen_Aff_Driver_State.unDriverStateX(function (st) {
                      return function __do() {
                          Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(function ($71) {
                              return evalF(st.selfRef)(Halogen_Query_InputF.Query.create($71));
                          })(st.component.finalizer))(function (f) {
                              return Control_Monad_Eff_Ref.modifyRef(lchs)(function (handlers) {
                                  return {
                                      initializers: handlers.initializers, 
                                      finalizers: new Data_List_Types.Cons(f, handlers.finalizers)
                                  };
                              });
                          })();
                          return Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(Data_Map.foldableMap)(st.children)(Control_Bind.composeKleisliFlipped(Control_Monad_Eff.bindEff)(addFinalizer(lchs))(Control_Monad_Eff_Ref.readRef))();
                      };
                  });
              };
              var evalDriver = function (ref) {
                  return function (prjQuery) {
                      return function (q) {
                          var $55 = prjQuery(q);
                          if ($55 instanceof Data_Maybe.Just) {
                              return evalF(ref)(new Halogen_Query_InputF.Query($55.value0));
                          };
                          if ($55 instanceof Data_Maybe.Nothing) {
                              return Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Exception.throwException(Control_Monad_Eff_Exception.error("Halogen internal error: query projection failed in runUI'")));
                          };
                          throw new Error("Failed pattern match at Halogen.Aff.Driver line 80, column 5 - line 82, column 110: " + [ $55.constructor.name ]);
                      };
                  };
              };
              return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(newLifecycleHandlers))(function (v) {
                  return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.newRef(0)))(function (v1) {
                      return Halogen_Aff_Driver_Eval.handleLifecycle(v)(function __do() {
                          var v2 = Control_Monad_Eff_Ref.newRef(Data_Map.empty)();
                          return Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Bind.bind(Control_Monad_Eff.bindEff)(runComponent(v)(rootHandler(v2))(i)(Data_Maybe.Just.create)(component))(Control_Monad_Eff_Ref.readRef))(Halogen_Aff_Driver_State.unDriverStateX(function (st) {
                              return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)({
                                  query: evalDriver(st.selfRef)(st.prjQuery), 
                                  subscribe: subscribe(v1)(v2)
                              });
                          }))();
                      });
                  });
              });
          };
      };
  };
  exports["runUI"] = runUI;
})(PS["Halogen.Aff.Driver"] = PS["Halogen.Aff.Driver"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Monad_Except = PS["Control.Monad.Except"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Either = PS["Data.Either"];
  var Data_Nullable = PS["Data.Nullable"];
  var Data_Foreign = PS["Data.Foreign"];
  var DOM = PS["DOM"];
  var DOM_Event_EventTarget = PS["DOM.Event.EventTarget"];
  var DOM_HTML_Event_EventTypes = PS["DOM.HTML.Event.EventTypes"];
  var DOM_HTML = PS["DOM.HTML"];
  var DOM_HTML_Types = PS["DOM.HTML.Types"];
  var DOM_HTML_Window = PS["DOM.HTML.Window"];
  var DOM_Node_ParentNode = PS["DOM.Node.ParentNode"];
  var Halogen_Aff_Effects = PS["Halogen.Aff.Effects"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_Unit = PS["Data.Unit"];        
  var selectElement = function (query) {
      return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Nullable.toMaybe)(Control_Bind.bindFlipped(Control_Monad_Eff.bindEff)(Control_Bind.composeKleisliFlipped(Control_Monad_Eff.bindEff)(function ($8) {
          return DOM_Node_ParentNode.querySelector(query)(DOM_HTML_Types.htmlDocumentToParentNode($8));
      })(DOM_HTML_Window.document))(DOM_HTML.window))))(function (v) {
          return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)((function () {
              if (v instanceof Data_Maybe.Nothing) {
                  return Data_Maybe.Nothing.value;
              };
              if (v instanceof Data_Maybe.Just) {
                  return Data_Either.either(Data_Function["const"](Data_Maybe.Nothing.value))(Data_Maybe.Just.create)(Control_Monad_Except.runExcept(DOM_HTML_Types.readHTMLElement(Data_Foreign.toForeign(v.value0))));
              };
              throw new Error("Failed pattern match at Halogen.Aff.Util line 54, column 8 - line 56, column 88: " + [ v.constructor.name ]);
          })());
      });
  };
  var runHalogenAff = function ($9) {
      return Data_Functor["void"](Control_Monad_Eff.functorEff)(Control_Monad_Aff.runAff(Control_Monad_Eff_Exception.throwException)(Data_Function["const"](Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit)))($9));
  };
  var awaitLoad = Control_Monad_Aff.makeAff(function (v) {
      return function (callback) {
          return Control_Monad_Eff_Class.liftEff(Control_Monad_Eff_Class.monadEffEff)(function __do() {
              var $10 = DOM_HTML.window();
              return DOM_Event_EventTarget.addEventListener(DOM_HTML_Event_EventTypes.load)(DOM_Event_EventTarget.eventListener(function (v1) {
                  return callback(Data_Unit.unit);
              }))(false)(DOM_HTML_Types.windowToEventTarget($10))();
          });
      };
  });
  var awaitBody = Control_Bind.bind(Control_Monad_Aff.bindAff)(awaitLoad)(function () {
      return Control_Bind.bindFlipped(Control_Monad_Aff.bindAff)(Data_Maybe.maybe(Control_Monad_Error_Class.throwError(Control_Monad_Aff.monadErrorAff)(Control_Monad_Eff_Exception.error("Could not find body")))(Control_Applicative.pure(Control_Monad_Aff.applicativeAff)))(selectElement("body"));
  });
  exports["awaitBody"] = awaitBody;
  exports["awaitLoad"] = awaitLoad;
  exports["runHalogenAff"] = runHalogenAff;
  exports["selectElement"] = selectElement;
})(PS["Halogen.Aff.Util"] = PS["Halogen.Aff.Util"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_MediaType = PS["Data.MediaType"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_String = PS["Data.String"];
  var DOM_HTML_Indexed = PS["DOM.HTML.Indexed"];
  var DOM_HTML_Indexed_ButtonType = PS["DOM.HTML.Indexed.ButtonType"];
  var DOM_HTML_Indexed_FormMethod = PS["DOM.HTML.Indexed.FormMethod"];
  var DOM_HTML_Indexed_InputType = PS["DOM.HTML.Indexed.InputType"];
  var DOM_HTML_Indexed_MenuitemType = PS["DOM.HTML.Indexed.MenuitemType"];
  var DOM_HTML_Indexed_MenuType = PS["DOM.HTML.Indexed.MenuType"];
  var DOM_HTML_Indexed_OnOff = PS["DOM.HTML.Indexed.OnOff"];
  var DOM_HTML_Indexed_OrderedListType = PS["DOM.HTML.Indexed.OrderedListType"];
  var DOM_HTML_Indexed_PreloadValue = PS["DOM.HTML.Indexed.PreloadValue"];
  var DOM_HTML_Indexed_StepValue = PS["DOM.HTML.Indexed.StepValue"];
  var DOM_Node_Types = PS["DOM.Node.Types"];
  var Halogen_HTML_Core = PS["Halogen.HTML.Core"];
  var Halogen_Query_InputF = PS["Halogen.Query.InputF"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var prop = function (dictIsProp) {
      return Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Core.prop(dictIsProp));
  };                                                          
  var title = prop(Halogen_HTML_Core.stringIsProp)("title");
  var type_ = function (dictIsProp) {
      return prop(dictIsProp)("type");
  };
  var value = prop(Halogen_HTML_Core.stringIsProp)("value");  
  var placeholder = prop(Halogen_HTML_Core.stringIsProp)("placeholder");
  var id_ = prop(Halogen_HTML_Core.stringIsProp)("id");    
  var $$for = prop(Halogen_HTML_Core.stringIsProp)("htmlFor");
  var class_ = function ($9) {
      return prop(Halogen_HTML_Core.stringIsProp)("className")(Data_Newtype.unwrap(Halogen_HTML_Core.newtypeClassName)($9));
  };
  var checked = prop(Halogen_HTML_Core.booleanIsProp)("checked");
  exports["checked"] = checked;
  exports["class_"] = class_;
  exports["for"] = $$for;
  exports["id_"] = id_;
  exports["placeholder"] = placeholder;
  exports["prop"] = prop;
  exports["title"] = title;
  exports["type_"] = type_;
  exports["value"] = value;
})(PS["Halogen.HTML.Properties"] = PS["Halogen.HTML.Properties"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Tuple = PS["Data.Tuple"];
  var DOM_HTML_Indexed = PS["DOM.HTML.Indexed"];
  var Halogen_HTML_Core = PS["Halogen.HTML.Core"];
  var Halogen_HTML_Properties = PS["Halogen.HTML.Properties"];
  var Halogen_Query_InputF = PS["Halogen.Query.InputF"];
  var Halogen_VDom = PS["Halogen.VDom"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];
  var Halogen_VDom_Types = PS["Halogen.VDom.Types"];              
  var element = Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Core.element);
  var input = function (props) {
      return element("input")(props)([  ]);
  };                   
  var label = element("label");
  var span = element("span");
  var table = element("table");
  var table_ = table([  ]);
  var tbody = element("tbody");
  var tbody_ = tbody([  ]);
  var td = element("td");
  var td_ = td([  ]);      
  var th = element("th");
  var th_ = th([  ]);
  var thead = element("thead");
  var thead_ = thead([  ]);
  var tr = element("tr");
  var tr_ = tr([  ]);
  var div = element("div");
  var div_ = div([  ]);
  var button = element("button");
  exports["button"] = button;
  exports["div"] = div;
  exports["div_"] = div_;
  exports["element"] = element;
  exports["input"] = input;
  exports["label"] = label;
  exports["span"] = span;
  exports["table"] = table;
  exports["table_"] = table_;
  exports["tbody"] = tbody;
  exports["tbody_"] = tbody_;
  exports["td"] = td;
  exports["td_"] = td_;
  exports["th"] = th;
  exports["th_"] = th_;
  exports["thead"] = thead;
  exports["thead_"] = thead_;
  exports["tr"] = tr;
  exports["tr_"] = tr_;
})(PS["Halogen.HTML.Elements"] = PS["Halogen.HTML.Elements"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Monad_Except = PS["Control.Monad.Except"];
  var Data_List = PS["Data.List"];
  var Data_Map = PS["Data.Map"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Either = PS["Data.Either"];
  var Data_Foreign = PS["Data.Foreign"];
  var DOM_HTML_Types = PS["DOM.HTML.Types"];
  var Halogen_Component_ChildPath = PS["Halogen.Component.ChildPath"];
  var Halogen_Query_EventSource = PS["Halogen.Query.EventSource"];
  var Halogen_Query_HalogenM = PS["Halogen.Query.HalogenM"];
  var Control_Parallel = PS["Control.Parallel"];
  var Control_Monad_Aff_Class = PS["Control.Monad.Aff.Class"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Monad_State_Class = PS["Control.Monad.State.Class"];
  var Control_Monad_Trans_Class = PS["Control.Monad.Trans.Class"];
  var Halogen_Query_InputF = PS["Halogen.Query.InputF"];
  var Control_Category = PS["Control.Category"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Functor = PS["Data.Functor"];
  var Data_List_Types = PS["Data.List.Types"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Function = PS["Data.Function"];
  var Data_Unit = PS["Data.Unit"];
  var action = function (act) {
      return act(Data_Unit.unit);
  };
  exports["action"] = action;
})(PS["Halogen.Query"] = PS["Halogen.Query"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Monad_Except = PS["Control.Monad.Except"];
  var Data_Either = PS["Data.Either"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Foreign_Class = PS["Data.Foreign.Class"];
  var Data_Maybe = PS["Data.Maybe"];
  var DOM_Event_Types = PS["DOM.Event.Types"];
  var DOM_Event_Event = PS["DOM.Event.Event"];
  var DOM_HTML_Event_Types = PS["DOM.HTML.Event.Types"];
  var Halogen_Query = PS["Halogen.Query"];
  var Halogen_Query_InputF = PS["Halogen.Query.InputF"];
  var Halogen_HTML_Core = PS["Halogen.HTML.Core"];
  var Halogen_HTML_Properties = PS["Halogen.HTML.Properties"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];
  var Data_Function = PS["Data.Function"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Foreign_Index = PS["Data.Foreign.Index"];        
  var mouseHandler = Unsafe_Coerce.unsafeCoerce;
  var input_ = function (f) {
      return function (v) {
          return Data_Maybe.Just.create(Halogen_Query.action(f));
      };
  };
  var input = function (f) {
      return function (x) {
          return Data_Maybe.Just.create(Halogen_Query.action(f(x)));
      };
  };
  var handler = function (et) {
      return function ($2) {
          return Unsafe_Coerce.unsafeCoerce(Halogen_HTML_Core.handler)(et)(Data_Functor.map(Data_Functor.functorFn)(Data_Functor.map(Data_Maybe.functorMaybe)(Halogen_Query_InputF.Query.create))($2));
      };
  };                               
  var onClick = function ($3) {
      return handler("click")(mouseHandler($3));
  };
  var addForeignPropHandler = function (dictIsForeign) {
      return function (key) {
          return function (prop) {
              return function (f) {
                  return handler(key)(function ($28) {
                      return Data_Either.either(Data_Function["const"](Data_Maybe.Nothing.value))(f)(Control_Monad_Except.runExcept(Data_Foreign_Class.readProp(dictIsForeign)(Data_Foreign_Index.indexString)(prop)(Data_Foreign.toForeign(DOM_Event_Event.currentTarget($28)))));
                  });
              };
          };
      };
  };
  var onChecked = addForeignPropHandler(Data_Foreign_Class.booleanIsForeign)("change")("checked"); 
  var onValueInput = addForeignPropHandler(Data_Foreign_Class.stringIsForeign)("input")("value");
  exports["handler"] = handler;
  exports["input"] = input;
  exports["input_"] = input_;
  exports["onChecked"] = onChecked;
  exports["onClick"] = onClick;
  exports["onValueInput"] = onValueInput;
})(PS["Halogen.HTML.Events"] = PS["Halogen.HTML.Events"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Data_Array = PS["Data.Array"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Data_Tuple = PS["Data.Tuple"];
  var DOM = PS["DOM"];
  var DOM_Node_Types = PS["DOM.Node.Types"];
  var Halogen_VDom_Machine = PS["Halogen.VDom.Machine"];
  var Halogen_VDom_Types = PS["Halogen.VDom.Types"];
  var Halogen_VDom_Util = PS["Halogen.VDom.Util"];
  var Data_Eq = PS["Data.Eq"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Applicative = PS["Control.Applicative"];
  var eqElemSpec = function (a, b) {
      if (Data_Eq.eq(Halogen_VDom_Types.eqElemName)(a.value1)(b.value1)) {
          if (a.value0 instanceof Data_Maybe.Just && (b.value0 instanceof Data_Maybe.Just && a.value0.value0 === b.value0.value0)) {
              return true;
          };
          if (a.value0 instanceof Data_Maybe.Nothing && b.value0 instanceof Data_Maybe.Nothing) {
              return true;
          };
          return false;
      };
      return false;
  };
  var buildWidget = function (v) {
      var patch = function (v1) {
          return function (v2) {
              if (v2 instanceof Halogen_VDom_Types.Grafted) {
                  return patch(v1)(Halogen_VDom_Types.runGraft(v2.value0));
              };
              if (v2 instanceof Halogen_VDom_Types.Widget) {
                  return function __do() {
                      var v3 = v1.value1(v2.value0)();
                      return new Halogen_VDom_Machine.Step(v3.value0, patch(v3), v3.value2);
                  };
              };
              return function __do() {
                  v1.value2();
                  return buildVDom(v)(v2)();
              };
          };
      };
      var render = function (w) {
          return function __do() {
              var v1 = v.buildWidget(v)(w)();
              return new Halogen_VDom_Machine.Step(v1.value0, patch(v1), v1.value2);
          };
      };
      return render;
  };
  var buildVDom = function (spec) {
      var render = function (v) {
          if (v instanceof Halogen_VDom_Types.Text) {
              return buildText(spec)(v.value0);
          };
          if (v instanceof Halogen_VDom_Types.Elem) {
              return buildElem(spec)(v.value0)(v.value1);
          };
          if (v instanceof Halogen_VDom_Types.Keyed) {
              return buildKeyed(spec)(v.value0)(v.value1);
          };
          if (v instanceof Halogen_VDom_Types.Widget) {
              return buildWidget(spec)(v.value0);
          };
          if (v instanceof Halogen_VDom_Types.Grafted) {
              return buildVDom(spec)(Halogen_VDom_Types.runGraft(v.value0));
          };
          throw new Error("Failed pattern match at Halogen.VDom.DOM line 58, column 12 - line 63, column 44: " + [ v.constructor.name ]);
      };
      return render;
  };
  var buildText = function (v) {
      var done = function (node) {
          return function __do() {
              var v1 = Halogen_VDom_Util.unsafeParent(node);
              return Halogen_VDom_Util.removeChild(node, v1)();
          };
      };
      var patch = function (node, s1) {
          return function (v1) {
              if (v1 instanceof Halogen_VDom_Types.Grafted) {
                  return patch(node, s1)(Halogen_VDom_Types.runGraft(v1.value0));
              };
              if (v1 instanceof Halogen_VDom_Types.Text) {
                  var res = new Halogen_VDom_Machine.Step(node, patch(node, v1.value0), done(node));
                  var $87 = s1 === v1.value0;
                  if ($87) {
                      return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(res);
                  };
                  return function __do() {
                      Halogen_VDom_Util.setTextContent(v1.value0, node)();
                      return res;
                  };
              };
              return function __do() {
                  done(node)();
                  return buildVDom(v)(v1)();
              };
          };
      };
      var render = function (s) {
          return function __do() {
              var v1 = Halogen_VDom_Util.createTextNode(s, v.document)();
              return new Halogen_VDom_Machine.Step(v1, patch(v1, s), done(v1));
          };
      };
      return render;
  };
  var buildKeyed = function (v) {
      var done = function (node, attrs, steps) {
          return function __do() {
              var v1 = Halogen_VDom_Util.unsafeParent(node);
              Halogen_VDom_Util.removeChild(node, v1)();
              Halogen_VDom_Util.forInE(steps, function (v2, v3) {
                  return v3.value2;
              })();
              return Halogen_VDom_Machine.halt(attrs)();
          };
      };
      var patch = function (node, attrs, v1, ch1, len1) {
          return function (v2) {
              if (v2 instanceof Halogen_VDom_Types.Grafted) {
                  return patch(node, attrs, v1, ch1, len1)(Halogen_VDom_Types.runGraft(v2.value0));
              };
              if (v2 instanceof Halogen_VDom_Types.Keyed && eqElemSpec(v1, v2.value0)) {
                  var $101 = Data_Array.length(v2.value1);
                  if (len1 === 0 && $101 === 0) {
                      return function __do() {
                          var v3 = Halogen_VDom_Machine.step(attrs)(v2.value0.value2)();
                          return new Halogen_VDom_Machine.Step(node, patch(node, v3, v2.value0, ch1, 0), done(node, v3, ch1));
                      };
                  };
                  var onThis = function (k, v3) {
                      return v3.value2;
                  };
                  var onThese = function (k, ix$prime, v3, v4) {
                      return function __do() {
                          var v5 = v3.value1(v4.value1)();
                          Halogen_VDom_Util.insertChildIx(ix$prime, v5.value0, node)();
                          return v5;
                      };
                  };
                  var onThat = function (k, ix, v3) {
                      return function __do() {
                          var v4 = buildVDom(v)(v3.value1)();
                          Halogen_VDom_Util.insertChildIx(ix, v4.value0, node)();
                          return v4;
                      };
                  };
                  return function __do() {
                      var v3 = Halogen_VDom_Util.diffWithKeyAndIxE(ch1, v2.value1, Data_Tuple.fst, onThese, onThis, onThat)();
                      var v4 = Halogen_VDom_Machine.step(attrs)(v2.value0.value2)();
                      return new Halogen_VDom_Machine.Step(node, patch(node, v4, v2.value0, v3, $101), done(node, v4, v3));
                  };
              };
              return function __do() {
                  done(node, attrs, ch1)();
                  return buildVDom(v)(v2)();
              };
          };
      };
      var render = function (v1) {
          return function (ch1) {
              return function __do() {
                  var v2 = Halogen_VDom_Util.createElement(Data_Nullable.toNullable(v1.value0), v1.value1, v.document)();
                  var node = DOM_Node_Types.elementToNode(v2);
                  var onChild = function (k, ix, v3) {
                      return function __do() {
                          var v4 = buildVDom(v)(v3.value1)();
                          Halogen_VDom_Util.insertChildIx(ix, v4.value0, node)();
                          return v4;
                      };
                  };
                  var v3 = Halogen_VDom_Util.strMapWithIxE(ch1, Data_Tuple.fst, onChild)();
                  var v4 = v.buildAttributes(v2)(v1.value2)();
                  return new Halogen_VDom_Machine.Step(node, patch(node, v4, v1, v3, Data_Array.length(ch1)), done(node, v4, v3));
              };
          };
      };
      return render;
  };
  var buildElem = function (v) {
      var done = function (node, attrs, steps) {
          return function __do() {
              var v1 = Halogen_VDom_Util.unsafeParent(node);
              Halogen_VDom_Util.removeChild(node, v1)();
              Control_Monad_Eff.foreachE(steps)(Halogen_VDom_Machine.halt)();
              return Halogen_VDom_Machine.halt(attrs)();
          };
      };
      var patch = function (node, attrs, v1, ch1) {
          return function (v2) {
              if (v2 instanceof Halogen_VDom_Types.Grafted) {
                  return patch(node, attrs, v1, ch1)(Halogen_VDom_Types.runGraft(v2.value0));
              };
              if (v2 instanceof Halogen_VDom_Types.Elem && eqElemSpec(v1, v2.value0)) {
                  var $155 = Data_Array.length(ch1);
                  var $156 = Data_Array.length(v2.value1);
                  if ($155 === 0 && $156 === 0) {
                      return function __do() {
                          var v3 = Halogen_VDom_Machine.step(attrs)(v2.value0.value2)();
                          return new Halogen_VDom_Machine.Step(node, patch(node, v3, v2.value0, ch1), done(node, v3, ch1));
                      };
                  };
                  var onThis = function (ix, v3) {
                      return v3.value2;
                  };
                  var onThese = function (ix, v3, vdom) {
                      return function __do() {
                          var v4 = v3.value1(vdom)();
                          Halogen_VDom_Util.insertChildIx(ix, v4.value0, node)();
                          return v4;
                      };
                  };
                  var onThat = function (ix, vdom) {
                      return function __do() {
                          var v3 = buildVDom(v)(vdom)();
                          Halogen_VDom_Util.insertChildIx(ix, v3.value0, node)();
                          return v3;
                      };
                  };
                  return function __do() {
                      var v3 = Halogen_VDom_Util.diffWithIxE(ch1, v2.value1, onThese, onThis, onThat)();
                      var v4 = Halogen_VDom_Machine.step(attrs)(v2.value0.value2)();
                      return new Halogen_VDom_Machine.Step(node, patch(node, v4, v2.value0, v3), done(node, v4, v3));
                  };
              };
              return function __do() {
                  done(node, attrs, ch1)();
                  return buildVDom(v)(v2)();
              };
          };
      };
      var render = function (v1) {
          return function (ch1) {
              return function __do() {
                  var v2 = Halogen_VDom_Util.createElement(Data_Nullable.toNullable(v1.value0), v1.value1, v.document)();
                  var node = DOM_Node_Types.elementToNode(v2);
                  var onChild = function (ix, child) {
                      return function __do() {
                          var v3 = buildVDom(v)(child)();
                          Halogen_VDom_Util.insertChildIx(ix, v3.value0, node)();
                          return v3;
                      };
                  };
                  var v3 = Halogen_VDom_Util.forE(ch1, onChild)();
                  var v4 = v.buildAttributes(v2)(v1.value2)();
                  return new Halogen_VDom_Machine.Step(node, patch(node, v4, v1, v3), done(node, v4, v3));
              };
          };
      };
      return render;
  };
  exports["buildElem"] = buildElem;
  exports["buildKeyed"] = buildKeyed;
  exports["buildText"] = buildText;
  exports["buildVDom"] = buildVDom;
  exports["buildWidget"] = buildWidget;
})(PS["Halogen.VDom.DOM"] = PS["Halogen.VDom.DOM"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Monad_Eff_Ref = PS["Control.Monad.Eff.Ref"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var DOM = PS["DOM"];
  var DOM_HTML = PS["DOM.HTML"];
  var DOM_HTML_Types = PS["DOM.HTML.Types"];
  var DOM_HTML_Window = PS["DOM.HTML.Window"];
  var DOM_Node_Node = PS["DOM.Node.Node"];
  var DOM_Node_Types = PS["DOM.Node.Types"];
  var Halogen_Aff_Driver = PS["Halogen.Aff.Driver"];
  var Halogen_Aff_Driver_State = PS["Halogen.Aff.Driver.State"];
  var Halogen_Aff_Effects = PS["Halogen.Aff.Effects"];
  var Halogen_Component = PS["Halogen.Component"];
  var Halogen_HTML_Core = PS["Halogen.HTML.Core"];
  var Halogen_Query_InputF = PS["Halogen.Query.InputF"];
  var Halogen_VDom = PS["Halogen.VDom"];
  var Halogen_VDom_DOM_Prop = PS["Halogen.VDom.DOM.Prop"];
  var Unsafe_Reference = PS["Unsafe.Reference"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_Unit = PS["Data.Unit"];
  var Control_Bind = PS["Control.Bind"];
  var Halogen_VDom_Machine = PS["Halogen.VDom.Machine"];
  var Halogen_VDom_DOM = PS["Halogen.VDom.DOM"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Control_Category = PS["Control.Category"];
  var substInParent = function (v) {
      return function (v1) {
          return function (v2) {
              if (v1 instanceof Data_Maybe.Just && v2 instanceof Data_Maybe.Just) {
                  return Data_Functor["void"](Control_Monad_Eff.functorEff)(DOM_Node_Node.insertBefore(v)(v1.value0)(v2.value0));
              };
              if (v1 instanceof Data_Maybe.Nothing && v2 instanceof Data_Maybe.Just) {
                  return Data_Functor["void"](Control_Monad_Eff.functorEff)(DOM_Node_Node.appendChild(v)(v2.value0));
              };
              return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit);
          };
      };
  };
  var removeChild = function (v) {
      return function __do() {
          var v1 = DOM_Node_Node.parentNode(v.node)();
          return Data_Foldable.traverse_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableMaybe)(function (pn) {
              return DOM_Node_Node.removeChild(v.node)(pn);
          })(Data_Nullable.toMaybe(v1))();
      };
  };
  var mkSpec = function (handler) {
      return function (renderChildRef) {
          return function (document) {
              var done = Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit);
              var patch = function (slot) {
                  return function __do() {
                      var v = Control_Monad_Eff_Ref.readRef(renderChildRef)();
                      var v1 = v(slot)();
                      var node = Halogen_Aff_Driver_State.unRenderStateX(function (v2) {
                          return v2.node;
                      })(v1);
                      return new Halogen_VDom_Machine.Step(node, patch, done);
                  };
              };
              var buildWidget = function (spec) {
                  return function (slot) {
                      return function __do() {
                          var v = Control_Monad_Eff_Ref.readRef(renderChildRef)();
                          var v1 = v(slot)();
                          var node = Halogen_Aff_Driver_State.unRenderStateX(function (v2) {
                              return v2.node;
                          })(v1);
                          return new Halogen_VDom_Machine.Step(node, patch, done);
                      };
                  };
              };
              var buildAttributes = Halogen_VDom_DOM_Prop.buildProp(handler);
              return {
                  buildWidget: buildWidget, 
                  buildAttributes: buildAttributes, 
                  document: document
              };
          };
      };
  };
  var renderSpec = function (document) {
      return function (container) {
          var render = function (handler) {
              return function (child) {
                  return function (v) {
                      return function (v1) {
                          if (v1 instanceof Data_Maybe.Nothing) {
                              return function __do() {
                                  var v2 = Control_Monad_Eff_Ref.newRef(child)();
                                  var spec = mkSpec(handler)(v2)(document);
                                  var v3 = Halogen_VDom_DOM.buildVDom(spec)(v)();
                                  var node = Halogen_VDom_Machine.extract(v3);
                                  DOM_Node_Node.appendChild(node)(DOM_HTML_Types.htmlElementToNode(container))();
                                  return {
                                      machine: v3, 
                                      node: node, 
                                      renderChildRef: v2
                                  };
                              };
                          };
                          if (v1 instanceof Data_Maybe.Just) {
                              return function __do() {
                                  Control_Monad_Eff_Ref.writeRef(v1.value0.renderChildRef)(child)();
                                  var v2 = DOM_Node_Node.parentNode(v1.value0.node)();
                                  var v3 = DOM_Node_Node.nextSibling(v1.value0.node)();
                                  var v4 = Halogen_VDom_Machine.step(v1.value0.machine)(v)();
                                  var newNode = Halogen_VDom_Machine.extract(v4);
                                  Control_Applicative.when(Control_Monad_Eff.applicativeEff)(Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraFunction(Data_HeytingAlgebra.heytingAlgebraFunction(Data_HeytingAlgebra.heytingAlgebraBoolean)))(Unsafe_Reference.unsafeRefEq)(v1.value0.node)(newNode))(substInParent(newNode)(Data_Nullable.toMaybe(v3))(Data_Nullable.toMaybe(v2)))();
                                  return {
                                      machine: v4, 
                                      node: newNode, 
                                      renderChildRef: v1.value0.renderChildRef
                                  };
                              };
                          };
                          throw new Error("Failed pattern match at Halogen.VDom.Driver line 119, column 5 - line 135, column 80: " + [ v1.constructor.name ]);
                      };
                  };
              };
          };
          return {
              render: render, 
              renderChild: Control_Category.id(Control_Category.categoryFn), 
              removeChild: removeChild
          };
      };
  };
  var runUI = function (component) {
      return function (i) {
          return function (element) {
              return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Data_Functor.map(Control_Monad_Eff.functorEff)(DOM_HTML_Types.htmlDocumentToDocument)(Control_Bind.bindFlipped(Control_Monad_Eff.bindEff)(DOM_HTML_Window.document)(DOM_HTML.window))))(function (v) {
                  return Halogen_Aff_Driver.runUI(renderSpec(v)(element))(component)(i);
              });
          };
      };
  };
  exports["runUI"] = runUI;
})(PS["Halogen.VDom.Driver"] = PS["Halogen.VDom.Driver"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Either = PS["Data.Either"];
  var Data_List = PS["Data.List"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_String = PS["Data.String"];
  var ModulusCheckTypes = PS["ModulusCheckTypes"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Function = PS["Data.Function"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Eq = PS["Data.Eq"];
  var shiftAccountNumberRight = function (digits) {
      return Data_List.concat(new Data_List_Types.Cons(Data_List.take(6)(digits), new Data_List_Types.Cons(new Data_List_Types.Cons(0, Data_List_Types.Nil.value), new Data_List_Types.Cons(Data_List.take(7)(Data_List.drop(6)(digits)), Data_List_Types.Nil.value))));
  };
  var getDigit = function (code) {
      return function (digits) {
          var toEither = function (v) {
              if (v instanceof Data_Maybe.Nothing) {
                  return Data_Either.Left.create("Implementation error: char index " + (Data_Show.show(Data_Show.showChar)(code) + (" is not valid for digits: " + Data_Show.show(Data_List_Types.showList(Data_Show.showInt))(digits))));
              };
              if (v instanceof Data_Maybe.Just) {
                  return new Data_Either.Right(v.value0);
              };
              throw new Error("Failed pattern match at ModulusCheck.Data.AccountNumber line 46, column 5 - line 46, column 128: " + [ v.constructor.name ]);
          };
          return toEither(Control_Bind.bind(Data_Maybe.bindMaybe)(Data_String.indexOf(Data_String.singleton(code))("uvwxyzabcdefgh"))(function (v) {
              return Data_List.index(digits)(v);
          }));
      };
  };
  var expectedDigitsLength = 14;
  var replacePrefix = function (newPrefix) {
      return function (x) {
          var replacementLength = Data_List.length(newPrefix);
          var newDigits = (function () {
              if (replacementLength > expectedDigitsLength) {
                  return Data_Either.Left.create("Implementation error: cannot replace with new prefix: " + (Data_Show.show(Data_List_Types.showList(Data_Show.showInt))(newPrefix) + ("in " + Data_Show.show(Data_List_Types.showList(Data_Show.showInt))(x))));
              };
              if (Data_Boolean.otherwise) {
                  return Data_Either.Right.create(Data_List.concat(new Data_List_Types.Cons(newPrefix, new Data_List_Types.Cons(Data_List.drop(replacementLength)(x), Data_List_Types.Nil.value))));
              };
              throw new Error("Failed pattern match at ModulusCheck.Data.AccountNumber line 54, column 5 - line 56, column 111: " + [  ]);
          })();
          return newDigits;
      };
  };
  var accountNumber = function (sortCodeString) {
      return function (digits) {
          return {
              sortCodeString: sortCodeString, 
              digits: digits
          };
      };
  };
  exports["accountNumber"] = accountNumber;
  exports["getDigit"] = getDigit;
  exports["replacePrefix"] = replacePrefix;
  exports["shiftAccountNumberRight"] = shiftAccountNumberRight;
})(PS["ModulusCheck.Data.AccountNumber"] = PS["ModulusCheck.Data.AccountNumber"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_List = PS["Data.List"];
  var Data_Show = PS["Data.Show"];
  var Data_Functor = PS["Data.Functor"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Function = PS["Data.Function"];
  var Data_Semigroup = PS["Data.Semigroup"];        
  var DblAl = (function () {
      function DblAl() {

      };
      DblAl.value = new DblAl();
      return DblAl;
  })();
  var Mod10 = (function () {
      function Mod10() {

      };
      Mod10.value = new Mod10();
      return Mod10;
  })();
  var Mod11 = (function () {
      function Mod11() {

      };
      Mod11.value = new Mod11();
      return Mod11;
  })();
  var zeroiseUtoB = function (row) {
      var zeroPrefix = Data_Functor.map(Data_List_Types.functorList)(Data_Function["const"](0))(Data_List.range(1)(8));
      var drop8 = Data_List.drop(8)(row.weights);
      var $2 = {};
      for (var $3 in row) {
          if ({}.hasOwnProperty.call(row, $3)) {
              $2[$3] = row[$3];
          };
      };
      $2.weights = Data_List.concat(new Data_List_Types.Cons(zeroPrefix, new Data_List_Types.Cons(drop8, Data_List_Types.Nil.value)));
      return $2;
  };
  var checkRow = function (from) {
      return function (to) {
          return function (checkMethod) {
              return function (weights) {
                  return function (exceptionCode) {
                      return {
                          from: from, 
                          to: to, 
                          checkMethod: checkMethod, 
                          weights: weights, 
                          exceptionCode: exceptionCode
                      };
                  };
              };
          };
      };
  };
  exports["DblAl"] = DblAl;
  exports["Mod10"] = Mod10;
  exports["Mod11"] = Mod11;
  exports["checkRow"] = checkRow;
  exports["zeroiseUtoB"] = zeroiseUtoB;
})(PS["ModulusCheck.Data.CheckRow"] = PS["ModulusCheck.Data.CheckRow"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_String = PS["Data.String"];
  var Data_Show = PS["Data.Show"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Eq = PS["Data.Eq"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Ring = PS["Data.Ring"];
  var Data_EuclideanRing = PS["Data.EuclideanRing"];
  var updatePosString = function (pos$prime) {
      return function (str) {
          var updatePosChar = function (v) {
              return function (c) {
                  if (c === "\x0a") {
                      return {
                          line: v.line + 1 | 0, 
                          column: 1
                      };
                  };
                  if (c === "\x0d") {
                      return {
                          line: v.line + 1 | 0, 
                          column: 1
                      };
                  };
                  if (c === "\x09") {
                      return {
                          line: v.line, 
                          column: (v.column + 8 | 0) - (v.column - 1 | 0) % 8 | 0
                      };
                  };
                  return {
                      line: v.line, 
                      column: v.column + 1 | 0
                  };
              };
          };
          return Data_Foldable.foldl(Data_Foldable.foldableArray)(updatePosChar)(pos$prime)(Data_String.split(Data_Newtype.wrap(Data_String.newtypePattern)(""))(str));
      };
  }; 
  var initialPos = {
      line: 1, 
      column: 1
  };
  exports["initialPos"] = initialPos;
  exports["updatePosString"] = updatePosString;
})(PS["Text.Parsing.Parser.Pos"] = PS["Text.Parsing.Parser.Pos"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_Monad_Except = PS["Control.Monad.Except"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_Monad_State = PS["Control.Monad.State"];
  var Control_Monad_Trans_Class = PS["Control.Monad.Trans.Class"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Data_Either = PS["Data.Either"];
  var Data_Identity = PS["Data.Identity"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Tuple = PS["Data.Tuple"];
  var Text_Parsing_Parser_Pos = PS["Text.Parsing.Parser.Pos"];
  var Data_Show = PS["Data.Show"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Eq = PS["Data.Eq"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Functor = PS["Data.Functor"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Monad_State_Class = PS["Control.Monad.State.Class"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Monad_State_Trans = PS["Control.Monad.State.Trans"];
  var Control_Plus = PS["Control.Plus"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_MonadZero = PS["Control.MonadZero"];        
  var ParseState = (function () {
      function ParseState(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      ParseState.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new ParseState(value0, value1, value2);
              };
          };
      };
      return ParseState;
  })();
  var ParseError = (function () {
      function ParseError(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ParseError.create = function (value0) {
          return function (value1) {
              return new ParseError(value0, value1);
          };
      };
      return ParseError;
  })();
  var ParserT = function (x) {
      return x;
  }; 
  var parseErrorPosition = function (v) {
      return v.value1;
  };
  var parseErrorMessage = function (v) {
      return v.value0;
  };
  var newtypeParserT = new Data_Newtype.Newtype(function (n) {
      return n;
  }, ParserT);
  var runParserT = function (dictMonad) {
      return function (s) {
          return function (p) {
              var initialState = new ParseState(s, Text_Parsing_Parser_Pos.initialPos, false);
              return Control_Monad_State_Trans.evalStateT(((dictMonad["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]())(Control_Monad_Except_Trans.runExceptT(Data_Newtype.unwrap(newtypeParserT)(p)))(initialState);
          };
      };
  };
  var runParser = function (s) {
      return function ($86) {
          return Data_Newtype.unwrap(Data_Identity.newtypeIdentity)(runParserT(Data_Identity.monadIdentity)(s)($86));
      };
  }; 
  var monadStateParserT = function (dictMonad) {
      return Control_Monad_Except_Trans.monadStateExceptT(Control_Monad_State_Trans.monadStateStateT(dictMonad));
  };
  var monadErrorParserT = function (dictMonad) {
      return Control_Monad_Except_Trans.monadErrorExceptT(Control_Monad_State_Trans.monadStateT(dictMonad));
  };
  var lazyParserT = new Control_Lazy.Lazy(function (f) {
      return Control_Lazy.defer(Control_Monad_State_Trans.lazyStateT)(function ($88) {
          return Control_Monad_Except_Trans.runExceptT(Data_Newtype.unwrap(newtypeParserT)(f($88)));
      });
  });
  var functorParserT = function (dictFunctor) {
      return Control_Monad_Except_Trans.functorExceptT(Control_Monad_State_Trans.functorStateT(dictFunctor));
  };
  var bindParserT = function (dictMonad) {
      return Control_Monad_Except_Trans.bindExceptT(Control_Monad_State_Trans.monadStateT(dictMonad));
  };
  var fail = function (dictMonad) {
      return function (message) {
          return Control_Bind.bind(bindParserT(dictMonad))(Control_Monad_State_Class.gets(monadStateParserT(dictMonad))(function (v) {
              return v.value1;
          }))(function (v) {
              return Control_Monad_Error_Class.throwError(monadErrorParserT(dictMonad))(new ParseError(message, v));
          });
      };
  };
  var applyParserT = function (dictMonad) {
      return Control_Monad_Except_Trans.applyExceptT(Control_Monad_State_Trans.monadStateT(dictMonad));
  };
  var applicativeParserT = function (dictMonad) {
      return Control_Monad_Except_Trans.applicativeExceptT(Control_Monad_State_Trans.monadStateT(dictMonad));
  };
  var altParserT = function (dictMonad) {
      return new Control_Alt.Alt(function () {
          return functorParserT(((dictMonad["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]());
      }, function (p1) {
          return function (p2) {
              return ParserT(Control_Monad_Except_Trans.ExceptT(Control_Monad_State_Trans.StateT(function (v) {
                  return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(Control_Monad_State_Trans.runStateT(Control_Monad_Except_Trans.runExceptT(Data_Newtype.unwrap(newtypeParserT)(p1)))(new ParseState(v.value0, v.value1, false)))(function (v1) {
                      if (v1.value0 instanceof Data_Either.Left && !v1.value1.value2) {
                          return Control_Monad_State_Trans.runStateT(Control_Monad_Except_Trans.runExceptT(Data_Newtype.unwrap(newtypeParserT)(p2)))(v);
                      };
                      return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(new Data_Tuple.Tuple(v1.value0, v1.value1));
                  });
              })));
          };
      });
  };
  var plusParserT = function (dictMonad) {
      return new Control_Plus.Plus(function () {
          return altParserT(dictMonad);
      }, fail(dictMonad)("No alternative"));
  };
  var alternativeParserT = function (dictMonad) {
      return new Control_Alternative.Alternative(function () {
          return applicativeParserT(dictMonad);
      }, function () {
          return plusParserT(dictMonad);
      });
  };
  exports["ParseState"] = ParseState;
  exports["ParserT"] = ParserT;
  exports["fail"] = fail;
  exports["parseErrorMessage"] = parseErrorMessage;
  exports["parseErrorPosition"] = parseErrorPosition;
  exports["runParser"] = runParser;
  exports["runParserT"] = runParserT;
  exports["newtypeParserT"] = newtypeParserT;
  exports["lazyParserT"] = lazyParserT;
  exports["functorParserT"] = functorParserT;
  exports["applyParserT"] = applyParserT;
  exports["applicativeParserT"] = applicativeParserT;
  exports["bindParserT"] = bindParserT;
  exports["monadStateParserT"] = monadStateParserT;
  exports["monadErrorParserT"] = monadErrorParserT;
  exports["altParserT"] = altParserT;
  exports["plusParserT"] = plusParserT;
  exports["alternativeParserT"] = alternativeParserT;
})(PS["Text.Parsing.Parser"] = PS["Text.Parsing.Parser"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Monad_Except = PS["Control.Monad.Except"];
  var Control_Monad_State = PS["Control.Monad.State"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Either = PS["Data.Either"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_List = PS["Data.List"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Tuple = PS["Data.Tuple"];
  var Text_Parsing_Parser = PS["Text.Parsing.Parser"];
  var Control_Alt = PS["Control.Alt"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Control_Monad_State_Trans = PS["Control.Monad.State.Trans"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_Unit = PS["Data.Unit"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Function = PS["Data.Function"];
  var Control_Apply = PS["Control.Apply"];
  var Data_Functor = PS["Data.Functor"];        
  var withErrorMessage = function (dictMonad) {
      return function (p) {
          return function (msg) {
              return Control_Alt.alt(Text_Parsing_Parser.altParserT(dictMonad))(p)(Text_Parsing_Parser.fail(dictMonad)("Expected " + msg));
          };
      };
  };
  var $$try = function (dictMonad) {
      return function (p) {
          return Text_Parsing_Parser.ParserT(Control_Monad_Except_Trans.ExceptT(Control_Monad_State_Trans.StateT(function (v) {
              return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(Control_Monad_State_Trans.runStateT(Control_Monad_Except_Trans.runExceptT(Data_Newtype.unwrap(Text_Parsing_Parser.newtypeParserT)(p)))(v))(function (v1) {
                  if (v1.value0 instanceof Data_Either.Left) {
                      return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(new Data_Tuple.Tuple(v1.value0, new Text_Parsing_Parser.ParseState(v1.value1.value0, v1.value1.value1, v.value2)));
                  };
                  return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(new Data_Tuple.Tuple(v1.value0, v1.value1));
              });
          })));
      };
  };
  var sepEndBy1 = function (dictMonad) {
      return function (p) {
          return function (sep) {
              return Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(p)(function (v) {
                  return Control_Alt.alt(Text_Parsing_Parser.altParserT(dictMonad))(Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(sep)(function (v1) {
                      return Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(sepEndBy(dictMonad)(p)(sep))(function (v2) {
                          return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(new Data_List_Types.Cons(v, v2));
                      });
                  }))(Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(Data_List.singleton(v)));
              });
          };
      };
  };
  var sepEndBy = function (dictMonad) {
      return function (p) {
          return function (sep) {
              return Control_Alt.alt(Text_Parsing_Parser.altParserT(dictMonad))(sepEndBy1(dictMonad)(p)(sep))(Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(Data_List_Types.Nil.value));
          };
      };
  };
  var optional = function (dictMonad) {
      return function (p) {
          return Control_Alt.alt(Text_Parsing_Parser.altParserT(dictMonad))(Data_Functor["void"](Text_Parsing_Parser.functorParserT(((dictMonad["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]()))(p))(Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(Data_Unit.unit));
      };
  };
  var option = function (dictMonad) {
      return function (a) {
          return function (p) {
              return Control_Alt.alt(Text_Parsing_Parser.altParserT(dictMonad))(p)(Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(a));
          };
      };
  };
  var optionMaybe = function (dictMonad) {
      return function (p) {
          return option(dictMonad)(Data_Maybe.Nothing.value)(Data_Functor.map(Text_Parsing_Parser.functorParserT(((dictMonad["__superclass_Control.Bind.Bind_1"]())["__superclass_Control.Apply.Apply_0"]())["__superclass_Data.Functor.Functor_0"]()))(Data_Maybe.Just.create)(p));
      };
  };
  exports["option"] = option;
  exports["optionMaybe"] = optionMaybe;
  exports["optional"] = optional;
  exports["sepEndBy"] = sepEndBy;
  exports["sepEndBy1"] = sepEndBy1;
  exports["try"] = $$try;
  exports["withErrorMessage"] = withErrorMessage;
})(PS["Text.Parsing.Parser.Combinators"] = PS["Text.Parsing.Parser.Combinators"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Data_String = PS["Data.String"];
  var Control_Monad_State = PS["Control.Monad.State"];
  var Data_Array = PS["Data.Array"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Newtype = PS["Data.Newtype"];
  var Text_Parsing_Parser = PS["Text.Parsing.Parser"];
  var Text_Parsing_Parser_Combinators = PS["Text.Parsing.Parser.Combinators"];
  var Text_Parsing_Parser_Pos = PS["Text.Parsing.Parser.Pos"];
  var Prelude = PS["Prelude"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_State_Class = PS["Control.Monad.State.Class"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_Function = PS["Data.Function"];
  var Data_Eq = PS["Data.Eq"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Functor = PS["Data.Functor"];        
  var StringLike = function (drop, indexOf, $$null, uncons) {
      this.drop = drop;
      this.indexOf = indexOf;
      this["null"] = $$null;
      this.uncons = uncons;
  };
  var uncons = function (dict) {
      return dict.uncons;
  };
  var stringLikeString = new StringLike(Data_String.drop, Data_String.indexOf, Data_String["null"], Data_String.uncons);
  var $$null = function (dict) {
      return dict["null"];
  };
  var indexOf = function (dict) {
      return dict.indexOf;
  };
  var eof = function (dictStringLike) {
      return function (dictMonad) {
          return Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(Control_Monad_State_Class.gets(Text_Parsing_Parser.monadStateParserT(dictMonad))(function (v) {
              return v.value0;
          }))(function (v) {
              return Control_Applicative.unless(Text_Parsing_Parser.applicativeParserT(dictMonad))($$null(dictStringLike)(v))(Text_Parsing_Parser.fail(dictMonad)("Expected EOF"));
          });
      };
  };
  var drop = function (dict) {
      return dict.drop;
  };
  var string = function (dictStringLike) {
      return function (dictMonad) {
          return function (str) {
              return Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(Control_Monad_State_Class.gets(Text_Parsing_Parser.monadStateParserT(dictMonad))(function (v) {
                  return v.value0;
              }))(function (v) {
                  var $39 = indexOf(dictStringLike)(Data_Newtype.wrap(Data_String.newtypePattern)(str))(v);
                  if ($39 instanceof Data_Maybe.Just && $39.value0 === 0) {
                      return Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(Control_Monad_State_Class.modify(Text_Parsing_Parser.monadStateParserT(dictMonad))(function (v1) {
                          return new Text_Parsing_Parser.ParseState(drop(dictStringLike)(Data_String.length(str))(v), Text_Parsing_Parser_Pos.updatePosString(v1.value1)(str), true);
                      }))(function () {
                          return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(str);
                      });
                  };
                  return Text_Parsing_Parser.fail(dictMonad)("Expected " + Data_Show.show(Data_Show.showString)(str));
              });
          };
      };
  };
  var anyChar = function (dictStringLike) {
      return function (dictMonad) {
          return Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(Control_Monad_State_Class.gets(Text_Parsing_Parser.monadStateParserT(dictMonad))(function (v) {
              return v.value0;
          }))(function (v) {
              var $50 = uncons(dictStringLike)(v);
              if ($50 instanceof Data_Maybe.Nothing) {
                  return Text_Parsing_Parser.fail(dictMonad)("Unexpected EOF");
              };
              if ($50 instanceof Data_Maybe.Just) {
                  return Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(Control_Monad_State_Class.modify(Text_Parsing_Parser.monadStateParserT(dictMonad))(function (v1) {
                      return new Text_Parsing_Parser.ParseState($50.value0.tail, Text_Parsing_Parser_Pos.updatePosString(v1.value1)(Data_String.singleton($50.value0.head)), true);
                  }))(function () {
                      return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))($50.value0.head);
                  });
              };
              throw new Error("Failed pattern match at Text.Parsing.Parser.String line 54, column 3 - line 61, column 16: " + [ $50.constructor.name ]);
          });
      };
  };
  var satisfy = function (dictStringLike) {
      return function (dictMonad) {
          return function (f) {
              return Text_Parsing_Parser_Combinators["try"](dictMonad)(Control_Bind.bind(Text_Parsing_Parser.bindParserT(dictMonad))(anyChar(dictStringLike)(dictMonad))(function (v) {
                  var $59 = f(v);
                  if ($59) {
                      return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(dictMonad))(v);
                  };
                  if (!$59) {
                      return Text_Parsing_Parser.fail(dictMonad)("Character '" + (Data_String.singleton(v) + "' did not satisfy predicate"));
                  };
                  throw new Error("Failed pattern match at Text.Parsing.Parser.String line 67, column 3 - line 70, column 1: " + [ $59.constructor.name ]);
              }));
          };
      };
  };
  exports["StringLike"] = StringLike;
  exports["anyChar"] = anyChar;
  exports["drop"] = drop;
  exports["eof"] = eof;
  exports["indexOf"] = indexOf;
  exports["satisfy"] = satisfy;
  exports["string"] = string;
  exports["uncons"] = uncons;
  exports["stringLikeString"] = stringLikeString;
})(PS["Text.Parsing.Parser.String"] = PS["Text.Parsing.Parser.String"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Data_Array = PS["Data.Array"];
  var Data_Char_Unicode = PS["Data.Char.Unicode"];
  var Data_List = PS["Data.List"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_Monad_State = PS["Control.Monad.State"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Data_Char = PS["Data.Char"];
  var Data_Either = PS["Data.Either"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Identity = PS["Data.Identity"];
  var Data_Int = PS["Data.Int"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_String = PS["Data.String"];
  var Data_Tuple = PS["Data.Tuple"];
  var $$Math = PS["Math"];
  var Text_Parsing_Parser = PS["Text.Parsing.Parser"];
  var Text_Parsing_Parser_Combinators = PS["Text.Parsing.Parser.Combinators"];
  var Text_Parsing_Parser_Pos = PS["Text.Parsing.Parser.Pos"];
  var Text_Parsing_Parser_String = PS["Text.Parsing.Parser.String"];
  var Prelude = PS["Prelude"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_State_Class = PS["Control.Monad.State.Class"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_Function = PS["Data.Function"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Functor = PS["Data.Functor"];
  var Control_Apply = PS["Control.Apply"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Control_Alt = PS["Control.Alt"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Ring = PS["Data.Ring"];
  var Control_Category = PS["Control.Category"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_EuclideanRing = PS["Data.EuclideanRing"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Unit = PS["Data.Unit"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var digit = function (dictMonad) {
      return Text_Parsing_Parser_Combinators.withErrorMessage(dictMonad)(Text_Parsing_Parser_String.satisfy(Text_Parsing_Parser_String.stringLikeString)(dictMonad)(Data_Char_Unicode.isDigit))("digit");
  };
  exports["digit"] = digit;
})(PS["Text.Parsing.Parser.Token"] = PS["Text.Parsing.Parser.Token"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Data_List = PS["Data.List"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Either = PS["Data.Either"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Int = PS["Data.Int"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_String = PS["Data.String"];
  var Text_Parsing_Parser = PS["Text.Parsing.Parser"];
  var Text_Parsing_Parser_Pos = PS["Text.Parsing.Parser.Pos"];
  var Text_Parsing_Parser_String = PS["Text.Parsing.Parser.String"];
  var Text_Parsing_Parser_Token = PS["Text.Parsing.Parser.Token"];
  var ModulusCheckTypes = PS["ModulusCheckTypes"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Identity = PS["Data.Identity"];
  var Data_Function = PS["Data.Function"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Eq = PS["Data.Eq"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ring = PS["Data.Ring"];
  var Control_Apply = PS["Control.Apply"];
  var Data_Functor = PS["Data.Functor"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Boolean = PS["Data.Boolean"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Semiring = PS["Data.Semiring"];        
  var whiteSpace = Control_Bind.bind(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(Data_List.many(Text_Parsing_Parser.alternativeParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser.lazyParserT)(Text_Parsing_Parser_String.satisfy(Text_Parsing_Parser_String.stringLikeString)(Data_Identity.monadIdentity)(function (c) {
      return c === " " || c === "\x09";
  })))(function () {
      return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(Data_Identity.monadIdentity))(Data_Unit.unit);
  });
  var parseWithError = function (error) {
      return function (input) {
          return function (p) {
              return Data_Bifunctor.lmap(Data_Either.bifunctorEither)(Data_Function["const"](error))(Text_Parsing_Parser.runParser(input)(p));
          };
      };
  };
  var parseErrorToError = function (error) {
      var position = Text_Parsing_Parser.parseErrorPosition(error);
      var message = Text_Parsing_Parser.parseErrorMessage(error);
      var line = function (v) {
          return v.line;
      };
      var column = function (v) {
          return v.column;
      };
      return message + (", line: " + (Data_Show.show(Data_Show.showInt)(line(position)) + (", column: " + Data_Show.show(Data_Show.showInt)(column(position)))));
  };
  var parse = function (input) {
      return function (p) {
          return Data_Bifunctor.lmap(Data_Either.bifunctorEither)(parseErrorToError)(Text_Parsing_Parser.runParser(input)(p));
      };
  };
  var exactly = function (n) {
      return function (p) {
          var loop = function (__copy_j) {
              return function (__copy_a) {
                  var j = __copy_j;
                  var a = __copy_a;
                  tco: while (true) {
                      if (j === 1) {
                          return a;
                      };
                      if (j > 1) {
                          var __tco_j = j - 1 | 0;
                          var __tco_a = Control_Apply.apply(Text_Parsing_Parser.applyParserT(Data_Identity.monadIdentity))(Data_Functor.map(Text_Parsing_Parser.functorParserT(Data_Identity.functorIdentity))(Data_List_Types.Cons.create)(p))(a);
                          j = __tco_j;
                          a = __tco_a;
                          continue tco;
                      };
                      if (Data_Boolean.otherwise) {
                          return Text_Parsing_Parser.fail(Data_Identity.monadIdentity)("negative or zero n in exactly");
                      };
                      throw new Error("Failed pattern match at ModulusCheck.Parsers line 52, column 5 - line 57, column 1: " + [ j.constructor.name, a.constructor.name ]);
                  };
              };
          };
          var initial = Data_Functor.map(Text_Parsing_Parser.functorParserT(Data_Identity.functorIdentity))(Data_Function.flip(Data_List_Types.Cons.create)(Data_List_Types.Nil.value))(p);
          return loop(n)(initial);
      };
  };
  var stringDigitsParser = function (n) {
      return Control_Bind.bind(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(exactly(n)(Text_Parsing_Parser_Token.digit(Data_Identity.monadIdentity)))(function ($14) {
          return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(Data_Identity.monadIdentity))(Data_Foldable.foldl(Data_List_Types.foldableList)(function (a) {
              return function (x) {
                  return a + Data_String.singleton(x);
              };
          })("")($14));
      });
  };
  var eol = Control_Bind.bind(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(Data_List.many(Text_Parsing_Parser.alternativeParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser.lazyParserT)(Text_Parsing_Parser_String.satisfy(Text_Parsing_Parser_String.stringLikeString)(Data_Identity.monadIdentity)(function (c) {
      return c === "\x0a" || c === "\x0d";
  })))(function () {
      return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(Data_Identity.monadIdentity))(Data_Unit.unit);
  });
  var digitParser = Control_Bind.bind(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser_Token.digit(Data_Identity.monadIdentity))(function (v) {
      var $10 = Data_Int.fromString(Data_String.singleton(v));
      if ($10 instanceof Data_Maybe.Just) {
          return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(Data_Identity.monadIdentity))($10.value0);
      };
      if ($10 instanceof Data_Maybe.Nothing) {
          return Text_Parsing_Parser.fail(Data_Identity.monadIdentity)("expected digit, got: " + Data_Show.show(Data_Show.showChar)(v));
      };
      throw new Error("Failed pattern match at ModulusCheck.Parsers line 42, column 3 - line 44, column 56: " + [ $10.constructor.name ]);
  });
  var digitsParser = function (n) {
      return exactly(n)(digitParser);
  };
  var integerParser = Control_Bind.bind(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(digitParser)(function (v) {
      return Control_Bind.bind(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(Data_List.many(Text_Parsing_Parser.alternativeParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser.lazyParserT)(digitParser))(function (v1) {
          return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(Data_Identity.monadIdentity))(Data_Foldable.foldl(Data_List_Types.foldableList)(function (a) {
              return function (x) {
                  return (a * 10 | 0) + x | 0;
              };
          })(0)(new Data_List_Types.Cons(v, v1)));
      });
  });
  var signedIntegerParser = Control_Alt.alt(Text_Parsing_Parser.altParserT(Data_Identity.monadIdentity))(Control_Bind.bind(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(Control_Apply.applySecond(Text_Parsing_Parser.applyParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser_String.string(Text_Parsing_Parser_String.stringLikeString)(Data_Identity.monadIdentity)("-"))(integerParser))(function (x) {
      return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(Data_Identity.monadIdentity))(-x | 0);
  }))(integerParser);
  exports["digitsParser"] = digitsParser;
  exports["eol"] = eol;
  exports["exactly"] = exactly;
  exports["integerParser"] = integerParser;
  exports["parse"] = parse;
  exports["parseWithError"] = parseWithError;
  exports["signedIntegerParser"] = signedIntegerParser;
  exports["stringDigitsParser"] = stringDigitsParser;
  exports["whiteSpace"] = whiteSpace;
})(PS["ModulusCheck.Parsers"] = PS["ModulusCheck.Parsers"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Data_List = PS["Data.List"];
  var Text_Parsing_Parser = PS["Text.Parsing.Parser"];
  var Text_Parsing_Parser_Combinators = PS["Text.Parsing.Parser.Combinators"];
  var Text_Parsing_Parser_String = PS["Text.Parsing.Parser.String"];
  var ModulusCheck_Data_CheckRow = PS["ModulusCheck.Data.CheckRow"];
  var ModulusCheck_Parsers = PS["ModulusCheck.Parsers"];
  var Data_Identity = PS["Data.Identity"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Function = PS["Data.Function"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Data_Functor = PS["Data.Functor"];        
  var checkMethodParser = Control_Alt.alt(Text_Parsing_Parser.altParserT(Data_Identity.monadIdentity))(Control_Alt.alt(Text_Parsing_Parser.altParserT(Data_Identity.monadIdentity))(Control_Bind.bind(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser_String.string(Text_Parsing_Parser_String.stringLikeString)(Data_Identity.monadIdentity)("DBLAL"))(Data_Function["const"](Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(Data_Identity.monadIdentity))(ModulusCheck_Data_CheckRow.DblAl.value))))(Control_Bind.bind(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser_String.string(Text_Parsing_Parser_String.stringLikeString)(Data_Identity.monadIdentity)("MOD10"))(Data_Function["const"](Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(Data_Identity.monadIdentity))(ModulusCheck_Data_CheckRow.Mod10.value)))))(Control_Bind.bind(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser_String.string(Text_Parsing_Parser_String.stringLikeString)(Data_Identity.monadIdentity)("MOD11"))(Data_Function["const"](Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(Data_Identity.monadIdentity))(ModulusCheck_Data_CheckRow.Mod11.value))));
  var checkRowParser = Control_Apply.apply(Text_Parsing_Parser.applyParserT(Data_Identity.monadIdentity))(Control_Apply.apply(Text_Parsing_Parser.applyParserT(Data_Identity.monadIdentity))(Control_Apply.apply(Text_Parsing_Parser.applyParserT(Data_Identity.monadIdentity))(Control_Apply.apply(Text_Parsing_Parser.applyParserT(Data_Identity.monadIdentity))(Data_Functor.map(Text_Parsing_Parser.functorParserT(Data_Identity.functorIdentity))(ModulusCheck_Data_CheckRow.checkRow)(ModulusCheck_Parsers.stringDigitsParser(6)))(Control_Apply.applySecond(Text_Parsing_Parser.applyParserT(Data_Identity.monadIdentity))(ModulusCheck_Parsers.whiteSpace)(ModulusCheck_Parsers.stringDigitsParser(6))))(Control_Apply.applySecond(Text_Parsing_Parser.applyParserT(Data_Identity.monadIdentity))(ModulusCheck_Parsers.whiteSpace)(checkMethodParser)))(Control_Apply.applySecond(Text_Parsing_Parser.applyParserT(Data_Identity.monadIdentity))(ModulusCheck_Parsers.whiteSpace)(ModulusCheck_Parsers.exactly(14)(Control_Apply.applySecond(Text_Parsing_Parser.applyParserT(Data_Identity.monadIdentity))(ModulusCheck_Parsers.whiteSpace)(ModulusCheck_Parsers.signedIntegerParser)))))(Text_Parsing_Parser_Combinators.optionMaybe(Data_Identity.monadIdentity)(Control_Apply.applySecond(Text_Parsing_Parser.applyParserT(Data_Identity.monadIdentity))(ModulusCheck_Parsers.whiteSpace)(ModulusCheck_Parsers.integerParser)));
  var checkRowTableParser = Control_Bind.bind(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(Control_Apply.applySecond(Text_Parsing_Parser.applyParserT(Data_Identity.monadIdentity))(ModulusCheck_Parsers.eol)(ModulusCheck_Parsers.whiteSpace))(function () {
      return Text_Parsing_Parser_Combinators.sepEndBy1(Data_Identity.monadIdentity)(checkRowParser)(Control_Apply.applySecond(Text_Parsing_Parser.applyParserT(Data_Identity.monadIdentity))(ModulusCheck_Parsers.eol)(ModulusCheck_Parsers.whiteSpace));
  });
  exports["checkRowTableParser"] = checkRowTableParser;
})(PS["ModulusCheck.Data.CheckRow.Parser"] = PS["ModulusCheck.Data.CheckRow.Parser"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Map = PS["Data.Map"];
  var Data_Tuple = PS["Data.Tuple"];
  var Text_Parsing_Parser = PS["Text.Parsing.Parser"];
  var Text_Parsing_Parser_Combinators = PS["Text.Parsing.Parser.Combinators"];
  var ModulusCheck_Data_AccountNumber = PS["ModulusCheck.Data.AccountNumber"];
  var ModulusCheck_Data_SubstitutionRow = PS["ModulusCheck.Data.SubstitutionRow"];
  var ModulusCheck_Parsers = PS["ModulusCheck.Parsers"];
  var Control_Apply = PS["Control.Apply"];
  var Data_Identity = PS["Data.Identity"];
  var Data_Functor = PS["Data.Functor"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Function = PS["Data.Function"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_Ord = PS["Data.Ord"];
  var Data_List_Types = PS["Data.List.Types"];        
  var substitutionRowParser = Control_Apply.apply(Text_Parsing_Parser.applyParserT(Data_Identity.monadIdentity))(Data_Functor.map(Text_Parsing_Parser.functorParserT(Data_Identity.functorIdentity))(Data_Tuple.Tuple.create)(ModulusCheck_Parsers.stringDigitsParser(6)))(Control_Apply.applySecond(Text_Parsing_Parser.applyParserT(Data_Identity.monadIdentity))(ModulusCheck_Parsers.whiteSpace)(ModulusCheck_Parsers.digitsParser(6)));
  var sortCodeSubstitutionTableParser = Control_Bind.bind(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(Control_Apply.applySecond(Text_Parsing_Parser.applyParserT(Data_Identity.monadIdentity))(ModulusCheck_Parsers.eol)(ModulusCheck_Parsers.whiteSpace))(function () {
      return Control_Bind.bind(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser_Combinators.sepEndBy1(Data_Identity.monadIdentity)(substitutionRowParser)(Control_Apply.applySecond(Text_Parsing_Parser.applyParserT(Data_Identity.monadIdentity))(ModulusCheck_Parsers.eol)(ModulusCheck_Parsers.whiteSpace)))(function (v) {
          return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(Data_Identity.monadIdentity))(Data_Map.fromFoldable(Data_Ord.ordString)(Data_List_Types.foldableList)(v));
      });
  });
  exports["sortCodeSubstitutionTableParser"] = sortCodeSubstitutionTableParser;
})(PS["ModulusCheck.Data.SubstitutionRow.Parser"] = PS["ModulusCheck.Data.SubstitutionRow.Parser"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var valacdos_v410 = "\x0a  010004 016715 MOD11    0    0    0    0    0    0    8    7    6    5    4    3    2    1\x0a  050000 050020 MOD11    0    0    0    0    0    0    2    1    7    5    8    2    4    1\x0a  050022 058999 MOD11    0    0    0    0    0    0    2    1    7    5    8    2    4    1\x0a  070116 070116 MOD11    0    0    7    6    5    8    9    4    5    6    7    8    9   -1  12\x0a  070116 070116 MOD10    0    3    2    4    5    8    9    4    5    6    7    8    9   -1  13\x0a  070246 070246 MOD11    0    0    7    6    5    8    9    4    5    6    7    8    9   -1\x0a  070436 070436 MOD11    0    0    7    6    5    8    9    4    5    6    7    8    9   -1\x0a  070806 070806 MOD11    0    0    7    6    5    8    9    4    5    6    7    8    9   -1\x0a  070976 070976 MOD11    0    0    7    6    5    8    9    4    5    6    7    8    9   -1\x0a  071096 071096 MOD11    0    0    7    6    5    8    9    4    5    6    7    8    9   -1\x0a  071226 071226 MOD11    0    0    7    6    5    8    9    4    5    6    7    8    9   -1\x0a  071306 071306 MOD11    0    0    7    6    5    8    9    4    5    6    7    8    9   -1\x0a  071986 071986 MOD11    0    0    7    6    5    8    9    4    5    6    7    8    9   -1\x0a  074456 074456 MOD11    0    0    7    6    5    8    9    4    5    6    7    8    9   -1  12\x0a  074456 074456 MOD10    0    3    2    4    5    8    9    4    5    6    7    8    9   -1  13\x0a  080211 080211 MOD10    0    0    0    0    0    0    7    1    3    7    1    3    7    1\x0a  080228 080228 MOD10    0    0    0    0    0    0    7    1    3    7    1    3    7    1\x0a  086001 086001 MOD10    0    0    0    0    0    0    7    1    3    7    1    3    7    1\x0a  086020 086020 MOD10    0    0    0    0    0    0    7    1    3    7    1    3    7    1\x0a  086086 086086 MOD11    0    0    0    0    0    8    9    4    5    6    7    8    9   -1\x0a  086090 086090 MOD10    0    0    3    7    1    3    7    1    3    7    1    3    7    1   8\x0a  089000 089999 MOD10    0    0    0    0    0    0    7    1    3    7    1    3    7    1\x0a  090013 090013 MOD10    0    0    3    7    1    3    7    1    3    7    1    3    7    1\x0a  090105 090105 MOD10    0    0    3    7    1    3    7    1    3    7    1    3    7    1\x0a  090118 090118 MOD11    0    0    6    5    4    3    2    7    6    5    4    3    2    1\x0a  090126 090129 MOD10    0    0    3    7    1    3    7    1    3    7    1    3    7    1\x0a  090131 090136 MOD11    0    0    0    0    0    9    8    7    6    5    4    3    2    1\x0a  090150 090156 MOD11    0    0    0    0    0    9    8    7    6    5    4    3    2    1\x0a  090180 090185 MOD10    0    0    3    7    1    3    7    1    3    7    1    3    7    1\x0a  090190 090196 MOD10    0    0    3    7    1    3    7    1    3    7    1    3    7    1\x0a  090204 090204 MOD10    0    0    3    7    1    3    7    1    3    7    1    3    7    1\x0a  090222 090222 MOD10    0    0    3    7    1    3    7    1    3    7    1    3    7    1\x0a  090356 090356 MOD11    0    0    0    0    0    9    8    7    6    5    4    3    2    1\x0a  090500 090599 MOD10    0    0    3    7    1    3    7    1    3    7    1    3    7    1\x0a  090704 090704 MOD10    0    0    3    7    1    3    7    1    3    7    1    3    7    1\x0a  090705 090705 MOD10    0    0    3    7    1    3    7    1    3    7    1    3    7    1\x0a  090710 090710 MOD10    0    0    3    7    1    3    7    1    3    7    1    3    7    1\x0a  090715 090715 MOD10    0    0    3    7    1    3    7    1    3    7    1    3    7    1\x0a  090720 090726 MOD11    0    0    0    0    0    9    8    7    6    5    4    3    2    1\x0a  090736 090739 MOD10    0    0    3    7    1    3    7    1    3    7    1    3    7    1\x0a  090790 090790 MOD10    0    0    3    7    1    3    7    1    3    7    1    3    7    1\x0a  091600 091600 MOD10    0    0    0    0    0    1    7    1    3    7    1    3    7    1\x0a  091601 091601 MOD10    0    0    3    7    1    3    7    1    3    7    1    3    7    1\x0a  091740 091743 MOD10    0    0    0    0    0    1    7    1    3    7    1    3    7    1\x0a  091800 091809 MOD10    0    0    0    0    0    1    7    1    3    7    1    3    7    1\x0a  091811 091865 MOD10    0    0    0    0    0    1    7    1    3    7    1    3    7    1\x0a  100000 101099 MOD11    0    0    0    0    0    0    8    7    6    5    4    3    2    1\x0a  101101 101498 MOD11    0    0    0    0    0    0    8    7    6    5    4    3    2    1\x0a  101500 101999 MOD11    0    0    0    0    0    0    8    7    6    5    4    3    2    1\x0a  102400 107999 MOD11    0    0    0    0    0    0    8    7    6    5    4    3    2    1\x0a  108000 108079 MOD11    0    0    0    0    0    3    2    7    6    5    4    3    2    1\x0a  108080 108099 MOD11    0    0    0    0    4    3    2    7    6    5    4    3    2    1\x0a  108100 109999 MOD11    0    0    0    0    0    0    8    7    6    5    4    3    2    1\x0a  110000 119280 DBLAL    0    0    2    1    2    1    2    1    2    1    2    1    2    1   1\x0a  119282 119283 DBLAL    0    0    2    1    2    1    2    1    2    1    2    1    2    1   1\x0a  119285 119999 DBLAL    0    0    2    1    2    1    2    1    2    1    2    1    2    1   1\x0a  120000 120961 MOD11    0    0    1    8    2    6    3    7    9    5    8    4    2    1\x0a  120963 122009 MOD11    0    0    1    8    2    6    3    7    9    5    8    4    2    1\x0a  122011 122101 MOD11    0    0    1    8    2    6    3    7    9    5    8    4    2    1\x0a  122103 122129 MOD11    0    0    1    8    2    6    3    7    9    5    8    4    2    1\x0a  122131 122135 MOD11    0    0    1    8    2    6    3    7    9    5    8    4    2    1\x0a  122213 122299 MOD11    0    0    1    8    2    6    3    7    9    5    8    4    2    1\x0a  122400 122999 MOD11    0    0    1    8    2    6    3    7    9    5    8    4    2    1\x0a  124000 124999 MOD11    0    0    1    8    2    6    3    7    9    5    8    4    2    1\x0a  133000 133999 MOD11    0    0    0    0    0   10    7    8    4    6    3    5    2    1\x0a  134012 134020 MOD11    0    0    0    7    5    9    8    4    6    3    5    2    0    0   4\x0a  134121 134121 MOD11    0    0    0    1    0    0    8    4    6    3    5    2    0    0   4\x0a  150000 158000 MOD11    4    3    0    0    0    0    2    7    6    5    4    3    2    1\x0a  159800 159800 MOD11    0    0    0    0    0    0    7    6    5    4    3    2    1    0\x0a  159900 159900 MOD11    0    0    0    0    0    0    7    6    5    4    3    2    1    0\x0a  159910 159910 MOD11    0    0    0    0    0    0    7    6    5    4    3    2    1    0\x0a  160000 161027 MOD11    0    0    6    5    4    3    2    7    6    5    4    3    2    1\x0a  161029 161029 MOD11    0    0    0    0    0    0    2    7    6    5    4    3    2    1\x0a  161030 161041 MOD11    0    0    6    5    4    3    2    7    6    5    4    3    2    1\x0a  161050 161050 MOD11    0    0    6    5    4    3    2    7    6    5    4    3    2    1\x0a  161055 161055 MOD11    0    0    6    5    4    3    2    7    6    5    4    3    2    1\x0a  161060 161060 MOD11    0    0    6    5    4    3    2    7    6    5    4    3    2    1\x0a  161065 161065 MOD11    0    0    6    5    4    3    2    7    6    5    4    3    2    1\x0a  161070 161070 MOD11    0    0    6    5    4    3    2    7    6    5    4    3    2    1\x0a  161075 161075 MOD11    0    0    6    5    4    3    2    7    6    5    4    3    2    1\x0a  161080 161080 MOD11    0    0    6    5    4    3    2    7    6    5    4    3    2    1\x0a  161085 161085 MOD11    0    0    6    5    4    3    2    7    6    5    4    3    2    1\x0a  161090 161090 MOD11    0    0    6    5    4    3    2    7    6    5    4    3    2    1\x0a  161100 162028 MOD11    0    0    6    5    4    3    2    7    6    5    4    3    2    1\x0a  162030 164300 MOD11    0    0    6    5    4    3    2    7    6    5    4    3    2    1\x0a  165901 166001 MOD11    0    0    6    5    4    3    2    7    6    5    4    3    2    1\x0a  166050 167600 MOD11    0    0    6    5    4    3    2    7    6    5    4    3    2    1\x0a  168600 168600 MOD11    0    0    0    0    0    0    2    7    6    5    4    3    2    1\x0a  170000 179499 MOD11    0    0    4    2    7    9    2    7    6    5    4    3    2    1\x0a  180002 180002 MOD11    0    0    0    0    0    0    8    7    6    5    4    3    2    1  14\x0a  180005 180005 MOD11    0    0    0    0    0    0    8    7    6    5    4    3    2    1  14\x0a  180009 180009 MOD11    0    0    0    0    0    0    8    7    6    5    4    3    2    1  14\x0a  180036 180036 MOD11    0    0    0    0    0    0    8    7    6    5    4    3    2    1  14\x0a  180038 180038 MOD11    0    0    0    0    0    0    8    7    6    5    4    3    2    1  14\x0a  180091 180092 MOD11    0    0    0    0    0    0    8    7    6    5    4    3    2    1  14\x0a  180104 180104 MOD11    0    0    0    0    0    0    8    7    6    5    4    3    2    1  14\x0a  180109 180110 MOD11    0    0    0    0    0    0    8    7    6    5    4    3    2    1  14\x0a  180156 180156 MOD11    0    0    0    0    0    0    8    7    6    5    4    3    2    1  14\x0a  185001 185001 MOD11    0    0    0    0    0    0    8    7    6    5    4    3    2    1  14\x0a  185003 185025 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1\x0a  185027 185099 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1\x0a  200000 200002 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1   6\x0a  200000 200002 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1   6\x0a  200004 200004 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1   6\x0a  200004 200004 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1   6\x0a  200051 200077 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1   6\x0a  200051 200077 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1   6\x0a  200079 200097 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1   6\x0a  200079 200097 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1   6\x0a  200099 200156 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1   6\x0a  200099 200156 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1   6\x0a  200158 200387 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1   6\x0a  200158 200387 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1   6\x0a  200403 200405 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1   6\x0a  200403 200405 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1   6\x0a  200407 200407 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1   6\x0a  200407 200407 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1   6\x0a  200411 200412 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1   6\x0a  200411 200412 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1   6\x0a  200414 200423 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1   6\x0a  200414 200423 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1   6\x0a  200425 200899 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1   6\x0a  200425 200899 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1   6\x0a  200901 201159 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1   6\x0a  200901 201159 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1   6\x0a  201161 201177 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1   6\x0a  201161 201177 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1   6\x0a  201179 201351 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1   6\x0a  201179 201351 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1   6\x0a  201353 202698 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1   6\x0a  201353 202698 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1   6\x0a  202700 203239 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1   6\x0a  202700 203239 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1   6\x0a  203241 203255 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1   6\x0a  203241 203255 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1   6\x0a  203259 203519 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1   6\x0a  203259 203519 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1   6\x0a  203521 204476 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1   6\x0a  203521 204476 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1   6\x0a  204478 205475 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1   6\x0a  204478 205475 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1   6\x0a  205477 205954 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1   6\x0a  205477 205954 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1   6\x0a  205956 206124 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1   6\x0a  205956 206124 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1   6\x0a  206126 206157 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1   6\x0a  206126 206157 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1   6\x0a  206159 206390 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1   6\x0a  206159 206390 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1   6\x0a  206392 206799 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1   6\x0a  206392 206799 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1   6\x0a  206802 206874 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1   6\x0a  206802 206874 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1   6\x0a  206876 207170 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1   6\x0a  206876 207170 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1   6\x0a  207173 208092 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1   6\x0a  207173 208092 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1   6\x0a  208094 208721 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1   6\x0a  208094 208721 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1   6\x0a  208723 209034 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1   6\x0a  208723 209034 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1   6\x0a  209036 209128 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1   6\x0a  209036 209128 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1   6\x0a  209130 209999 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1   6\x0a  209130 209999 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1   6\x0a  230338 230338 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1\x0a  230338 230338 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  230580 230580 MOD11    0    0    0    0    0    0    2    7    6    5    4    3    2    1  12\x0a  230580 230580 MOD11    0    0    0    0    0    0    5    7    6    5    4    3    2    1  13\x0a  230614 230614 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1\x0a  230614 230614 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  230709 230709 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1\x0a  230709 230709 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  230872 230872 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1\x0a  230872 230872 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  230933 230933 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1\x0a  230933 230933 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  231018 231018 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1\x0a  231018 231018 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  231213 231213 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1\x0a  231213 231213 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  231354 231354 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1\x0a  231354 231354 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  231469 231469 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1\x0a  231469 231469 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  231558 231558 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1\x0a  231558 231558 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  231679 231679 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1\x0a  231679 231679 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  231843 231843 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1\x0a  231843 231843 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  231985 231985 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1\x0a  231985 231985 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  232130 232130 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1\x0a  232130 232130 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  232279 232279 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1\x0a  232279 232279 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  232283 232283 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1\x0a  232283 232283 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  232445 232445 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1\x0a  232445 232445 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  232571 232571 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1\x0a  232571 232571 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  232636 232636 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1\x0a  232636 232636 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  232704 232704 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1\x0a  232704 232704 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  232725 232725 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1\x0a  232725 232725 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  232813 232813 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1\x0a  232813 232813 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  232939 232939 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1\x0a  232939 232939 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  233080 233080 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1\x0a  233080 233080 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  233142 233142 MOD10    2    1    2    1    2    1   30   36   24   20   16   12    8    4\x0a  233171 233171 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1\x0a  233171 233171 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  233188 233188 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1\x0a  233188 233188 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  233231 233231 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1\x0a  233231 233231 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  233344 233344 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1\x0a  233344 233344 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  233438 233438 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1\x0a  233438 233438 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  233456 233456 MOD10    2    1    2    1    2    1    0   64   32   16    8    4    2    1\x0a  233483 233483 MOD11    0    0    0    0    0    0    2    7    6    5    4    3    2    1\x0a  233556 233556 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1\x0a  233556 233556 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  233658 233658 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1\x0a  233658 233658 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  233693 233693 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1\x0a  233693 233693 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  233752 233752 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1\x0a  233752 233752 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  234081 234081 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1\x0a  234081 234081 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  234193 234193 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1\x0a  234193 234193 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  234252 234252 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1\x0a  234252 234252 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  234321 234321 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1\x0a  234321 234321 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  234377 234377 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1\x0a  234377 234377 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  234570 234570 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1\x0a  234570 234570 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  234666 234666 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1\x0a  234666 234666 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  234779 234779 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1\x0a  234779 234779 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  234828 234828 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1\x0a  234828 234828 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  234985 234985 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1\x0a  234985 234985 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  235054 235054 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1\x0a  235054 235054 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  235164 235164 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1\x0a  235164 235164 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  235262 235262 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1\x0a  235262 235262 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  235323 235323 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1\x0a  235323 235323 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  235451 235451 MOD11    0    0    0    0    0    0    2    7    6    5    4    3    2    1\x0a  235459 235459 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1\x0a  235459 235459 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  235519 235519 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1\x0a  235519 235519 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  235676 235676 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1\x0a  235676 235676 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  235711 235711 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1\x0a  235711 235711 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  235756 235756 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1\x0a  235756 235756 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  235945 235945 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1\x0a  235945 235945 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  236006 236006 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1\x0a  236006 236006 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  236119 236119 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1\x0a  236119 236119 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  236233 236233 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1\x0a  236233 236233 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  236247 236247 MOD11    0    0    1    8    2    6    3    7    9    5    8    4    2    1\x0a  236293 236293 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1\x0a  236293 236293 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  236422 236422 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1\x0a  236422 236422 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  236527 236527 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1\x0a  236527 236527 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  236538 236538 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1\x0a  236538 236538 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  236643 236643 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1\x0a  236643 236643 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  236761 236761 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1\x0a  236761 236761 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  236907 236907 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1\x0a  236907 236907 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  237130 237130 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1\x0a  237130 237130 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  237265 237265 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1\x0a  237265 237265 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  237355 237355 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1\x0a  237355 237355 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  237423 237423 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1\x0a  237423 237423 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  237427 237427 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1\x0a  237427 237427 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  237563 237563 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1\x0a  237563 237563 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  237622 237622 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1\x0a  237622 237622 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  237728 237728 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1\x0a  237728 237728 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  237873 237873 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1\x0a  237873 237873 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  238020 238020 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1\x0a  238020 238020 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  238043 238043 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1\x0a  238043 238043 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  238051 238051 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1\x0a  238051 238051 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  238175 238175 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1\x0a  238175 238175 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  238257 238257 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1\x0a  238257 238257 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  238392 238431 MOD11    7    6    5    4    3    2    7    6    5    4    3    2    1    0\x0a  238392 238431 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  238432 238432 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1\x0a  238432 238432 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  238433 238583 MOD11    7    6    5    4    3    2    7    6    5    4    3    2    1    0\x0a  238433 238583 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  238585 238590 MOD11    7    6    5    4    3    2    7    6    5    4    3    2    1    0\x0a  238585 238590 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  238599 238599 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1\x0a  238599 238599 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  238613 238613 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1\x0a  238613 238613 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  238672 238672 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1\x0a  238672 238672 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  238717 238717 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1\x0a  238717 238717 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  238890 238899 MOD11    0    0    0    0    4    3    2    7    6    5    4    3    2    1\x0a  238908 238908 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1\x0a  238908 238908 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  239071 239071 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1\x0a  239071 239071 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  239126 239126 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1\x0a  239126 239126 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  239136 239140 MOD11    7    6    5    4    3    2    7    6    5    4    3    2    1    0\x0a  239136 239140 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  239143 239144 MOD11    7    6    5    4    3    2    7    6    5    4    3    2    1    0\x0a  239143 239144 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  239282 239283 MOD11    7    6    5    4    3    2    7    6    5    4    3    2    1    0\x0a  239282 239283 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  239285 239294 MOD11    7    6    5    4    3    2    7    6    5    4    3    2    1    0\x0a  239285 239294 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  239295 239295 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1\x0a  239295 239295 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  239296 239318 MOD11    7    6    5    4    3    2    7    6    5    4    3    2    1    0\x0a  239296 239318 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  239360 239360 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1\x0a  239360 239360 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  239380 239380 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1\x0a  239380 239380 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  239435 239435 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1\x0a  239435 239435 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  239525 239525 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1\x0a  239525 239525 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  239642 239642 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1\x0a  239642 239642 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  239751 239751 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1\x0a  239751 239751 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  300000 300006 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  300000 300006 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  300008 300009 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  300008 300009 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  300050 300051 MOD11    0    0    0    0    0    0  128   64   32   16    8    4    2    1\x0a  300134 300138 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  300134 300138 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  300161 300161 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1\x0a  300176 300176 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1\x0a  301001 301001 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  301001 301001 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  301004 301004 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  301004 301004 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  301007 301007 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  301007 301007 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  301012 301012 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  301012 301012 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  301022 301022 MOD11    0    0    0    0    0    0  128   64   32   16    8    4    2    1\x0a  301027 301027 MOD11    0    0    0    0    0    0  128   64   32   16    8    4    2    1\x0a  301047 301047 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  301047 301047 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  301049 301049 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  301049 301049 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  301052 301052 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  301052 301052 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  301075 301076 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  301075 301076 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  301108 301108 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  301108 301108 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  301112 301112 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  301112 301112 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  301127 301127 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  301127 301127 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  301137 301137 MOD11    0    0    0    0    0    0  128   64   32   16    8    4    2    1\x0a  301142 301142 MOD11    0    0    0    0    0    0  128   64   32   16    8    4    2    1\x0a  301148 301148 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  301148 301148 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  301154 301155 MOD11    0    0    0    0    0    0  128   64   32   16    8    4    2    1\x0a  301161 301161 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  301161 301161 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  301166 301166 MOD11    0    0    0    0    0    0  128   64   32   16    8    4    2    1\x0a  301170 301170 MOD11    0    0    0    0    0    0  128   64   32   16    8    4    2    1\x0a  301174 301175 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  301174 301175 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  301191 301191 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  301191 301191 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  301194 301195 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  301194 301195 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  301204 301205 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  301204 301205 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  301209 301210 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  301209 301210 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  301215 301215 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  301215 301215 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  301218 301218 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  301218 301218 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  301220 301221 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  301220 301221 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  301234 301234 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  301234 301234 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  301251 301251 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  301251 301251 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  301259 301259 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  301259 301259 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  301274 301274 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  301274 301274 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  301280 301280 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  301280 301280 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  301286 301286 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  301286 301286 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  301295 301296 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  301295 301296 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  301299 301299 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  301299 301299 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  301301 301301 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  301301 301301 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  301305 301305 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  301305 301305 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  301318 301318 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  301318 301318 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  301330 301330 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  301330 301330 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  301332 301332 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  301332 301332 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  301335 301335 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  301335 301335 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  301342 301342 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  301342 301342 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  301350 301355 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  301350 301355 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  301364 301364 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  301364 301364 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  301368 301368 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  301368 301368 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  301376 301376 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  301376 301376 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  301380 301380 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  301380 301380 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  301388 301388 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  301388 301388 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  301390 301390 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  301390 301390 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  301395 301395 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  301395 301395 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  301400 301400 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  301400 301400 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  301424 301424 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  301424 301424 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  301432 301432 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  301432 301432 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  301433 301433 MOD11    0    0    0    0    0    0  128   64   32   16    8    4    2    1\x0a  301435 301435 MOD11    0    0    0    0    0    0  128   64   32   16    8    4    2    1\x0a  301437 301437 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  301437 301437 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  301439 301439 MOD11    0    0    0    0    0    0  128   64   32   16    8    4    2    1\x0a  301440 301440 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  301440 301440 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  301443 301443 MOD11    0    0    0    0    0    0  128   64   32   16    8    4    2    1\x0a  301444 301444 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  301444 301444 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  301447 301447 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  301447 301447 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  301451 301451 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  301451 301451 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  301456 301456 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  301456 301456 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  301458 301458 MOD11    0    0    0    0    0    0  128   64   32   16    8    4    2    1\x0a  301460 301460 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  301460 301460 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  301463 301463 MOD11    0    0    0    0    0    0  128   64   32   16    8    4    2    1\x0a  301464 301464 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  301464 301464 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  301466 301466 MOD11    0    0    0    0    0    0  128   64   32   16    8    4    2    1\x0a  301469 301469 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  301469 301469 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  301471 301471 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  301471 301471 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  301474 301474 MOD11    0    0    0    0    0    0  128   64   32   16    8    4    2    1\x0a  301477 301477 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  301477 301477 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  301482 301482 MOD11    0    0    0    0    0    0  128   64   32   16    8    4    2    1\x0a  301483 301483 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  301483 301483 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  301485 301485 MOD11    0    0    0    0    0    0  128   64   32   16    8    4    2    1\x0a  301487 301487 MOD11    0    0    0    0    0    0  128   64   32   16    8    4    2    1\x0a  301504 301504 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  301504 301504 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  301510 301510 MOD11    0    0    0    0    0    0  128   64   32   16    8    4    2    1\x0a  301514 301514 MOD11    0    0    0    0    0    0  128   64   32   16    8    4    2    1\x0a  301517 301517 MOD11    0    0    0    0    0    0  128   64   32   16    8    4    2    1\x0a  301525 301525 MOD11    0    0    0    0    0    0  128   64   32   16    8    4    2    1\x0a  301539 301539 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  301539 301539 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  301542 301542 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  301542 301542 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  301552 301553 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  301552 301553 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  301557 301557 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  301557 301557 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  301573 301573 MOD11    0    0    0    0    0    0  128   64   32   16    8    4    2    1\x0a  301593 301593 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  301593 301593 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  301595 301595 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  301595 301595 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  301597 301597 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  301597 301597 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  301599 301599 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  301599 301599 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  301607 301607 MOD11    0    0    0    0    0    0  128   64   32   16    8    4    2    1\x0a  301609 301609 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  301609 301609 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  301611 301611 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  301611 301611 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  301620 301620 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  301620 301620 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  301628 301628 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  301628 301628 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  301634 301634 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  301634 301634 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  301641 301642 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  301641 301642 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  301653 301653 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  301653 301653 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  301657 301657 MOD11    0    0    0    0    0    0  128   64   32   16    8    4    2    1\x0a  301662 301662 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  301662 301662 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  301664 301664 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  301664 301664 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  301670 301670 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  301670 301670 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  301674 301674 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  301674 301674 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  301684 301684 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  301684 301684 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  301695 301696 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  301695 301696 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  301700 301702 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  301700 301702 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  301705 301705 MOD11    0    0    0    0    0    0  128   64   32   16    8    4    2    1\x0a  301712 301712 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  301712 301712 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  301716 301716 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  301716 301716 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  301748 301748 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  301748 301748 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  301773 301773 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  301773 301773 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  301777 301777 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  301777 301777 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  301780 301780 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  301780 301780 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  301785 301785 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  301785 301785 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  301803 301803 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  301803 301803 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  301805 301805 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  301805 301805 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  301806 301806 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  301806 301806 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  301816 301816 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  301816 301816 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  301825 301825 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  301825 301825 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  301830 301830 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  301830 301830 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  301834 301834 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  301834 301834 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  301843 301843 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  301843 301843 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  301845 301845 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  301845 301845 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  301855 301856 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  301855 301856 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  301864 301864 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  301864 301864 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  301868 301869 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  301868 301869 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  301883 301883 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  301883 301883 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  301886 301888 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  301886 301888 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  301898 301898 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  301898 301898 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  301914 301996 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  301914 301996 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  302500 302500 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  302500 302500 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  302556 302556 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  302556 302556 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  302579 302580 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  302579 302580 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  303460 303461 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  303460 303461 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  305907 305939 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  305907 305939 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  305941 305960 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  305941 305960 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  305971 305971 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  305971 305971 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  305974 305974 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  305974 305974 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  305978 305978 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  305978 305978 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  305982 305982 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  305982 305982 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  305984 305988 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  305984 305988 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  305990 305993 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  305990 305993 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  306017 306018 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  306017 306018 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  306020 306020 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  306020 306020 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  306028 306028 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  306028 306028 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  306038 306038 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  306038 306038 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  306150 306151 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  306150 306151 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  306154 306155 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  306154 306155 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  306228 306228 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  306228 306228 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  306229 306229 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  306229 306229 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  306232 306232 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  306232 306232 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  306242 306242 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  306242 306242 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  306245 306245 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  306245 306245 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  306249 306249 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  306249 306249 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  306255 306255 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  306255 306255 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  306259 306263 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  306259 306263 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  306272 306279 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  306272 306279 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  306281 306281 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  306281 306281 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  306289 306289 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  306289 306289 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  306296 306296 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  306296 306296 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  306299 306299 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  306299 306299 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  306300 306300 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  306300 306300 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  306347 306347 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  306347 306347 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  306354 306355 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  306354 306355 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  306357 306357 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  306357 306357 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  306359 306359 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  306359 306359 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  306364 306364 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  306364 306364 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  306394 306394 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  306394 306394 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  306397 306397 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  306397 306397 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  306410 306410 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  306410 306410 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  306412 306412 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  306412 306412 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  306414 306415 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  306414 306415 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  306418 306419 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  306418 306419 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  306422 306422 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  306422 306422 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  306434 306434 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  306434 306434 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  306437 306438 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  306437 306438 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  306442 306444 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  306442 306444 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  306457 306457 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  306457 306457 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  306472 306472 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  306472 306472 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  306479 306479 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  306479 306479 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  306497 306497 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  306497 306497 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  306521 306522 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  306521 306522 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  306537 306539 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  306537 306539 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  306541 306541 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  306541 306541 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  306549 306549 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  306549 306549 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  306562 306565 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  306562 306565 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  306572 306572 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  306572 306572 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  306585 306586 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  306585 306586 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  306592 306593 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  306592 306593 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  306675 306677 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  306675 306677 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  306689 306689 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  306689 306689 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  306695 306696 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  306695 306696 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  306733 306735 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  306733 306735 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  306747 306749 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  306747 306749 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  306753 306753 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  306753 306753 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  306756 306756 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  306756 306756 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  306759 306759 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  306759 306759 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  306762 306762 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  306762 306762 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  306764 306764 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  306764 306764 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  306766 306767 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  306766 306767 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  306769 306769 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  306769 306769 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  306772 306772 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  306772 306772 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  306775 306776 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  306775 306776 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  306779 306779 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  306779 306779 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  306782 306782 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  306782 306782 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  306788 306789 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  306788 306789 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  306799 306799 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  306799 306799 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  307184 307184 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  307184 307184 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  307188 307190 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  307188 307190 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  307198 307198 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  307198 307198 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  307271 307271 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  307271 307271 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  307274 307274 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  307274 307274 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  307654 307654 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  307654 307654 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  307779 307779 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  307779 307779 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  307788 307789 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  307788 307789 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  307809 307809 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  307809 307809 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  308012 308012 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  308012 308012 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  308016 308016 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  308016 308016 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  308026 308027 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  308026 308027 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  308033 308034 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  308033 308034 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  308037 308037 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  308037 308037 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  308042 308042 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  308042 308042 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  308045 308045 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  308045 308045 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  308048 308049 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  308048 308049 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  308054 308055 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  308054 308055 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  308063 308063 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  308063 308063 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  308076 308077 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  308076 308077 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  308082 308083 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  308082 308083 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  308085 308085 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  308085 308085 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  308087 308089 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  308087 308089 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  308095 308097 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  308095 308097 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  308404 308404 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  308404 308404 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  308412 308412 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  308412 308412 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  308420 308427 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  308420 308427 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  308433 308434 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  308433 308434 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  308441 308446 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  308441 308446 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  308448 308448 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  308448 308448 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  308451 308454 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  308451 308454 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  308457 308459 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  308457 308459 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  308462 308463 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  308462 308463 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  308467 308469 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  308467 308469 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  308472 308473 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  308472 308473 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  308475 308477 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  308475 308477 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  308479 308479 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  308479 308479 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  308482 308482 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  308482 308482 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  308484 308487 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  308484 308487 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  308784 308784 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  308784 308784 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  308804 308804 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  308804 308804 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  308822 308822 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  308822 308822 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  308952 308952 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  308952 308952 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  309001 309633 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  309001 309633 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  309634 309634 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1\x0a  309635 309746 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  309635 309746 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  309748 309871 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  309748 309871 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  309873 309915 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  309873 309915 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  309917 309999 MOD11    0    0    3    2    9    8    5    7    6    5    4    3    2    1   2\x0a  309917 309999 MOD11    0    0    3    2    9    8    1    7    6    5    4    3    2    1   9\x0a  400000 400193 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1\x0a  400000 400193 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  400196 400514 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1\x0a  400196 400514 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  400515 400515 MOD11    0    0    0    0    0    0    8    5    7    3    4    9    2    1\x0a  400516 404799 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1\x0a  400516 404799 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  406420 406420 MOD10    0    0    0    0    0    0    8    7    6    5    4    3    2    1\x0a  500000 501029 MOD11    0    0    0    0    0    0    8    7    6    5    4    3    2    1\x0a  502101 560070 MOD11    0    0    0    0    0    0    8    7    6    5    4    3    2    1\x0a  600000 600108 MOD11    0    0    0    0    0    0    8    7    6    5    4    3    2    1\x0a  600110 600124 MOD11    0    0    0    0    0    0    8    7    6    5    4    3    2    1\x0a  600127 600142 MOD11    0    0    0    0    0    0    8    7    6    5    4    3    2    1\x0a  600144 600149 MOD11    0    0    0    0    0    0    8    7    6    5    4    3    2    1\x0a  600180 600304 MOD11    0    0    0    0    0    0    8    7    6    5    4    3    2    1\x0a  600307 600312 MOD11    0    0    0    0    0    0    8    7    6    5    4    3    2    1\x0a  600314 600355 MOD11    0    0    0    0    0    0    8    7    6    5    4    3    2    1\x0a  600357 600851 MOD11    0    0    0    0    0    0    8    7    6    5    4    3    2    1\x0a  600901 601360 MOD11    0    0    0    0    0    0    8    7    6    5    4    3    2    1\x0a  601403 608028 MOD11    0    0    0    0    0    0    8    7    6    5    4    3    2    1\x0a  608301 608301 MOD10    0    0    0    0    0    0    7    1    3    7    1    3    7    1\x0a  608316 608316 MOD10    0    0    0    0    0    0    8    7    6    5    4    3    2    1\x0a  608370 608370 MOD11    0    0    0    0    0    0    8    7    6    5    4    3    2    1\x0a  608371 608371 MOD11    0    0    0    0    0    0    2    8    4    3    7    5    6    1\x0a  609593 609593 MOD10    0    0    0    0    0    0    7    1    3    7    1    3    7    1\x0a  609599 609599 MOD10    0    0    0    0    0    0    0    5    7    5    2    1    2    1\x0a  640001 640001 MOD11    0    0    0    0    0    0    8    7    6    5    4    3    2    1\x0a  720000 720249 MOD11    0    0    0    0    0    9    8    7    6    5    4    3    2    1\x0a  720251 724443 MOD11    0    0    0    0    0    9    8    7    6    5    4    3    2    1\x0a  725000 725251 MOD11    0    0    0    0    0    9    8    7    6    5    4    3    2    1\x0a  725253 725616 MOD11    0    0    0    0    0    9    8    7    6    5    4    3    2    1\x0a  726000 726616 MOD11    0    0    0    0    0    9    8    7    6    5    4    3    2    1\x0a  770100 771799 MOD11    0    0    1    2    5    3    6    4    8    7   10    9    3    1   7\x0a  771877 771877 MOD11    0    0    1    2    5    3    6    4    8    7   10    9    3    1   7\x0a  771900 772799 MOD11    0    0    1    2    5    3    6    4    8    7   10    9    3    1   7\x0a  772813 772817 MOD11    0    0    1    2    5    3    6    4    8    7   10    9    3    1   7\x0a  772901 773999 MOD11    0    0    1    2    5    3    6    4    8    7   10    9    3    1   7\x0a  774100 774599 MOD11    0    0    1    2    5    3    6    4    8    7   10    9    3    1   7\x0a  774700 774830 MOD11    0    0    1    2    5    3    6    4    8    7   10    9    3    1   7\x0a  774832 777789 MOD11    0    0    1    2    5    3    6    4    8    7   10    9    3    1   7\x0a  777791 777999 MOD11    0    0    1    2    5    3    6    4    8    7   10    9    3    1   7\x0a  778001 778001 MOD11    0    0    1    2    5    3    6    4    8    7   10    9    3    1   7\x0a  778300 778799 MOD11    0    0    1    2    5    3    6    4    8    7   10    9    3    1   7\x0a  778855 778855 MOD11    0    0    1    2    5    3    6    4    8    7   10    9    3    1   7\x0a  778900 779174 MOD11    0    0    1    2    5    3    6    4    8    7   10    9    3    1   7\x0a  779414 779999 MOD11    0    0    1    2    5    3    6    4    8    7   10    9    3    1   7\x0a  800000 802005 MOD11    0    0    1    8    2    6    3    7    9    5    8    4    2    1\x0a  802007 802042 MOD11    0    0    1    8    2    6    3    7    9    5    8    4    2    1\x0a  802044 802065 MOD11    0    0    1    8    2    6    3    7    9    5    8    4    2    1\x0a  802067 802109 MOD11    0    0    1    8    2    6    3    7    9    5    8    4    2    1\x0a  802111 802114 MOD11    0    0    1    8    2    6    3    7    9    5    8    4    2    1\x0a  802116 802123 MOD11    0    0    1    8    2    6    3    7    9    5    8    4    2    1\x0a  802151 802154 MOD11    0    0    1    8    2    6    3    7    9    5    8    4    2    1\x0a  802156 802179 MOD11    0    0    1    8    2    6    3    7    9    5    8    4    2    1\x0a  802181 803599 MOD11    0    0    1    8    2    6    3    7    9    5    8    4    2    1\x0a  803609 819999 MOD11    0    0    1    8    2    6    3    7    9    5    8    4    2    1\x0a  820000 826917 MOD11    0    0    0    0    0    0    0    0    7    3    4    9    2    1\x0a  820000 826917 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1   3\x0a  826919 827999 MOD11    0    0    0    0    0    0    0    0    7    3    4    9    2    1\x0a  826919 827999 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1   3\x0a  829000 829999 MOD11    0    0    0    0    0    0    0    0    7    3    4    9    2    1\x0a  829000 829999 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1   3\x0a  830000 835700 MOD11    0    0    4    3    2    7    2    7    6    5    4    3    2    1\x0a  836500 836501 MOD11    0    0    4    3    2    7    2    7    6    5    4    3    2    1\x0a  836505 836506 MOD11    0    0    4    3    2    7    2    7    6    5    4    3    2    1\x0a  836510 836510 MOD11    0    0    4    3    2    7    2    7    6    5    4    3    2    1\x0a  836515 836515 MOD11    0    0    4    3    2    7    2    7    6    5    4    3    2    1\x0a  836530 836530 MOD11    0    0    4    3    2    7    2    7    6    5    4    3    2    1\x0a  836535 836535 MOD11    0    0    4    3    2    7    2    7    6    5    4    3    2    1\x0a  836540 836540 MOD11    0    0    4    3    2    7    2    7    6    5    4    3    2    1\x0a  836560 836560 MOD11    0    0    4    3    2    7    2    7    6    5    4    3    2    1\x0a  836565 836565 MOD11    0    0    4    3    2    7    2    7    6    5    4    3    2    1\x0a  836570 836570 MOD11    0    0    4    3    2    7    2    7    6    5    4    3    2    1\x0a  836585 836585 MOD11    0    0    4    3    2    7    2    7    6    5    4    3    2    1\x0a  836590 836590 MOD11    0    0    4    3    2    7    2    7    6    5    4    3    2    1\x0a  836595 836595 MOD11    0    0    4    3    2    7    2    7    6    5    4    3    2    1\x0a  836620 836620 MOD11    0    0    4    3    2    7    2    7    6    5    4    3    2    1\x0a  836625 836625 MOD11    0    0    4    3    2    7    2    7    6    5    4    3    2    1\x0a  836630 836630 MOD11    0    0    4    3    2    7    2    7    6    5    4    3    2    1\x0a  837550 837550 MOD11    0    0    4    3    2    7    2    7    6    5    4    3    2    1\x0a  837560 837560 MOD11    0    0    4    3    2    7    2    7    6    5    4    3    2    1\x0a  837570 837570 MOD11    0    0    4    3    2    7    2    7    6    5    4    3    2    1\x0a  837580 837580 MOD11    0    0    4    3    2    7    2    7    6    5    4    3    2    1\x0a  839105 839106 MOD11    7    6    5    4    3    2    7    6    5    4    3    2    1    0\x0a  839105 839106 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  839130 839131 MOD11    7    6    5    4    3    2    7    6    5    4    3    2    1    0\x0a  839130 839131 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  839147 839147 MOD10    0    0    0    0    0    0    0    5    7    5    2    1    2    1\x0a  870000 872791 MOD11    0    0    1    2    5    3    6    4    8    7   10    9    3    1  10\x0a  870000 872791 MOD11    0    0    5   10    9    8    0    7    6    5    4    3    2    1  11\x0a  872793 876899 MOD11    0    0    1    2    5    3    6    4    8    7   10    9    3    1  10\x0a  872793 876899 MOD11    0    0    5   10    9    8    0    7    6    5    4    3    2    1  11\x0a  876919 876919 MOD11    0    0    1    2    5    3    6    4    8    7   10    9    3    1  10\x0a  876919 876919 MOD11    0    0    5   10    9    8    0    7    6    5    4    3    2    1  11\x0a  876921 876923 MOD11    0    0    1    2    5    3    6    4    8    7   10    9    3    1  10\x0a  876921 876923 MOD11    0    0    5   10    9    8    0    7    6    5    4    3    2    1  11\x0a  876925 876932 MOD11    0    0    1    2    5    3    6    4    8    7   10    9    3    1  10\x0a  876925 876932 MOD11    0    0    5   10    9    8    0    7    6    5    4    3    2    1  11\x0a  876935 876935 MOD11    0    0    1    2    5    3    6    4    8    7   10    9    3    1  10\x0a  876935 876935 MOD11    0    0    5   10    9    8    0    7    6    5    4    3    2    1  11\x0a  876951 876951 MOD11    0    0    1    2    5    3    6    4    8    7   10    9    3    1  10\x0a  876951 876951 MOD11    0    0    5   10    9    8    0    7    6    5    4    3    2    1  11\x0a  876953 876955 MOD11    0    0    1    2    5    3    6    4    8    7   10    9    3    1  10\x0a  876953 876955 MOD11    0    0    5   10    9    8    0    7    6    5    4    3    2    1  11\x0a  876957 876957 MOD11    0    0    1    2    5    3    6    4    8    7   10    9    3    1  10\x0a  876957 876957 MOD11    0    0    5   10    9    8    0    7    6    5    4    3    2    1  11\x0a  876961 876965 MOD11    0    0    1    2    5    3    6    4    8    7   10    9    3    1  10\x0a  876961 876965 MOD11    0    0    5   10    9    8    0    7    6    5    4    3    2    1  11\x0a  877000 877070 MOD11    0    0    1    2    5    3    6    4    8    7   10    9    3    1  10\x0a  877000 877070 MOD11    0    0    5   10    9    8    0    7    6    5    4    3    2    1  11\x0a  877071 877071 MOD11    0    0    1    2    5    3    6    4    8    7   10    9    3    1  10\x0a  877071 877071 MOD11    0    0    5   10    9    8    0    7    6    5    4    3    2    1  11\x0a  877078 877078 MOD11    0    0    1    2    5    3    6    4    8    7   10    9    3    1  10\x0a  877078 877078 MOD11    0    0    5   10    9    8    0    7    6    5    4    3    2    1  11\x0a  877088 877088 MOD11    0    0    1    2    5    3    6    4    8    7   10    9    3    1  10\x0a  877088 877088 MOD11    0    0    5   10    9    8    0    7    6    5    4    3    2    1  11\x0a  877090 877090 MOD11    0    0    1    2    5    3    6    4    8    7   10    9    3    1  10\x0a  877090 877090 MOD11    0    0    5   10    9    8    0    7    6    5    4    3    2    1  11\x0a  877098 877098 MOD11    0    0    1    2    5    3    6    4    8    7   10    9    3    1  10\x0a  877098 877098 MOD11    0    0    5   10    9    8    0    7    6    5    4    3    2    1  11\x0a  877099 879999 MOD11    0    0    1    2    5    3    6    4    8    7   10    9    3    1  10\x0a  877099 879999 MOD11    0    0    5   10    9    8    0    7    6    5    4    3    2    1  11\x0a  890000 890699 MOD11    0    0    0    0    0    9    8    7    6    5    4    3    2    1\x0a  891000 891616 MOD11    0    0    0    0    0    9    8    7    6    5    4    3    2    1\x0a  892000 892616 MOD11    0    0    0    0    0    9    8    7    6    5    4    3    2    1\x0a  900000 902396 MOD11    0    0    0    0    0    0  128   64   32   16    8    4    2    1\x0a  900000 902396 MOD11   32   16    8    4    2    1    0    0    0    0    0    0    0    0\x0a  902398 909999 MOD11    0    0    0    0    0    0  128   64   32   16    8    4    2    1\x0a  902398 909999 MOD11   32   16    8    4    2    1    0    0    0    0    0    0    0    0\x0a  938000 938696 MOD11    7    6    5    4    3    2    7    6    5    4    3    2    0    0   5\x0a  938000 938696 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    0   5\x0a  938698 938999 MOD11    7    6    5    4    3    2    7    6    5    4    3    2    0    0   5\x0a  938698 938999 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    0   5\x0a  950000 950002 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1\x0a  950000 950002 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  950004 950479 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1\x0a  950004 950479 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  950500 959999 MOD11    0    0    0    0    0    0    0    7    6    5    4    3    2    1\x0a  950500 959999 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  980000 980004 MOD11    0    0    0    0    0    0    7    6    5    4    3    2    1    0\x0a  980000 980004 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  980006 983000 MOD11    0    0    0    0    0    0    7    6    5    4    3    2    1    0\x0a  980006 983000 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  983003 987000 MOD11    0    0    0    0    0    0    7    6    5    4    3    2    1    0\x0a  983003 987000 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  987004 989999 MOD11    0    0    0    0    0    0    7    6    5    4    3    2    1    0\x0a  987004 989999 DBLAL    2    1    2    1    2    1    2    1    2    1    2    1    2    1\x0a  ";
  var scsubtab = "\x0a  938173 938017\x0a  938289 938068\x0a  938297 938076\x0a  938600 938611\x0a  938602 938343\x0a  938604 938603\x0a  938608 938408\x0a  938609 938424\x0a  938613 938017\x0a  938616 938068\x0a  938618 938657\x0a  938620 938343\x0a  938622 938130\x0a  938628 938181\x0a  938643 938246\x0a  938647 938611\x0a  938648 938246\x0a  938649 938394\x0a  938651 938335\x0a  938653 938424\x0a  938654 938621\x0a  ";
  exports["scsubtab"] = scsubtab;
  exports["valacdos_v410"] = valacdos_v410;
})(PS["ModulusCheck.Resources"] = PS["ModulusCheck.Resources"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Either = PS["Data.Either"];
  var Data_List = PS["Data.List"];
  var Data_Map = PS["Data.Map"];
  var Data_Maybe = PS["Data.Maybe"];
  var ModulusCheck_Data_AccountNumber = PS["ModulusCheck.Data.AccountNumber"];
  var ModulusCheck_Data_CheckRow = PS["ModulusCheck.Data.CheckRow"];
  var ModulusCheck_Data_CheckRow_Parser = PS["ModulusCheck.Data.CheckRow.Parser"];
  var ModulusCheck_Data_SubstitutionRow_Parser = PS["ModulusCheck.Data.SubstitutionRow.Parser"];
  var ModulusCheck_Parsers = PS["ModulusCheck.Parsers"];
  var ModulusCheck_Resources = PS["ModulusCheck.Resources"];
  var ModulusCheckTypes = PS["ModulusCheckTypes"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Ord = PS["Data.Ord"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Function = PS["Data.Function"];        
  var sortCodeSubstitutionTable = ModulusCheck_Parsers.parse(ModulusCheck_Resources.scsubtab)(ModulusCheck_Data_SubstitutionRow_Parser.sortCodeSubstitutionTableParser);
  var getSortCodeSubstitution = function (sortCode) {
      return Control_Bind.bind(Data_Either.bindEither)(sortCodeSubstitutionTable)(function ($6) {
          return Control_Applicative.pure(Data_Either.applicativeEither)(Data_Map.lookup(Data_Ord.ordString)(sortCode)($6));
      });
  };
  var checkRowsTable = ModulusCheck_Parsers.parse(ModulusCheck_Resources.valacdos_v410)(ModulusCheck_Data_CheckRow_Parser.checkRowTableParser);
  var getCheckRows = function (sortCodeString) {
      var relevantRow = function (v) {
          return v.from <= sortCodeString && v.to >= sortCodeString;
      };
      return Control_Bind.bind(Data_Either.bindEither)(checkRowsTable)(function (v) {
          return Control_Applicative.pure(Data_Either.applicativeEither)(Data_List.filter(relevantRow)(v));
      });
  };
  exports["getCheckRows"] = getCheckRows;
  exports["getSortCodeSubstitution"] = getSortCodeSubstitution;
})(PS["ModulusCheck.Data.Tables"] = PS["ModulusCheck.Data.Tables"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Either = PS["Data.Either"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Int = PS["Data.Int"];
  var Data_Lazy = PS["Data.Lazy"];
  var Data_List = PS["Data.List"];
  var Data_Maybe = PS["Data.Maybe"];
  var $$Math = PS["Math"];
  var ModulusCheck_Data_AccountNumber = PS["ModulusCheck.Data.AccountNumber"];
  var ModulusCheck_Data_CheckRow = PS["ModulusCheck.Data.CheckRow"];
  var ModulusCheck_Data_Tables = PS["ModulusCheck.Data.Tables"];
  var ModulusCheckTypes = PS["ModulusCheckTypes"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_EuclideanRing = PS["Data.EuclideanRing"];
  var Data_Function = PS["Data.Function"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Eq = PS["Data.Eq"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_Ring = PS["Data.Ring"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Control_Apply = PS["Control.Apply"];        
  var sumDigits = function (xs) {
      var digitSumLoop = function (__copy_acc) {
          return function (__copy_x) {
              var acc = __copy_acc;
              var x = __copy_x;
              tco: while (true) {
                  if (x < 10) {
                      return acc + x | 0;
                  };
                  if (Data_Boolean.otherwise) {
                      var __tco_acc = acc + Data_Int.round($$Math.remainder(Data_Int.toNumber(x))(10.0)) | 0;
                      var __tco_x = x / 10 | 0;
                      acc = __tco_acc;
                      x = __tco_x;
                      continue tco;
                  };
                  throw new Error("Failed pattern match at ModulusCheck.Checks line 224, column 5 - line 226, column 88: " + [ acc.constructor.name, x.constructor.name ]);
              };
          };
      };
      var digitSum = function (x) {
          return digitSumLoop(0)(x);
      };
      return Data_Foldable.sum(Data_List_Types.foldableList)(Data_Semiring.semiringInt)(Data_Functor.map(Data_List_Types.functorList)(digitSum)(xs));
  };
  var modCheck = function (modulus) {
      return function (expected) {
          return function (x) {
              return Data_Int.round($$Math.remainder(Data_Int.toNumber(x))(Data_Int.toNumber(modulus))) === expected;
          };
      };
  };
  var isStandardCheck = function (v) {
      if (v.exceptionCode instanceof Data_Maybe.Nothing) {
          return true;
      };
      return false;
  };
  var dotMul = function (xs) {
      return function (ys) {
          return Data_List.zipWith(Data_Semiring.mul(Data_Semiring.semiringInt))(xs)(ys);
      };
  };
  var doubleAlternateSum = function (weights) {
      return function (digits) {
          return sumDigits(dotMul(weights)(digits));
      };
  };
  var doubleAlternateCheck = function (w) {
      return function ($78) {
          return modCheck(10)(0)(doubleAlternateSum(w)($78));
      };
  };
  var exception1Check = function (checkRow) {
      return function (accountNumber) {
          return modCheck(10)(0)(27 + doubleAlternateSum(checkRow.weights)(accountNumber.digits) | 0);
      };
  };
  var standardModSum = function (weights) {
      return function (digits) {
          return Data_Foldable.sum(Data_List_Types.foldableList)(Data_Semiring.semiringInt)(dotMul(weights)(digits));
      };
  };
  var exception4Check = function (w) {
      return function (accountNumber) {
          return Control_Bind.bind(Data_Either.bindEither)(ModulusCheck_Data_AccountNumber.getDigit("g")(accountNumber.digits))(function (v) {
              return Control_Bind.bind(Data_Either.bindEither)(ModulusCheck_Data_AccountNumber.getDigit("h")(accountNumber.digits))(function (v1) {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(modCheck(11)((v * 10 | 0) + v1 | 0)(standardModSum(w)(accountNumber.digits)));
              });
          });
      };
  };
  var exception5Check = function (mod11Weights) {
      return function (dblAlWeights) {
          return function (accountNumber) {
              var sortCodeReplaced = Control_Bind.bind(Data_Either.bindEither)(ModulusCheck_Data_Tables.getSortCodeSubstitution(accountNumber.sortCodeString))(function (v) {
                  if (v instanceof Data_Maybe.Just) {
                      return ModulusCheck_Data_AccountNumber.replacePrefix(v.value0)(accountNumber.digits);
                  };
                  if (v instanceof Data_Maybe.Nothing) {
                      return Control_Applicative.pure(Data_Either.applicativeEither)(accountNumber.digits);
                  };
                  throw new Error("Failed pattern match at ModulusCheck.Checks line 99, column 7 - line 101, column 45: " + [ v.constructor.name ]);
              });
              var performMod11Check = function (v) {
                  return function (v1) {
                      if (v1 === 0) {
                          return modCheck(11)(0)(v);
                      };
                      if (v1 === 1) {
                          return false;
                      };
                      return modCheck(11)(11 - v1 | 0)(v);
                  };
              };
              var performDblAlCheck = function (sum) {
                  return function (v) {
                      if (v === 0) {
                          return modCheck(10)(0)(sum);
                      };
                      return modCheck(10)(10 - v | 0)(sum);
                  };
              };
              var secondCheck = function (w) {
                  return function (d) {
                      return Control_Bind.bind(Data_Either.bindEither)(ModulusCheck_Data_AccountNumber.getDigit("h")(d))(function ($79) {
                          return Control_Applicative.pure(Data_Either.applicativeEither)(performDblAlCheck(doubleAlternateSum(w)(d))($79));
                      });
                  };
              };
              var firstCheck = function (w) {
                  return function (d) {
                      return Control_Bind.bind(Data_Either.bindEither)(ModulusCheck_Data_AccountNumber.getDigit("g")(d))(function ($80) {
                          return Control_Applicative.pure(Data_Either.applicativeEither)(performMod11Check(standardModSum(w)(d))($80));
                      });
                  };
              };
              return Control_Bind.bind(Data_Either.bindEither)(sortCodeReplaced)(function (v) {
                  return Control_Bind.bind(Data_Either.bindEither)(firstCheck(mod11Weights)(v))(function (v1) {
                      return Control_Bind.bind(Data_Either.bindEither)(secondCheck(dblAlWeights)(v))(function (v2) {
                          return Control_Applicative.pure(Data_Either.applicativeEither)(v1 && v2);
                      });
                  });
              });
          };
      };
  };
  var mod10Check = function (w) {
      return function ($81) {
          return modCheck(10)(0)(standardModSum(w)($81));
      };
  };
  var mod11Check = function (w) {
      return function ($82) {
          return modCheck(11)(0)(standardModSum(w)($82));
      };
  };
  var exception2Check = function (weights) {
      return function (accountNumber) {
          var nonNineSubstitute = new Data_List_Types.Cons(0, new Data_List_Types.Cons(0, new Data_List_Types.Cons(1, new Data_List_Types.Cons(2, new Data_List_Types.Cons(5, new Data_List_Types.Cons(3, new Data_List_Types.Cons(6, new Data_List_Types.Cons(4, new Data_List_Types.Cons(8, new Data_List_Types.Cons(7, new Data_List_Types.Cons(10, new Data_List_Types.Cons(9, new Data_List_Types.Cons(3, new Data_List_Types.Cons(1, Data_List_Types.Nil.value))))))))))))));
          var nineSubstitute = new Data_List_Types.Cons(0, new Data_List_Types.Cons(0, new Data_List_Types.Cons(0, new Data_List_Types.Cons(0, new Data_List_Types.Cons(0, new Data_List_Types.Cons(0, new Data_List_Types.Cons(0, new Data_List_Types.Cons(0, new Data_List_Types.Cons(8, new Data_List_Types.Cons(7, new Data_List_Types.Cons(10, new Data_List_Types.Cons(9, new Data_List_Types.Cons(3, new Data_List_Types.Cons(1, Data_List_Types.Nil.value))))))))))))));
          var newWeights = function (v) {
              return function (v1) {
                  if (v === 0) {
                      return weights;
                  };
                  if (v1 === 9) {
                      return nineSubstitute;
                  };
                  return nonNineSubstitute;
              };
          };
          var w = Control_Apply.apply(Data_Either.applyEither)(Data_Functor.map(Data_Either.functorEither)(newWeights)(ModulusCheck_Data_AccountNumber.getDigit("a")(accountNumber.digits)))(ModulusCheck_Data_AccountNumber.getDigit("g")(accountNumber.digits));
          return Data_Functor.map(Data_Either.functorEither)(Data_Function.flip(mod11Check)(accountNumber.digits))(w);
      };
  };
  var exception9Check = function (weights) {
      return function (accountNumber) {
          var sortCodeReplacement = new Data_List_Types.Cons(3, new Data_List_Types.Cons(0, new Data_List_Types.Cons(9, new Data_List_Types.Cons(6, new Data_List_Types.Cons(3, new Data_List_Types.Cons(4, Data_List_Types.Nil.value))))));
          return Control_Bind.bind(Data_Either.bindEither)(ModulusCheck_Data_AccountNumber.replacePrefix(sortCodeReplacement)(accountNumber.digits))(function ($83) {
              return Control_Applicative.pure(Data_Either.applicativeEither)(mod11Check(weights)($83));
          });
      };
  };
  var performStandardCheck = function (v) {
      return function (accountNumber) {
          if (v.checkMethod instanceof ModulusCheck_Data_CheckRow.DblAl) {
              return doubleAlternateCheck(v.weights)(accountNumber.digits);
          };
          if (v.checkMethod instanceof ModulusCheck_Data_CheckRow.Mod10) {
              return mod10Check(v.weights)(accountNumber.digits);
          };
          if (v.checkMethod instanceof ModulusCheck_Data_CheckRow.Mod11) {
              return mod11Check(v.weights)(accountNumber.digits);
          };
          throw new Error("Failed pattern match at ModulusCheck.Checks line 37, column 1 - line 37, column 132: " + [ v.constructor.name, accountNumber.constructor.name ]);
      };
  };
  var exception10Check = function (row) {
      return function (accountNumber) {
          var performException10Check = function (v) {
              return function (v1) {
                  return function (v2) {
                      if (v1 === 9 && (v2 === 9 && (v === 0 || v === 9))) {
                          return performStandardCheck(ModulusCheck_Data_CheckRow.zeroiseUtoB(row))(accountNumber);
                      };
                      return performStandardCheck(row)(accountNumber);
                  };
              };
          };
          return Control_Bind.bind(Data_Either.bindEither)(ModulusCheck_Data_AccountNumber.getDigit("a")(accountNumber.digits))(function (v) {
              return Control_Bind.bind(Data_Either.bindEither)(ModulusCheck_Data_AccountNumber.getDigit("b")(accountNumber.digits))(function (v1) {
                  return Control_Bind.bind(Data_Either.bindEither)(ModulusCheck_Data_AccountNumber.getDigit("g")(accountNumber.digits))(function (v2) {
                      return Control_Applicative.pure(Data_Either.applicativeEither)(performException10Check(v)(v1)(v2));
                  });
              });
          });
      };
  };
  var exception11Check = function (row) {
      return function ($84) {
          return Control_Applicative.pure(Data_Either.applicativeEither)(performStandardCheck(row)($84));
      };
  };
  var exception3Check = function (standardCheckRow) {
      return function (dblAlCheckWeights) {
          return function (accountNumber) {
              var performException3Check = function (v) {
                  return function (v1) {
                      return function (v2) {
                          if (v === 6) {
                              return true;
                          };
                          if (v === 9) {
                              return true;
                          };
                          return doubleAlternateCheck(v1)(v2.digits);
                      };
                  };
              };
              return Control_Bind.bind(Data_Either.bindEither)(ModulusCheck_Data_AccountNumber.getDigit("c")(accountNumber.digits))(function (c) {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(performStandardCheck(standardCheckRow)(accountNumber) && performException3Check(c)(dblAlCheckWeights)(accountNumber));
              });
          };
      };
  };
  var exception6Check = function (row1) {
      return function (row2) {
          return function (accountNumber) {
              var performCheck = function (v) {
                  return function (v1) {
                      if (v === 4 && v1) {
                          return Control_Applicative.pure(Data_Either.applicativeEither)(true);
                      };
                      if (v === 5 && v1) {
                          return Control_Applicative.pure(Data_Either.applicativeEither)(true);
                      };
                      if (v === 6 && v1) {
                          return Control_Applicative.pure(Data_Either.applicativeEither)(true);
                      };
                      if (v === 7 && v1) {
                          return Control_Applicative.pure(Data_Either.applicativeEither)(true);
                      };
                      if (v === 8 && v1) {
                          return Control_Applicative.pure(Data_Either.applicativeEither)(true);
                      };
                      return Control_Applicative.pure(Data_Either.applicativeEither)(performStandardCheck(row1)(accountNumber) && performStandardCheck(row2)(accountNumber));
                  };
              };
              return Control_Bind.bind(Data_Either.bindEither)(ModulusCheck_Data_AccountNumber.getDigit("a")(accountNumber.digits))(function (v) {
                  return Control_Bind.bind(Data_Either.bindEither)(ModulusCheck_Data_AccountNumber.getDigit("g")(accountNumber.digits))(function (v1) {
                      return Control_Bind.bind(Data_Either.bindEither)(ModulusCheck_Data_AccountNumber.getDigit("h")(accountNumber.digits))(function (v2) {
                          return performCheck(v)(v1 === v2);
                      });
                  });
              });
          };
      };
  };
  var exception7Check = function (row) {
      return function (accountNumber) {
          var performCheck = function (v) {
              if (v === 9) {
                  return performStandardCheck(ModulusCheck_Data_CheckRow.zeroiseUtoB(row))(accountNumber);
              };
              return performStandardCheck(row)(accountNumber);
          };
          return Control_Bind.bind(Data_Either.bindEither)(ModulusCheck_Data_AccountNumber.getDigit("g")(accountNumber.digits))(function ($85) {
              return Control_Applicative.pure(Data_Either.applicativeEither)(performCheck($85));
          });
      };
  };
  var exception8Check = function (row) {
      return function (accountNumber) {
          var replacement = new Data_List_Types.Cons(0, new Data_List_Types.Cons(9, new Data_List_Types.Cons(0, new Data_List_Types.Cons(1, new Data_List_Types.Cons(2, new Data_List_Types.Cons(6, Data_List_Types.Nil.value))))));
          var replaceSortCode = function (x) {
              return Control_Bind.bind(Data_Either.bindEither)(ModulusCheck_Data_AccountNumber.replacePrefix(replacement)(x.digits))(function (newDigits) {
                  return Control_Applicative.pure(Data_Either.applicativeEither)((function () {
                      var $70 = {};
                      for (var $71 in x) {
                          if ({}.hasOwnProperty.call(x, $71)) {
                              $70[$71] = x[$71];
                          };
                      };
                      $70.digits = newDigits;
                      return $70;
                  })());
              });
          };
          return Control_Bind.bind(Data_Either.bindEither)(replaceSortCode(accountNumber))(function ($86) {
              return Control_Applicative.pure(Data_Either.applicativeEither)(performStandardCheck(row)($86));
          });
      };
  };
  var exceptions12and13Check = function (row1) {
      return function (row2) {
          return function (accountNumber) {
              return performStandardCheck(row1)(accountNumber) || performStandardCheck(row2)(accountNumber);
          };
      };
  };
  var anyEither = function (v) {
      return function (v1) {
          if (v instanceof Data_Either.Left) {
              return v;
          };
          if (v instanceof Data_Either.Right && v.value0) {
              return v;
          };
          return Data_Lazy.force(v1);
      };
  };
  var exception14Check = function (row) {
      return function (accountNumber) {
          var checkWithH = function (h) {
              if (h === 0 || (h === 1 || h === 9)) {
                  return mod11Check(row.weights)(ModulusCheck_Data_AccountNumber.shiftAccountNumberRight(accountNumber.digits));
              };
              if (Data_Boolean.otherwise) {
                  return false;
              };
              throw new Error("Failed pattern match at ModulusCheck.Checks line 186, column 5 - line 188, column 48: " + [ h.constructor.name ]);
          };
          var performExceptionCheck = function (v) {
              return Control_Bind.bind(Data_Either.bindEither)(ModulusCheck_Data_AccountNumber.getDigit("h")(accountNumber.digits))(function ($87) {
                  return Control_Applicative.pure(Data_Either.applicativeEither)(checkWithH($87));
              });
          };
          return anyEither(Control_Applicative.pure(Data_Either.applicativeEither)(mod11Check(row.weights)(accountNumber.digits)))(Data_Lazy.defer(performExceptionCheck));
      };
  };
  var exceptions10and11Check = function (row1) {
      return function (row2) {
          return function (accountNumber) {
              return anyEither(exception10Check(row1)(accountNumber))(Data_Lazy.defer(function (unit) {
                  return exception11Check(row2)(accountNumber);
              }));
          };
      };
  };
  var exceptions2And9Check = function (weights2) {
      return function (weights9) {
          return function (accountNumber) {
              return anyEither(exception2Check(weights2)(accountNumber))(Data_Lazy.defer(function (unit) {
                  return exception9Check(weights9)(accountNumber);
              }));
          };
      };
  };
  exports["exception14Check"] = exception14Check;
  exports["exception1Check"] = exception1Check;
  exports["exception3Check"] = exception3Check;
  exports["exception4Check"] = exception4Check;
  exports["exception5Check"] = exception5Check;
  exports["exception6Check"] = exception6Check;
  exports["exception7Check"] = exception7Check;
  exports["exception8Check"] = exception8Check;
  exports["exceptions10and11Check"] = exceptions10and11Check;
  exports["exceptions12and13Check"] = exceptions12and13Check;
  exports["exceptions2And9Check"] = exceptions2And9Check;
  exports["isStandardCheck"] = isStandardCheck;
  exports["performStandardCheck"] = performStandardCheck;
})(PS["ModulusCheck.Checks"] = PS["ModulusCheck.Checks"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Either = PS["Data.Either"];
  var Data_List = PS["Data.List"];
  var Text_Parsing_Parser = PS["Text.Parsing.Parser"];
  var Text_Parsing_Parser_Combinators = PS["Text.Parsing.Parser.Combinators"];
  var Text_Parsing_Parser_String = PS["Text.Parsing.Parser.String"];
  var ModulusCheck_Data_AccountNumber = PS["ModulusCheck.Data.AccountNumber"];
  var ModulusCheck_Parsers = PS["ModulusCheck.Parsers"];
  var ModulusCheckTypes = PS["ModulusCheckTypes"];
  var Control_Apply = PS["Control.Apply"];
  var Data_Identity = PS["Data.Identity"];
  var Data_List_Types = PS["Data.List.Types"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Function = PS["Data.Function"];
  var Control_Applicative = PS["Control.Applicative"];        
  var standardAccountNumberParser = {
      accountDigitsParser: Control_Apply.applyFirst(Text_Parsing_Parser.applyParserT(Data_Identity.monadIdentity))(ModulusCheck_Parsers.digitsParser(8))(Text_Parsing_Parser_String.eof(Text_Parsing_Parser_String.stringLikeString)(Data_Identity.monadIdentity)), 
      transform: function (s) {
          return function (a) {
              return Data_List.concat(new Data_List_Types.Cons(s, new Data_List_Types.Cons(a, Data_List_Types.Nil.value)));
          };
      }
  };
  var sortCodeParser = Control_Apply.applyFirst(Text_Parsing_Parser.applyParserT(Data_Identity.monadIdentity))(ModulusCheck_Parsers.digitsParser(6))(Text_Parsing_Parser_String.eof(Text_Parsing_Parser_String.stringLikeString)(Data_Identity.monadIdentity));
  var sixDigitAccountNumberParser = {
      accountDigitsParser: Control_Apply.applyFirst(Text_Parsing_Parser.applyParserT(Data_Identity.monadIdentity))(ModulusCheck_Parsers.digitsParser(6))(Text_Parsing_Parser_String.eof(Text_Parsing_Parser_String.stringLikeString)(Data_Identity.monadIdentity)), 
      transform: function (s) {
          return function (a) {
              return Data_List.concat(new Data_List_Types.Cons(s, new Data_List_Types.Cons(new Data_List_Types.Cons(0, new Data_List_Types.Cons(0, Data_List_Types.Nil.value)), new Data_List_Types.Cons(a, Data_List_Types.Nil.value))));
          };
      }
  };
  var sevenDigitAccountNumberParser = {
      accountDigitsParser: Control_Apply.applyFirst(Text_Parsing_Parser.applyParserT(Data_Identity.monadIdentity))(ModulusCheck_Parsers.digitsParser(7))(Text_Parsing_Parser_String.eof(Text_Parsing_Parser_String.stringLikeString)(Data_Identity.monadIdentity)), 
      transform: function (s) {
          return function (a) {
              return Data_List.concat(new Data_List_Types.Cons(s, new Data_List_Types.Cons(new Data_List_Types.Cons(0, Data_List_Types.Nil.value), new Data_List_Types.Cons(a, Data_List_Types.Nil.value))));
          };
      }
  };
  var santanderAccountNumberParser = {
      accountDigitsParser: Control_Apply.applyFirst(Text_Parsing_Parser.applyParserT(Data_Identity.monadIdentity))(ModulusCheck_Parsers.digitsParser(9))(Text_Parsing_Parser_String.eof(Text_Parsing_Parser_String.stringLikeString)(Data_Identity.monadIdentity)), 
      transform: function (s) {
          return function (a) {
              return Data_List.concat(new Data_List_Types.Cons(Data_List.take(5)(s), new Data_List_Types.Cons(a, Data_List_Types.Nil.value)));
          };
      }
  };
  var parseAccountNumber = function (sortCodeString) {
      return function (accountNumberString) {
          return function (parser) {
              return Control_Bind.bind(Data_Either.bindEither)(ModulusCheck_Parsers.parseWithError("Sort code must contain exactly 6 decimal digits without dashes")(sortCodeString)(sortCodeParser))(function (v) {
                  return Control_Bind.bind(Data_Either.bindEither)(ModulusCheck_Parsers.parseWithError("Account number format is not valid")(accountNumberString)(parser.accountDigitsParser))(function (v1) {
                      return Control_Applicative.pure(Data_Either.applicativeEither)(ModulusCheck_Data_AccountNumber.accountNumber(sortCodeString)(parser.transform(v)(v1)));
                  });
              });
          };
      };
  };
  var nationalWestMinsterAccountNumberParser = {
      accountDigitsParser: Control_Bind.bind(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(ModulusCheck_Parsers.digitsParser(2))(function (v) {
          return Control_Bind.bind(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser_Combinators.optional(Data_Identity.monadIdentity)(Text_Parsing_Parser_String.string(Text_Parsing_Parser_String.stringLikeString)(Data_Identity.monadIdentity)("-")))(function (v1) {
              return Control_Bind.bind(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(ModulusCheck_Parsers.digitsParser(8))(function (v2) {
                  return Control_Bind.bind(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser_String.eof(Text_Parsing_Parser_String.stringLikeString)(Data_Identity.monadIdentity))(function (v3) {
                      return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(Data_Identity.monadIdentity))(v2);
                  });
              });
          });
      }), 
      transform: function (s) {
          return function (a) {
              return Data_List.concat(new Data_List_Types.Cons(s, new Data_List_Types.Cons(a, Data_List_Types.Nil.value)));
          };
      }
  };
  var coOperativeAccountNumberParser = {
      accountDigitsParser: Control_Apply.applyFirst(Text_Parsing_Parser.applyParserT(Data_Identity.monadIdentity))(Control_Apply.applyFirst(Text_Parsing_Parser.applyParserT(Data_Identity.monadIdentity))(ModulusCheck_Parsers.digitsParser(8))(ModulusCheck_Parsers.digitsParser(2)))(Text_Parsing_Parser_String.eof(Text_Parsing_Parser_String.stringLikeString)(Data_Identity.monadIdentity)), 
      transform: function (s) {
          return function (a) {
              return Data_List.concat(new Data_List_Types.Cons(s, new Data_List_Types.Cons(a, Data_List_Types.Nil.value)));
          };
      }
  };
  exports["coOperativeAccountNumberParser"] = coOperativeAccountNumberParser;
  exports["nationalWestMinsterAccountNumberParser"] = nationalWestMinsterAccountNumberParser;
  exports["parseAccountNumber"] = parseAccountNumber;
  exports["santanderAccountNumberParser"] = santanderAccountNumberParser;
  exports["sevenDigitAccountNumberParser"] = sevenDigitAccountNumberParser;
  exports["sixDigitAccountNumberParser"] = sixDigitAccountNumberParser;
  exports["standardAccountNumberParser"] = standardAccountNumberParser;
})(PS["ModulusCheck.Data.AccountNumber.Parser"] = PS["ModulusCheck.Data.AccountNumber.Parser"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Either = PS["Data.Either"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_List = PS["Data.List"];
  var Data_Maybe = PS["Data.Maybe"];
  var ModulusCheck_Checks = PS["ModulusCheck.Checks"];
  var ModulusCheck_Data_AccountNumber = PS["ModulusCheck.Data.AccountNumber"];
  var ModulusCheck_Data_AccountNumber_Parser = PS["ModulusCheck.Data.AccountNumber.Parser"];
  var ModulusCheck_Data_CheckRow = PS["ModulusCheck.Data.CheckRow"];
  var ModulusCheck_Data_Tables = PS["ModulusCheck.Data.Tables"];
  var ModulusCheckTypes = PS["ModulusCheckTypes"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Function = PS["Data.Function"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Control_Bind = PS["Control.Bind"];        
  var performCheck = function (v) {
      return function (v1) {
          if (v instanceof Data_List_Types.Nil) {
              return new Data_Either.Right(true);
          };
          if (v instanceof Data_List_Types.Cons && (v.value0.checkMethod instanceof ModulusCheck_Data_CheckRow.DblAl && (v.value0.exceptionCode instanceof Data_Maybe.Just && (v.value0.exceptionCode.value0 === 1 && v.value1 instanceof Data_List_Types.Nil)))) {
              return Data_Either.Right.create(ModulusCheck_Checks.exception1Check(v.value0)(v1));
          };
          if (v instanceof Data_List_Types.Cons && (v.value0.checkMethod instanceof ModulusCheck_Data_CheckRow.Mod11 && (v.value0.exceptionCode instanceof Data_Maybe.Just && (v.value0.exceptionCode.value0 === 2 && (v.value1 instanceof Data_List_Types.Cons && (v.value1.value0.checkMethod instanceof ModulusCheck_Data_CheckRow.Mod11 && (v.value1.value0.exceptionCode instanceof Data_Maybe.Just && (v.value1.value0.exceptionCode.value0 === 9 && v.value1.value1 instanceof Data_List_Types.Nil)))))))) {
              return ModulusCheck_Checks.exceptions2And9Check(v.value0.weights)(v.value1.value0.weights)(v1);
          };
          if (v instanceof Data_List_Types.Cons && (v.value0.exceptionCode instanceof Data_Maybe.Nothing && (v.value1 instanceof Data_List_Types.Cons && (v.value1.value0.checkMethod instanceof ModulusCheck_Data_CheckRow.DblAl && (v.value1.value0.exceptionCode instanceof Data_Maybe.Just && (v.value1.value0.exceptionCode.value0 === 3 && v.value1.value1 instanceof Data_List_Types.Nil)))))) {
              return ModulusCheck_Checks.exception3Check(v.value0)(v.value1.value0.weights)(v1);
          };
          if (v instanceof Data_List_Types.Cons && (v.value0.checkMethod instanceof ModulusCheck_Data_CheckRow.Mod11 && (v.value0.exceptionCode instanceof Data_Maybe.Just && (v.value0.exceptionCode.value0 === 4 && v.value1 instanceof Data_List_Types.Nil)))) {
              return ModulusCheck_Checks.exception4Check(v.value0.weights)(v1);
          };
          if (v instanceof Data_List_Types.Cons && (v.value0.checkMethod instanceof ModulusCheck_Data_CheckRow.Mod11 && (v.value0.exceptionCode instanceof Data_Maybe.Just && (v.value0.exceptionCode.value0 === 5 && (v.value1 instanceof Data_List_Types.Cons && (v.value1.value0.checkMethod instanceof ModulusCheck_Data_CheckRow.DblAl && (v.value1.value0.exceptionCode instanceof Data_Maybe.Just && (v.value1.value0.exceptionCode.value0 === 5 && v.value1.value1 instanceof Data_List_Types.Nil)))))))) {
              return ModulusCheck_Checks.exception5Check(v.value0.weights)(v.value1.value0.weights)(v1);
          };
          if (v instanceof Data_List_Types.Cons && (v.value0.exceptionCode instanceof Data_Maybe.Just && (v.value0.exceptionCode.value0 === 6 && (v.value1 instanceof Data_List_Types.Cons && (v.value1.value0.exceptionCode instanceof Data_Maybe.Just && (v.value1.value0.exceptionCode.value0 === 6 && v.value1.value1 instanceof Data_List_Types.Nil)))))) {
              return ModulusCheck_Checks.exception6Check(v.value0)(v.value1.value0)(v1);
          };
          if (v instanceof Data_List_Types.Cons && (v.value0.exceptionCode instanceof Data_Maybe.Just && (v.value0.exceptionCode.value0 === 7 && v.value1 instanceof Data_List_Types.Nil))) {
              return ModulusCheck_Checks.exception7Check(v.value0)(v1);
          };
          if (v instanceof Data_List_Types.Cons && (v.value0.exceptionCode instanceof Data_Maybe.Just && (v.value0.exceptionCode.value0 === 8 && v.value1 instanceof Data_List_Types.Nil))) {
              return ModulusCheck_Checks.exception8Check(v.value0)(v1);
          };
          if (v instanceof Data_List_Types.Cons && (v.value0.exceptionCode instanceof Data_Maybe.Just && (v.value0.exceptionCode.value0 === 10 && (v.value1 instanceof Data_List_Types.Cons && (v.value1.value0.exceptionCode instanceof Data_Maybe.Just && (v.value1.value0.exceptionCode.value0 === 11 && v.value1.value1 instanceof Data_List_Types.Nil)))))) {
              return ModulusCheck_Checks.exceptions10and11Check(v.value0)(v.value1.value0)(v1);
          };
          if (v instanceof Data_List_Types.Cons && (v.value0.exceptionCode instanceof Data_Maybe.Just && (v.value0.exceptionCode.value0 === 12 && (v.value1 instanceof Data_List_Types.Cons && (v.value1.value0.exceptionCode instanceof Data_Maybe.Just && (v.value1.value0.exceptionCode.value0 === 13 && v.value1.value1 instanceof Data_List_Types.Nil)))))) {
              return Control_Applicative.pure(Data_Either.applicativeEither)(ModulusCheck_Checks.exceptions12and13Check(v.value0)(v.value1.value0)(v1));
          };
          if (v instanceof Data_List_Types.Cons && (v.value0.exceptionCode instanceof Data_Maybe.Just && (v.value0.exceptionCode.value0 === 14 && v.value1 instanceof Data_List_Types.Nil))) {
              return ModulusCheck_Checks.exception14Check(v.value0)(v1);
          };
          if (Data_Foldable.all(Data_List_Types.foldableList)(Data_HeytingAlgebra.heytingAlgebraBoolean)(ModulusCheck_Checks.isStandardCheck)(v)) {
              return Data_Either.Right.create(Data_Foldable.all(Data_List_Types.foldableList)(Data_HeytingAlgebra.heytingAlgebraBoolean)(function (c) {
                  return ModulusCheck_Checks.performStandardCheck(c)(v1);
              })(v));
          };
          return new Data_Either.Left("Check not implemented for the given account number");
      };
  };
  var check = function (sortCode) {
      return function (accountNumber) {
          var performCheckWithParser = function (accountNumberParser) {
              return Control_Bind.bind(Data_Either.bindEither)(ModulusCheck_Data_AccountNumber_Parser.parseAccountNumber(sortCode)(accountNumber)(accountNumberParser))(function (v) {
                  return Control_Bind.bind(Data_Either.bindEither)(ModulusCheck_Data_Tables.getCheckRows(v.sortCodeString))(function (v1) {
                      return performCheck(v1)(v);
                  });
              });
          };
          var parsers = new Data_List_Types.Cons(ModulusCheck_Data_AccountNumber_Parser.standardAccountNumberParser, new Data_List_Types.Cons(ModulusCheck_Data_AccountNumber_Parser.sixDigitAccountNumberParser, new Data_List_Types.Cons(ModulusCheck_Data_AccountNumber_Parser.sevenDigitAccountNumberParser, new Data_List_Types.Cons(ModulusCheck_Data_AccountNumber_Parser.santanderAccountNumberParser, new Data_List_Types.Cons(ModulusCheck_Data_AccountNumber_Parser.nationalWestMinsterAccountNumberParser, new Data_List_Types.Cons(ModulusCheck_Data_AccountNumber_Parser.coOperativeAccountNumberParser, Data_List_Types.Nil.value))))));
          var collectResult = function (v) {
              return function (v1) {
                  if (v instanceof Data_Maybe.Nothing) {
                      return Data_Maybe.Just.create(performCheckWithParser(v1));
                  };
                  if (v instanceof Data_Maybe.Just && (v.value0 instanceof Data_Either.Right && v.value0.value0)) {
                      return new Data_Maybe.Just(v.value0);
                  };
                  if (v instanceof Data_Maybe.Just) {
                      var $88 = performCheckWithParser(v1);
                      if ($88 instanceof Data_Either.Right) {
                          return new Data_Maybe.Just($88);
                      };
                      return new Data_Maybe.Just(v.value0);
                  };
                  throw new Error("Failed pattern match at ModulusCheck line 57, column 5 - line 57, column 88: " + [ v.constructor.name, v1.constructor.name ]);
              };
          };
          var $91 = Data_Foldable.foldl(Data_List_Types.foldableList)(collectResult)(Data_Maybe.Nothing.value)(parsers);
          if ($91 instanceof Data_Maybe.Just) {
              return $91.value0;
          };
          if ($91 instanceof Data_Maybe.Nothing) {
              return new Data_Either.Left("Implementation error: no account number parsers defined");
          };
          throw new Error("Failed pattern match at ModulusCheck line 42, column 5 - line 45, column 3: " + [ $91.constructor.name ]);
      };
  };
  exports["check"] = check;
})(PS["ModulusCheck"] = PS["ModulusCheck"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Data_Array = PS["Data.Array"];
  var Data_Either = PS["Data.Either"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Void = PS["Data.Void"];
  var Halogen = PS["Halogen"];
  var Halogen_Aff = PS["Halogen.Aff"];
  var Halogen_HTML_Events = PS["Halogen.HTML.Events"];
  var Halogen_HTML = PS["Halogen.HTML"];
  var Halogen_HTML_Properties = PS["Halogen.HTML.Properties"];
  var Halogen_VDom_Driver = PS["Halogen.VDom.Driver"];
  var ModulusCheck = PS["ModulusCheck"];
  var Data_Function = PS["Data.Function"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Halogen_HTML_Core = PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = PS["Halogen.HTML.Elements"];
  var DOM_HTML_Indexed_InputType = PS["DOM.HTML.Indexed.InputType"];
  var Data_Functor = PS["Data.Functor"];
  var Control_Bind = PS["Control.Bind"];
  var Halogen_Query_HalogenM = PS["Halogen.Query.HalogenM"];
  var Control_Monad_State_Class = PS["Control.Monad.State.Class"];
  var Control_Applicative = PS["Control.Applicative"];
  var Halogen_Component = PS["Halogen.Component"];
  var Halogen_Aff_Util = PS["Halogen.Aff.Util"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Data_Unit = PS["Data.Unit"];        
  var SetValidateOnChange = (function () {
      function SetValidateOnChange(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      SetValidateOnChange.create = function (value0) {
          return function (value1) {
              return new SetValidateOnChange(value0, value1);
          };
      };
      return SetValidateOnChange;
  })();
  var SetSortCode = (function () {
      function SetSortCode(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      SetSortCode.create = function (value0) {
          return function (value1) {
              return new SetSortCode(value0, value1);
          };
      };
      return SetSortCode;
  })();
  var SetAccountNumber = (function () {
      function SetAccountNumber(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      SetAccountNumber.create = function (value0) {
          return function (value1) {
              return new SetAccountNumber(value0, value1);
          };
      };
      return SetAccountNumber;
  })();
  var PerformCheck = (function () {
      function PerformCheck(value0) {
          this.value0 = value0;
      };
      PerformCheck.create = function (value0) {
          return new PerformCheck(value0);
      };
      return PerformCheck;
  })();
  var Valid = (function () {
      function Valid() {

      };
      Valid.value = new Valid();
      return Valid;
  })();
  var Invalid = (function () {
      function Invalid() {

      };
      Invalid.value = new Invalid();
      return Invalid;
  })();
  var $$Error = (function () {
      function $$Error(value0) {
          this.value0 = value0;
      };
      $$Error.create = function (value0) {
          return new $$Error(value0);
      };
      return $$Error;
  })();
  var emptyRow = function (v) {
      return {
          sortCode: "", 
          accountNumber: "", 
          checkResult: v
      };
  };
  var checkAccountNumber = function (sortCode) {
      return function (accountNumber) {
          var toCheckResult = function (v) {
              if (v instanceof Data_Either.Right && v.value0) {
                  return Valid.value;
              };
              if (v instanceof Data_Either.Right && !v.value0) {
                  return Invalid.value;
              };
              if (v instanceof Data_Either.Left) {
                  return new $$Error(v.value0);
              };
              throw new Error("Failed pattern match at Main line 50, column 5 - line 50, column 40: " + [ v.constructor.name ]);
          };
          return toCheckResult(ModulusCheck.check(sortCode)(accountNumber));
      };
  };
  var ui = (function () {
      var resultString = function (v) {
          if (v instanceof Valid) {
              return "valid";
          };
          if (v instanceof Invalid) {
              return "invalid";
          };
          if (v instanceof $$Error) {
              return "error: " + v.value0;
          };
          throw new Error("Failed pattern match at Main line 84, column 3 - line 85, column 3: " + [ v.constructor.name ]);
      };
      var resultClassName = function (v) {
          if (v instanceof Valid) {
              return "valid";
          };
          if (v instanceof Invalid) {
              return "invalid";
          };
          if (v instanceof $$Error) {
              return "error";
          };
          throw new Error("Failed pattern match at Main line 89, column 3 - line 90, column 3: " + [ v.constructor.name ]);
      };
      var renderValidateOnChangeToggle = function (value) {
          return Halogen_HTML_Elements.div_([ Halogen_HTML_Elements.input([ Halogen_HTML_Properties.type_(Halogen_HTML_Core.inputTypeIsProp)(DOM_HTML_Indexed_InputType.InputCheckbox.value), Halogen_HTML_Properties.title("Validate on keypress"), Halogen_HTML_Properties.id_("validateOnChange"), Halogen_HTML_Properties.checked(value), Halogen_HTML_Events.onChecked(Halogen_HTML_Events.input(SetValidateOnChange.create)) ]), Halogen_HTML_Elements.label([ Halogen_HTML_Properties["for"]("validateOnChange") ])([ Halogen_HTML_Core.text("Validate on keypress") ]) ]);
      };
      var renderPreviousRow = function (row) {
          return Halogen_HTML_Elements.tr_([ Halogen_HTML_Elements.td_([ Halogen_HTML_Core.text(row.sortCode) ]), Halogen_HTML_Elements.td_([ Halogen_HTML_Core.text(row.accountNumber) ]), Halogen_HTML_Elements.td([ Halogen_HTML_Properties.class_(resultClassName(row.checkResult)) ])([ Halogen_HTML_Core.text(resultString(row.checkResult)) ]) ]);
      };
      var renderPreviousRowsTable = function (rows) {
          return Halogen_HTML_Elements.table_([ Halogen_HTML_Elements.thead_([ Halogen_HTML_Elements.tr_([ Halogen_HTML_Elements.th_([ Halogen_HTML_Core.text("sort code") ]), Halogen_HTML_Elements.th_([ Halogen_HTML_Core.text("account number") ]), Halogen_HTML_Elements.th_([ Halogen_HTML_Core.text("result") ]) ]) ]), Halogen_HTML_Elements.tbody_(Data_Functor.map(Data_Functor.functorArray)(renderPreviousRow)(rows)) ]);
      };
      var renderCurrentRow = function (row) {
          var resultClass = function (v) {
              if (v instanceof Data_Maybe.Nothing) {
                  return "nothing";
              };
              if (v instanceof Data_Maybe.Just) {
                  return resultClassName(v.value0);
              };
              throw new Error("Failed pattern match at Main line 144, column 7 - line 145, column 7: " + [ v.constructor.name ]);
          };
          var result = function (v) {
              if (v instanceof Data_Maybe.Nothing) {
                  return "";
              };
              if (v instanceof Data_Maybe.Just) {
                  return resultString(v.value0);
              };
              throw new Error("Failed pattern match at Main line 148, column 7 - line 149, column 7: " + [ v.constructor.name ]);
          };
          return Halogen_HTML_Elements.div_([ Halogen_HTML_Elements.input([ Halogen_HTML_Properties.type_(Halogen_HTML_Core.inputTypeIsProp)(DOM_HTML_Indexed_InputType.InputText.value), Halogen_HTML_Properties.placeholder("sort code"), Halogen_HTML_Properties.value(row.sortCode), Halogen_HTML_Events.onValueInput(Halogen_HTML_Events.input(SetSortCode.create)) ]), Halogen_HTML_Elements.input([ Halogen_HTML_Properties.type_(Halogen_HTML_Core.inputTypeIsProp)(DOM_HTML_Indexed_InputType.InputText.value), Halogen_HTML_Properties.placeholder("account number"), Halogen_HTML_Properties.value(row.accountNumber), Halogen_HTML_Events.onValueInput(Halogen_HTML_Events.input(SetAccountNumber.create)) ]), Halogen_HTML_Elements.button([ Halogen_HTML_Properties.title("Check"), Halogen_HTML_Events.onClick(Halogen_HTML_Events.input_(PerformCheck.create)) ])([ Halogen_HTML_Core.text("Check") ]), Halogen_HTML_Elements.span([ Halogen_HTML_Properties.id_("validation-inline"), Halogen_HTML_Properties.class_(resultClass(row.checkResult)) ])([ Halogen_HTML_Core.text(result(row.checkResult)) ]) ]);
      };
      var render = function (state) {
          return Halogen_HTML_Elements.div_([ renderValidateOnChangeToggle(state.validateOnChange), renderCurrentRow(state.currentRow), renderPreviousRowsTable(state.previousRows) ]);
      };
      var initialState = {
          validateOnChange: false, 
          currentRow: emptyRow(Data_Maybe.Nothing.value), 
          previousRows: [  ]
      };
      var checkRow = function (row) {
          var $29 = {};
          for (var $30 in row) {
              if ({}.hasOwnProperty.call(row, $30)) {
                  $29[$30] = row[$30];
              };
          };
          $29.checkResult = checkAccountNumber(row.sortCode)(row.accountNumber);
          return $29;
      };
      var checkCurrentRow = function (row) {
          var checked = checkRow(row);
          var $32 = {};
          for (var $33 in checked) {
              if ({}.hasOwnProperty.call(checked, $33)) {
                  $32[$33] = checked[$33];
              };
          };
          $32.checkResult = new Data_Maybe.Just(checked.checkResult);
          return $32;
      };
      var performOptionalCurrentRowCheck = function (v) {
          return function (row) {
              if (v) {
                  return checkCurrentRow(row);
              };
              if (!v) {
                  var $37 = {};
                  for (var $38 in row) {
                      if ({}.hasOwnProperty.call(row, $38)) {
                          $37[$38] = row[$38];
                      };
                  };
                  $37.checkResult = Data_Maybe.Nothing.value;
                  return $37;
              };
              throw new Error("Failed pattern match at Main line 168, column 3 - line 168, column 65: " + [ v.constructor.name, row.constructor.name ]);
          };
      };
      var updateCurrentRow = function (currentRow) {
          return function (state) {
              var $40 = {};
              for (var $41 in state) {
                  if ({}.hasOwnProperty.call(state, $41)) {
                      $40[$41] = state[$41];
                  };
              };
              $40.currentRow = performOptionalCurrentRowCheck(state.validateOnChange)(currentRow);
              return $40;
          };
      };
      var $$eval = function (v) {
          if (v instanceof SetValidateOnChange) {
              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(function (state) {
                  return updateCurrentRow(state.currentRow)((function () {
                      var $44 = {};
                      for (var $45 in state) {
                          if ({}.hasOwnProperty.call(state, $45)) {
                              $44[$45] = state[$45];
                          };
                      };
                      $44.validateOnChange = v.value0;
                      return $44;
                  })());
              }))(function () {
                  return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1);
              });
          };
          if (v instanceof SetSortCode) {
              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(function (state) {
                  return updateCurrentRow((function () {
                      var $49 = {};
                      for (var $50 in state.currentRow) {
                          if ({}.hasOwnProperty.call(state.currentRow, $50)) {
                              $49[$50] = state["currentRow"][$50];
                          };
                      };
                      $49.sortCode = v.value0;
                      return $49;
                  })())(state);
              }))(function () {
                  return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1);
              });
          };
          if (v instanceof SetAccountNumber) {
              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(function (state) {
                  return updateCurrentRow((function () {
                      var $54 = {};
                      for (var $55 in state.currentRow) {
                          if ({}.hasOwnProperty.call(state.currentRow, $55)) {
                              $54[$55] = state["currentRow"][$55];
                          };
                      };
                      $54.accountNumber = v.value0;
                      return $54;
                  })())(state);
              }))(function () {
                  return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1);
              });
          };
          if (v instanceof PerformCheck) {
              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(function (state) {
                  var $59 = {};
                  for (var $60 in state) {
                      if ({}.hasOwnProperty.call(state, $60)) {
                          $59[$60] = state[$60];
                      };
                  };
                  $59.currentRow = emptyRow(Data_Maybe.Nothing.value);
                  $59.previousRows = Data_Array.snoc(state.previousRows)(checkRow(state.currentRow));
                  return $59;
              }))(function () {
                  return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value0);
              });
          };
          throw new Error("Failed pattern match at Main line 176, column 3 - line 178, column 14: " + [ v.constructor.name ]);
      };
      return Halogen_Component.component(Halogen_HTML_Core.bifunctorHTML)({
          initialState: Data_Function["const"](initialState), 
          render: render, 
          "eval": $$eval, 
          receiver: Data_Function["const"](Data_Maybe.Nothing.value)
      });
  })();
  var main = Halogen_Aff_Util.runHalogenAff(Control_Bind.bind(Control_Monad_Aff.bindAff)(Halogen_Aff_Util.awaitBody)(function (v) {
      return Halogen_VDom_Driver.runUI(ui)(Data_Unit.unit)(v);
  }));
  exports["Valid"] = Valid;
  exports["Invalid"] = Invalid;
  exports["Error"] = $$Error;
  exports["SetValidateOnChange"] = SetValidateOnChange;
  exports["SetSortCode"] = SetSortCode;
  exports["SetAccountNumber"] = SetAccountNumber;
  exports["PerformCheck"] = PerformCheck;
  exports["checkAccountNumber"] = checkAccountNumber;
  exports["emptyRow"] = emptyRow;
  exports["main"] = main;
  exports["ui"] = ui;
})(PS["Main"] = PS["Main"] || {});
PS["Main"].main();

},{}]},{},[1]);
